SELECT COUNT(*) FROM `club`
SELECT count(*) FROM `club`
SELECT `Name` FROM club ORDER BY `Name` ASC
SELECT Name FROM club ORDER BY Name
SELECT `Manager`, `Captain` FROM club
SELECT DISTINCT `Manager`, `Captain` FROM `club`
SELECT Name FROM club WHERE Manufacturer != 'Nike'
SELECT Name FROM club WHERE Manufacturer NOT LIKE 'Nike'
SELECT `Name` FROM player ORDER BY `Wins_count` ASC
SELECT `Name` FROM player ORDER BY `Wins_count` ASC
SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1
SELECT `Name` FROM player ORDER BY `Earnings` DESC LIMIT 1
SELECT DISTINCT `Country` FROM player WHERE `Earnings`  >  1200000
SELECT DISTINCT `Country` FROM player WHERE `Earnings`  >  1200000
SELECT `Country` FROM `player` WHERE `Wins_count` > 2 ORDER BY `Earnings` DESC LIMIT 1
SELECT `Country` FROM `player` WHERE `Wins_count` > 2 ORDER BY `Earnings` DESC LIMIT 1
SELECT `player`.`Name`, `club`.`Name` FROM `player` JOIN `club` ON `player`.`Club_ID`  =  `club`.`Club_ID`
SELECT `player`.`Name`, `club`.`Name` FROM `player` JOIN `club` ON `player`.`Club_ID`  =  `club`.`Club_ID`
SELECT DISTINCT `Name` FROM `club` WHERE `Club_ID` IN (SELECT `Club_ID` FROM `player` WHERE `Wins_count`  >  2)
SELECT DISTINCT t1.Name FROM club AS t1 JOIN player AS t2 ON t1.Club_ID  =  t2.Club_ID WHERE t2.Wins_count  >  2
SELECT t1.Name FROM player AS t1 JOIN club AS t2 ON t1.Club_ID  =  t2.Club_ID WHERE t2.Manager  =  'Sam Allardyce'
SELECT t1.Name FROM player AS t1 JOIN club AS t2 ON t1.Club_ID  =  t2.Club_ID WHERE t2.Manager = 'Sam Allardyce'
SELECT T1.Name FROM club AS T1 INNER JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Name ORDER BY AVG(T2.Earnings) DESC
SELECT T1.Name FROM club AS T1 INNER JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY AVG(T2.Earnings) DESC
SELECT Manufacturer, COUNT(DISTINCT Club_ID) FROM club GROUP BY Manufacturer
SELECT Manufacturer, count(DISTINCT Club_ID) FROM club GROUP BY Manufacturer
SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Manufacturer` FROM `club` GROUP BY `Manufacturer` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Manufacturer` FROM `club` GROUP BY `Manufacturer` HAVING COUNT(*)  >  1
SELECT `Manufacturer` FROM `club` GROUP BY `Manufacturer` HAVING count(*)  >  1
SELECT `Country` FROM `player` GROUP BY `Country` HAVING COUNT(*)  >  1
SELECT `Country` FROM `player` GROUP BY `Country` HAVING count(*)  >  1
SELECT `Name` FROM `club` WHERE `Club_ID` NOT IN (SELECT `Club_ID` FROM `player`)
SELECT `Name` FROM `club` EXCEPT SELECT T1.`Name` FROM `club` AS T1 INNER JOIN `player` AS T2 ON T1.`Club_ID`  =  T2.`Club_ID`
SELECT Country FROM player WHERE Earnings  >  1400000 UNION SELECT Country FROM player WHERE Earnings  <  1100000
SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000
SELECT count(DISTINCT `Country`) FROM player
SELECT count(DISTINCT `Country`) FROM player
SELECT `Earnings` FROM player WHERE `Country` = "Australia" OR `Country` = "Zimbabwe"
SELECT Earnings FROM player WHERE Country = 'Australia' OR Country = 'Zimbabwe'
SELECT T1.`customer_id`, T1.`customer_first_name`, T1.`customer_last_name` FROM `Customers` AS T1 INNER JOIN `Orders` AS T2 ON T1.`customer_id` = T2.`customer_id` INNER JOIN `Order_Items` AS T3 ON T2.`order_id` = T3.`order_id` GROUP BY T1.`customer_id` HAVING count(T2.`order_id`) > 2 INTERSECT SELECT T1.`customer_id`, T1.`customer_first_name`, T1.`customer_last_name` FROM `Customers` AS T1 INNER JOIN `Orders` AS T2 ON T1.`customer_id` = T2.`customer_id` INNER JOIN `Order_Items` AS T3 ON T2.`order_id` = T3.`order_id` GROUP BY T1.`customer_id` HAVING count(T3.`order_item_id`) >= 3
SELECT DISTINCT T1.`customer_id`, T1.`customer_first_name`, T1.`customer_last_name` FROM `Customers` AS T1 INNER JOIN `Orders` AS T2 ON T1.`customer_id` = T2.`customer_id` INNER JOIN `Order_Items` AS T3 ON T2.`order_id` = T3.`order_id` GROUP BY T1.`customer_id` HAVING count(T2.`order_id`) > 2 AND count(T3.`product_id`) >= 3
SELECT `Orders`.`order_id`, `Orders`.`order_status_code`, count(DISTINCT `Order_Items`.`product_id`) FROM `Orders` JOIN `Order_Items` ON `Orders`.`order_id` = `Order_Items`.`order_id` GROUP BY `Orders`.`order_id`
SELECT `Orders`.`order_id`, `Orders`.`order_status_code`, COUNT(DISTINCT `Order_Items`.`product_id`) FROM `Orders` JOIN `Order_Items` ON `Orders`.`order_id` = `Order_Items`.`order_id` GROUP BY `Orders`.`order_id`
SELECT DISTINCT `date_order_placed` FROM `Orders` WHERE `date_order_placed` = (SELECT min(`date_order_placed`) FROM `Orders`) UNION SELECT T1.`date_order_placed` FROM `Orders` AS T1 JOIN `Order_Items` AS T2 ON T1.`order_id` = T2.`order_id` GROUP BY T1.`order_id` HAVING count(*) > 1
SELECT DISTINCT `date_order_placed` FROM `Orders` INTERSECT SELECT `T1`.`date_order_placed` FROM `Orders` AS `T1` JOIN `Order_Items` AS `T2` ON `T1`.`order_id` = `T2`.`order_id` GROUP BY `T1`.`order_id` HAVING count(*) > 1
SELECT `customer_first_name`, `customer_middle_initial`, `customer_last_name` FROM `Customers` WHERE NOT EXISTS (SELECT 1 FROM `Orders` WHERE `Orders`.`customer_id` = `Customers`.`customer_id`)
SELECT `customer_first_name`, `customer_last_name`, `customer_middle_initial` FROM `Customers` EXCEPT SELECT T1.`customer_first_name`, T1.`customer_last_name`, T1.`customer_middle_initial` FROM `Customers` AS T1 INNER JOIN `Orders` AS T2 ON T1.`customer_id` = T2.`customer_id`
SELECT DISTINCT `product_id`, `product_name`, `product_price`, `product_color` FROM `Products` WHERE `product_id` NOT IN (SELECT `product_id` FROM `Order_Items` GROUP BY `product_id` HAVING COUNT(*) >= 2)
SELECT DISTINCT `product_id`, `product_name`, `product_price`, `product_color` FROM `Products` WHERE `product_id` IN (SELECT `product_id` FROM `Order_Items` GROUP BY `product_id` HAVING count(*) < 2)
SELECT DISTINCT T1.`order_id`, T2.date_order_placed FROM `Order_Items` AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T1.`order_id` HAVING count(*)  >=  2
SELECT `T1`.`order_id`, `T1`.`date_order_placed` FROM `Orders` AS T1 INNER JOIN `Order_Items` AS T2 ON `T1`.`order_id` = `T2`.`order_id` GROUP BY `T1`.`order_id` HAVING COUNT(`T2`.`product_id`)  >=  2
SELECT `p`.`product_id`, `p`.`product_name`, `p`.`product_price` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` GROUP BY `p`.`product_id` ORDER BY count(*) DESC LIMIT 1
SELECT `p`.`product_id`, `p`.`product_name`, `p`.`product_price` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` GROUP BY `p`.`product_id` ORDER BY count(*) DESC LIMIT 1
SELECT `order_id`, SUM(`product_price`) AS sum FROM `Order_Items` AS T1 INNER JOIN `Products` AS T2 ON T1.`product_id` = T2.`product_id` GROUP BY `order_id` ORDER BY sum ASC LIMIT 1
SELECT `Orders`.`order_id`, SUM(`Products`.`product_price`) AS total_cost FROM `Orders` JOIN `Order_Items` ON `Orders`.`order_id` = `Order_Items`.`order_id` JOIN `Products` ON `Order_Items`.`product_id` = `Products`.`product_id` GROUP BY `Orders`.`order_id` ORDER BY total_cost ASC LIMIT 1
SELECT DISTINCT `payment_method_code` FROM `Customer_Payment_Methods`
SELECT `payment_method_code` FROM `Customer_Payment_Methods` GROUP BY `payment_method_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.gender_code, count(T2.product_id) FROM `Customers` AS T1 JOIN `Orders` AS T3 ON T1.customer_id  =  T3.customer_id JOIN `Order_Items` AS T2 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code
SELECT T1.gender_code, count(T2.product_id) FROM `Customers` AS T1 INNER JOIN `Orders` AS T3 ON T1.customer_id = T3.customer_id INNER JOIN `Order_Items` AS T2 ON T3.order_id = T2.order_id GROUP BY T1.gender_code
SELECT c.`gender_code`, count(o.`order_id`) FROM `Customers` AS c JOIN `Orders` AS o ON c.`customer_id` = o.`customer_id` GROUP BY c.`gender_code`
SELECT T1.gender_code, count(T2.order_id) FROM `Customers` AS T1 JOIN `Orders` AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.gender_code
SELECT `customer_first_name`, `customer_middle_initial`, `customer_last_name`, `payment_method_code` FROM `Customers` JOIN `Customer_Payment_Methods` ON `Customers`.`customer_id` = `Customer_Payment_Methods`.`customer_id`
SELECT T1.`customer_first_name`, T1.`customer_middle_initial`, T1.`customer_last_name`, T2.`payment_method_code` FROM `Customers` AS T1 INNER JOIN `Customer_Payment_Methods` AS T2 ON T1.`customer_id` = T2.`customer_id`
SELECT T1.`invoice_status_code`, T1.`invoice_date`, T2.`shipment_date` FROM `Invoices` AS T1 INNER JOIN `Shipments` AS T2 ON T1.`invoice_number` = T2.`invoice_number`
SELECT T1.`invoice_status_code`, T1.`invoice_date`, T2.`shipment_date` FROM `Invoices` AS T1 INNER JOIN `Shipments` AS T2 ON T1.`invoice_number` = T2.`invoice_number`
SELECT DISTINCT T1.`product_name`, T4.`shipment_date` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id` JOIN `Orders` AS T3 ON T2.`order_id` = T3.`order_id` JOIN `Shipments` AS T4 ON T3.`order_id` = T4.`order_id`
SELECT DISTINCT T1.`product_name`, T4.`shipment_date` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id` JOIN `Shipment_Items` AS T3 ON T2.`order_item_id` = T3.`order_item_id` JOIN `Shipments` AS T4 ON T3.`shipment_id` = T4.`shipment_id`
SELECT DISTINCT T1.`order_item_status_code`, T3.`shipment_tracking_number` FROM `Order_Items` AS T1 INNER JOIN `Shipment_Items` AS T2 ON T1.`order_item_id` = T2.`order_item_id` INNER JOIN `Shipments` AS T3 ON T2.`shipment_id` = T3.`shipment_id`
SELECT T1.`order_item_status_code`, T3.`shipment_tracking_number` FROM `Order_Items` AS T1 INNER JOIN `Shipment_Items` AS T2 ON T1.`order_item_id` = T2.`order_item_id` INNER JOIN `Shipments` AS T3 ON T2.`shipment_id` = T3.`shipment_id`
SELECT DISTINCT T1.`product_name`, T1.`product_color` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id` JOIN `Shipment_Items` AS T3 ON T2.`order_item_id` = T3.`order_item_id`
SELECT DISTINCT `p`.`product_name`, `p`.`product_color` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` JOIN `Shipment_Items` AS `si` ON `oi`.`order_item_id` = `si`.`order_item_id`
SELECT DISTINCT `p`.`product_name`, `p`.`product_price`, `p`.`product_description` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` JOIN `Orders` AS `o` ON `oi`.`order_id` = `o`.`order_id` JOIN `Customers` AS `c` ON `o`.`customer_id` = `c`.`customer_id` WHERE `c`.`gender_code` = 'Female'
SELECT DISTINCT `p`.`product_name`, `p`.`product_price`, `p`.`product_description` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` JOIN `Orders` AS `o` ON `oi`.`order_id` = `o`.`order_id` JOIN `Customers` AS `c` ON `o`.`customer_id` = `c`.`customer_id` WHERE `c`.`gender_code` = 'Female'
SELECT DISTINCT T2.`invoice_status_code` FROM `Orders` AS T1 LEFT JOIN `Shipments` AS T3 ON T1.`order_id` = T3.`order_id` LEFT JOIN `Invoices` AS T2 ON T3.`invoice_number` = T2.`invoice_number` WHERE T3.`shipment_id` IS NULL
SELECT DISTINCT T2.`invoice_status_code` FROM `Orders` AS T1 LEFT JOIN `Invoices` AS T2 ON T1.`order_id` = T2.`invoice_number` LEFT JOIN `Shipments` AS T3 ON T1.`order_id` = T3.`order_id` WHERE T3.`order_id` IS NULL
SELECT `Orders`.`order_id`, `Orders`.`date_order_placed`, SUM(`Products`.`product_price`) FROM `Orders` JOIN `Order_Items` ON `Orders`.`order_id` = `Order_Items`.`order_id` JOIN `Products` ON `Order_Items`.`product_id` = `Products`.`product_id` GROUP BY `Orders`.`order_id`
SELECT DISTINCT T1.`order_id`, T1.`date_order_placed`, SUM(T2.`product_price`) FROM `Orders` AS T1 INNER JOIN `Order_Items` AS T3 ON T1.`order_id` = T3.`order_id` INNER JOIN `Products` AS T2 ON T3.`product_id` = T2.`product_id` GROUP BY T1.`order_id`
SELECT count(DISTINCT `customer_id`) FROM `Orders`
SELECT count(DISTINCT `customer_id`) FROM `Orders`
SELECT count(DISTINCT `order_item_status_code`) FROM `Order_Items`
SELECT count(DISTINCT `order_item_status_code`) FROM `Order_Items`
SELECT count(DISTINCT `payment_method_code`) FROM `Customer_Payment_Methods`
SELECT count(DISTINCT `payment_method_code`) FROM `Customer_Payment_Methods`
SELECT `login_name`, `login_password` FROM `Customers` WHERE `phone_number` LIKE '+12%'
SELECT `login_name`, `login_password` FROM `Customers` WHERE `phone_number` LIKE '+12%'
SELECT DISTINCT `product_size` FROM `Products` WHERE `product_name` LIKE '%Dell%'
SELECT DISTINCT `product_size` FROM `Products` WHERE `product_name` LIKE '%Dell%'
SELECT `product_price`, `product_size` FROM `Products` WHERE `product_price` > (SELECT avg(`product_price`) FROM `Products`)
SELECT `product_price`, `product_size` FROM `Products` WHERE `product_price` > (SELECT AVG(`product_price`) FROM `Products`)
SELECT count(*) FROM `Products` WHERE `product_id` NOT IN (SELECT `product_id` FROM `Order_Items`)
SELECT count(*) FROM `Products` WHERE `product_id` NOT IN (SELECT `product_id` FROM `Order_Items`)
SELECT count(*) FROM `Customers` WHERE NOT EXISTS (SELECT 1 FROM `Customer_Payment_Methods` WHERE `Customers`.`customer_id` = `Customer_Payment_Methods`.`customer_id`)
SELECT count(*) FROM `Customers` WHERE NOT EXISTS (SELECT 1 FROM `Customer_Payment_Methods` WHERE `Customers`.`customer_id` = `Customer_Payment_Methods`.`customer_id`)
SELECT DISTINCT `order_status_code`, `date_order_placed` FROM `Orders`
SELECT `order_status_code`, `date_order_placed` FROM `Orders`
SELECT `address_line_1`, `town_city`, `county` FROM `Customers` WHERE `country` = 'USA'
SELECT `address_line_1`, `town_city`, `county` FROM `Customers` WHERE `country` = 'USA'
SELECT DISTINCT `Customers`.`customer_first_name`, `Products`.`product_name` FROM `Customers` JOIN `Orders` ON `Customers`.`customer_id` = `Orders`.`customer_id` JOIN `Order_Items` ON `Orders`.`order_id` = `Order_Items`.`order_id` JOIN `Products` ON `Order_Items`.`product_id` = `Products`.`product_id`
SELECT DISTINCT `Customers`.`customer_first_name`, `Products`.`product_name` FROM `Customers` INNER JOIN `Orders` ON `Customers`.`customer_id` = `Orders`.`customer_id` INNER JOIN `Order_Items` ON `Orders`.`order_id` = `Order_Items`.`order_id` INNER JOIN `Products` ON `Order_Items`.`product_id` = `Products`.`product_id`
SELECT count(DISTINCT `shipment_id`) FROM Shipments
SELECT count(DISTINCT `T1`.`product_id`) FROM `Order_Items` AS T1 INNER JOIN `Shipment_Items` AS T2 ON `T1`.`order_item_id` = `T2`.`order_item_id`
SELECT avg(`product_price`) FROM `Products`
SELECT avg(`product_price`) FROM `Products`
SELECT avg(`product_price`) FROM `Products`
SELECT avg(`product_price`) FROM `Products`
SELECT `email_address`, `town_city`, `county` FROM `Customers` WHERE `gender_code` = (SELECT `gender_code` FROM `Customers` GROUP BY `gender_code` ORDER BY COUNT(*) ASC LIMIT 1)
SELECT `email_address`, `town_city`, `county` FROM `Customers` WHERE `gender_code` = (SELECT `gender_code` FROM `Customers` AS t1 JOIN `Orders` AS t2 ON t1.`customer_id` = t2.`customer_id` GROUP BY `gender_code` ORDER BY count(*) ASC LIMIT 1)
SELECT T1.date_order_placed FROM `Orders` AS T1 INNER JOIN `Customer_Payment_Methods` AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2
SELECT DISTINCT T1.date_order_placed FROM `Orders` AS T1 INNER JOIN `Customers` AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_id IN (SELECT customer_id FROM Customer_Payment_Methods GROUP BY customer_id HAVING count(*)  >=  2)
SELECT `order_status_code` FROM `Orders` GROUP BY `order_status_code` ORDER BY count(*) ASC LIMIT 1
SELECT `order_status_code` FROM `Orders` GROUP BY `order_status_code` ORDER BY COUNT(*) ASC LIMIT 1
SELECT DISTINCT `T1`.`product_id`, `T1`.`product_description` FROM `Products` AS `T1` JOIN `Order_Items` AS `T2` ON `T1`.`product_id` = `T2`.`product_id` GROUP BY `T1`.`product_id` HAVING count(*) > 3
SELECT DISTINCT `T1`.`product_id`, `T1`.`product_description` FROM `Products` AS T1 INNER JOIN `Order_Items` AS T2 ON `T1`.`product_id` = `T2`.`product_id` GROUP BY `T1`.`product_id` HAVING count(*) > 3
SELECT T1.invoice_date, T1.invoice_number FROM `Invoices` AS T1 INNER JOIN `Shipments` AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2
SELECT `invoice_date`, `invoice_number` FROM `Invoices` WHERE `invoice_number` IN (SELECT `invoice_number` FROM `Shipments` GROUP BY `invoice_number` HAVING COUNT(*)  >=  2)
SELECT DISTINCT `shipment_tracking_number`, `shipment_date` FROM `Shipments`
SELECT `shipment_tracking_number`, `shipment_date` FROM `Shipments`
SELECT `product_color`, `product_description`, `product_size` FROM `Products` WHERE `product_price` < (SELECT max(`product_price`) FROM `Products`)
SELECT `product_color`, `product_description`, `product_size` FROM `Products` WHERE `product_price` != (SELECT MAX(`product_price`) FROM `Products`)
SELECT Name FROM director WHERE Age > (SELECT avg(Age) FROM director)
SELECT Name FROM director ORDER BY Age DESC LIMIT 1
SELECT count(*) FROM `channel` WHERE Internet LIKE '%bbc%'
SELECT count(DISTINCT `Digital_terrestrial_channel`) FROM channel
SELECT `Title` FROM `program` ORDER BY `Start_Year` DESC
SELECT T1.Name FROM director AS T1 JOIN program AS T2 ON T1.Director_ID  =  T2.Director_ID GROUP BY T1.Director_ID ORDER BY count(*) DESC LIMIT 1
SELECT `Name`, `Age` FROM `director` WHERE `Director_ID` = (SELECT `Director_ID` FROM `program` GROUP BY `Director_ID` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `Title` FROM `program` ORDER BY `Start_Year` DESC LIMIT 1
SELECT DISTINCT T1.Name, T1.Internet FROM channel AS T1 INNER JOIN program AS T2 ON T1.Channel_ID  =  T2.Channel_ID GROUP BY T1.Channel_ID HAVING COUNT(*)  >  1
SELECT T1.Name, count(T2.Program_ID) FROM `channel` AS T1 JOIN `program` AS T2 ON T1.Channel_ID  =  T2.Channel_ID GROUP BY T1.Name
SELECT count(*) FROM `channel` WHERE NOT EXISTS (SELECT * FROM `program` WHERE `program`.`Channel_ID` = `channel`.`Channel_ID`)
SELECT T1.Name FROM director AS T1 JOIN program AS T2 ON T1.Director_ID  =  T2.Director_ID WHERE T2.Title  =  'Dracula'
SELECT T1.Name, T1.Internet FROM `channel` AS T1 JOIN `director_admin` AS T2 ON T1.Channel_ID  =  T2.Channel_ID GROUP BY T1.Channel_ID ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM director WHERE Age BETWEEN 30 AND 60
SELECT DISTINCT `t1`.`Name` FROM `channel` AS `t1` INNER JOIN `director_admin` AS `t2` ON `t1`.`Channel_ID` = `t2`.`Channel_ID` INNER JOIN `director` AS `t3` ON `t2`.`Director_ID` = `t3`.`Director_ID` WHERE `t3`.`Age` < 40 INTERSECT SELECT DISTINCT `t1`.`Name` FROM `channel` AS `t1` INNER JOIN `director_admin` AS `t2` ON `t1`.`Channel_ID` = `t2`.`Channel_ID` INNER JOIN `director` AS `t3` ON `t2`.`Director_ID` = `t3`.`Director_ID` WHERE `t3`.`Age` > 60
SELECT DISTINCT T1.Channel_ID, T1.Name FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID  =  T2.Channel_ID JOIN director AS T3 ON T2.Director_ID  =  T3.Director_ID WHERE T3.Name != 'Hank Baskett'
SELECT COUNT(*) FROM `radio`
SELECT Transmitter FROM radio ORDER BY ERP_kW ASC
SELECT `tv_show_name`, `Original_Airdate` FROM tv_show
SELECT Station_name FROM city_channel WHERE Affiliation != 'ABC'
SELECT Transmitter FROM radio WHERE ERP_kW > 150 OR ERP_kW < 30
SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1
SELECT avg(ERP_kW) FROM `radio`
SELECT DISTINCT Affiliation, count(*) FROM `city_channel` GROUP BY Affiliation
SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Affiliation` FROM `city_channel` GROUP BY `Affiliation` HAVING count(*)  >  3
SELECT `City`, `Station_name` FROM `city_channel` ORDER BY `Station_name` ASC
SELECT T1.Transmitter, T2.City FROM radio AS T1 INNER JOIN city_channel_radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID INNER JOIN city_channel AS T2 ON T3.City_channel_ID  =  T2.ID
SELECT `radio`.`Transmitter`, `city_channel`.`Station_name` FROM `radio` JOIN `city_channel_radio` ON `radio`.`Radio_ID` = `city_channel_radio`.`Radio_ID` JOIN `city_channel` ON `city_channel_radio`.`City_channel_ID` = `city_channel`.`ID` ORDER BY `radio`.`ERP_kW` DESC
SELECT `Transmitter`, count(DISTINCT `City_channel_ID`) FROM `radio` AS T1 JOIN `city_channel_radio` AS T2 ON T1.`Radio_ID`  =  T2.`Radio_ID` GROUP BY `Transmitter`
SELECT DISTINCT `Transmitter` FROM `radio` WHERE `Radio_ID` NOT IN (SELECT `Radio_ID` FROM `city_channel_radio`)
SELECT `Model` FROM `vehicle` WHERE `Top_Speed` = (SELECT MAX(`Top_Speed`) FROM `vehicle` WHERE `Power` > 6000)
SELECT `Model` FROM `vehicle` WHERE `Power` > 6000 ORDER BY `Top_Speed` DESC LIMIT 1
SELECT Name FROM driver WHERE Citizenship = 'United States'
SELECT Name FROM driver WHERE Citizenship = 'United States'
SELECT `Driver_ID`, count(*) FROM vehicle_driver GROUP BY `Driver_ID` ORDER BY count(*) DESC LIMIT 1
SELECT `Driver_ID`, count(*) FROM vehicle_driver GROUP BY `Driver_ID` ORDER BY count(*) DESC LIMIT 1
SELECT max(Power), avg(Power) FROM `vehicle` WHERE Builder = 'Zhuzhou'
SELECT max(Power), avg(Power) FROM `vehicle` WHERE Builder = 'Zhuzhou'
SELECT `Vehicle_ID` FROM vehicle_driver GROUP BY `Vehicle_ID` ORDER BY count(*) ASC LIMIT 1
SELECT `Vehicle_ID` FROM `vehicle_driver` GROUP BY `Vehicle_ID` ORDER BY count(*) ASC LIMIT 1
SELECT `Top_Speed`, `Power` FROM `vehicle` WHERE `Build_Year` = 1996
SELECT Top_Speed, Power FROM `vehicle` WHERE Build_Year = 1996
SELECT DISTINCT `Build_Year`, `Model`, `Builder` FROM `vehicle`
SELECT `Build_Year`, `Model`, `Builder` FROM vehicle
SELECT count(DISTINCT `Driver_ID`) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID  =  T2.Vehicle_ID WHERE T2.Build_Year  =  2012
SELECT COUNT(DISTINCT `Driver_ID`) FROM `vehicle_driver` AS T1 JOIN `vehicle` AS T2 ON T1.`Vehicle_ID`  =  T2.`Vehicle_ID` WHERE T2.`Build_Year` = 2012
SELECT count(DISTINCT `Driver_ID`) FROM driver WHERE Racing_Series = 'NASCAR'
SELECT COUNT(DISTINCT `Driver_ID`) FROM `driver` WHERE `Racing_Series` = 'NASCAR'
SELECT avg(Top_Speed) FROM `vehicle`
SELECT avg(Top_Speed) FROM `vehicle`
SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID  =  T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID  =  T3.Vehicle_ID WHERE T3.Power  >  5000
SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T3.Power > 5000
SELECT Model FROM vehicle WHERE `Total_Production` > 100 OR `Top_Speed` > 150
SELECT Model FROM vehicle WHERE Total_Production  >  100 OR Top_Speed  >  150
SELECT `Model`, `Build_Year` FROM `vehicle` WHERE `Model` LIKE '%DJ%'
SELECT `Model`, `Build_Year` FROM `vehicle` WHERE `Model` LIKE '%DJ%'
SELECT `Model` FROM `vehicle` WHERE NOT EXISTS (SELECT 1 FROM `vehicle_driver` WHERE `vehicle`.`Vehicle_ID` = `vehicle_driver`.`Vehicle_ID`)
SELECT `Model` FROM `vehicle` WHERE NOT EXISTS (SELECT 1 FROM `vehicle_driver` WHERE `vehicle`.`Vehicle_ID` = `vehicle_driver`.`Vehicle_ID`)
SELECT T1.`Vehicle_ID`, T1.`Model` FROM `vehicle` AS T1 INNER JOIN `vehicle_driver` AS T2 ON T1.`Vehicle_ID` = T2.`Vehicle_ID` GROUP BY T1.`Vehicle_ID` HAVING COUNT(T2.`Driver_ID`) = 2 UNION SELECT `Vehicle_ID`, `Model` FROM `vehicle` WHERE `Builder` = 'Ziyang'
SELECT `Vehicle_ID`, `Model` FROM `vehicle` WHERE `Vehicle_ID` IN (SELECT `Vehicle_ID` FROM `vehicle_driver` GROUP BY `Vehicle_ID` HAVING COUNT(*) = 2) UNION SELECT `Vehicle_ID`, `Model` FROM `vehicle` WHERE `Builder` = 'Ziyang'
SELECT `Vehicle_ID`, `Model` FROM `vehicle` WHERE `Vehicle_ID` IN (SELECT `Vehicle_ID` FROM `vehicle_driver` GROUP BY `Vehicle_ID` HAVING COUNT(*) > 2) UNION SELECT T1.`Vehicle_ID`, T1.`Model` FROM `vehicle` AS T1 JOIN `vehicle_driver` AS T2 ON T1.`Vehicle_ID` = T2.`Vehicle_ID` JOIN `driver` AS T3 ON T2.`Driver_ID` = T3.`Driver_ID` WHERE T3.`Name` = 'Jeff Gordon'
SELECT `v`.`Vehicle_ID`, `v`.`Model` FROM `vehicle` AS `v` JOIN `vehicle_driver` AS `vd` ON `v`.`Vehicle_ID` = `vd`.`Vehicle_ID` WHERE `v`.`Vehicle_ID` IN (SELECT `Vehicle_ID` FROM `vehicle_driver` GROUP BY `Vehicle_ID` HAVING COUNT(*) > 2) UNION SELECT `v`.`Vehicle_ID`, `v`.`Model` FROM `vehicle` AS `v` JOIN `vehicle_driver` AS `vd` ON `v`.`Vehicle_ID` = `vd`.`Vehicle_ID` JOIN `driver` AS `d` ON `vd`.`Driver_ID` = `d`.`Driver_ID` WHERE `d`.`Name` = 'Jeff Gordon'
SELECT count(DISTINCT Vehicle_ID) FROM vehicle ORDER BY Top_Speed DESC LIMIT 1
SELECT COUNT(*) FROM `vehicle` WHERE `Top_Speed` = (SELECT MAX(`Top_Speed`) FROM `vehicle`)
SELECT Name FROM driver ORDER BY Name
SELECT `Name` FROM driver ORDER BY `Name`
SELECT Racing_Series, count(DISTINCT Driver_ID) FROM driver GROUP BY Racing_Series
SELECT Racing_Series, count(DISTINCT Driver_ID) FROM driver GROUP BY Racing_Series
SELECT DISTINCT T1.Name, T1.Citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T3.Model = 'DJ1'
SELECT t1.Name, t1.Citizenship FROM driver AS t1 INNER JOIN vehicle_driver AS t2 ON t1.Driver_ID  =  t2.Driver_ID INNER JOIN vehicle AS t3 ON t2.Vehicle_ID  =  t3.Vehicle_ID WHERE t3.Model  =  'DJ1'
SELECT count(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver)
SELECT count(DISTINCT `Driver_ID`) FROM driver WHERE `Driver_ID` NOT IN (SELECT `Driver_ID` FROM vehicle_driver)
SELECT COUNT(*) FROM `Exams`
SELECT COUNT(*) FROM `Exams`
SELECT DISTINCT `Subject_Code` FROM `Exams` ORDER BY `Subject_Code` ASC
SELECT DISTINCT `Subject_Code` FROM `Exams` ORDER BY `Subject_Code`
SELECT `Exam_Name`, `Exam_Date` FROM `Exams` WHERE `Subject_Code` != 'Database'
SELECT `Exam_Date`, `Exam_Name` FROM `Exams` WHERE `Subject_Code` NOT LIKE 'Database'
SELECT `Exam_Date` FROM `Exams` WHERE `Subject_Code` LIKE '%data%' ORDER BY `Exam_Date` DESC
SELECT `Exam_Date` FROM `Exams` WHERE `Subject_Code` LIKE '%data%' ORDER BY `Exam_Date` DESC
SELECT DISTINCT Type_of_Question_Code, count(*) FROM `Questions` GROUP BY Type_of_Question_Code
SELECT `Type_of_Question_Code`, COUNT(*) FROM `Questions` GROUP BY `Type_of_Question_Code`
SELECT DISTINCT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal'
SELECT DISTINCT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal'
SELECT count(DISTINCT `Comments`) FROM `Student_Answers`
SELECT count(DISTINCT `Comments`) FROM `Student_Answers`
SELECT `Student_Answer_Text` FROM `Student_Answers` GROUP BY `Student_Answer_Text` ORDER BY count(*) DESC
SELECT `Student_Answer_Text` FROM `Student_Answers` GROUP BY `Student_Answer_Text` ORDER BY COUNT(*) DESC
SELECT T1.First_Name, T2.Date_of_Answer FROM `Students` AS T1 JOIN `Student_Answers` AS T2 ON T1.Student_ID  =  T2.Student_ID
SELECT T1.First_Name, T2.Date_of_Answer FROM `Students` AS T1 JOIN `Student_Answers` AS T2 ON T1.Student_ID  =  T2.Student_ID
SELECT T1.`Email_Adress`, T2.`Date_of_Answer` FROM `Students` AS T1 JOIN `Student_Answers` AS T2 ON T1.`Student_ID` = T2.`Student_ID` ORDER BY T2.`Date_of_Answer` DESC
SELECT T1.`Email_Adress`, T2.`Date_of_Answer` FROM `Students` AS T1 JOIN `Student_Answers` AS T2 ON T1.`Student_ID` = T2.`Student_ID` ORDER BY T2.`Date_of_Answer` DESC
SELECT `Assessment` FROM `Student_Assessments` GROUP BY `Assessment` ORDER BY count(*) ASC LIMIT 1
SELECT `Assessment` FROM `Student_Assessments` GROUP BY `Assessment` ORDER BY COUNT(*) ASC LIMIT 1
SELECT DISTINCT T1.First_Name FROM `Students` AS T1 INNER JOIN `Student_Answers` AS T2 ON T1.Student_ID = T2.Student_ID GROUP BY T1.Student_ID HAVING count(*)  >=  2
SELECT DISTINCT T1.First_Name FROM Students AS T1 INNER JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID GROUP BY T1.Student_ID HAVING count(*)  >=  2
SELECT `Valid_Answer_Text` FROM `Valid_Answers` GROUP BY `Valid_Answer_Text` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Valid_Answer_Text` FROM `Valid_Answers` GROUP BY `Valid_Answer_Text` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Last_Name` FROM `Students` WHERE `Gender_MFU` != 'M'
SELECT DISTINCT `Last_Name` FROM `Students` WHERE `Gender_MFU` != 'M'
SELECT `Gender_MFU`, count(*) FROM `Students` GROUP BY `Gender_MFU`
SELECT `Gender_MFU`, count(*) FROM `Students` GROUP BY `Gender_MFU`
SELECT `Last_Name` FROM `Students` WHERE `Gender_MFU` = 'F' OR `Gender_MFU` = 'M'
SELECT `Last_Name` FROM `Students` WHERE `Gender_MFU` = 'F' OR `Gender_MFU` = 'M'
SELECT DISTINCT `First_Name` FROM `Students` WHERE NOT EXISTS (SELECT 1 FROM `Student_Answers` WHERE `Students`.`Student_ID` = `Student_Answers`.`Student_ID`)
SELECT `First_Name` FROM `Students` EXCEPT SELECT T1.`First_Name` FROM `Students` AS T1 INNER JOIN `Student_Answers` AS T2 ON T1.`Student_ID` = T2.`Student_ID`
SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal' INTERSECT SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Absent'
SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal' INTERSECT SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Absent'
SELECT DISTINCT `Type_of_Question_Code` FROM `Questions` GROUP BY `Type_of_Question_Code` HAVING COUNT(*)  >=  3
SELECT DISTINCT `Type_of_Question_Code` FROM `Questions` GROUP BY `Type_of_Question_Code` HAVING count(*)  >=  3
SELECT * FROM `Students`
SELECT DISTINCT * FROM `Students`
SELECT COUNT(*) FROM `Addresses`
SELECT COUNT(*) FROM `Addresses`
SELECT `address_id`, `address_details` FROM `Addresses`
SELECT DISTINCT `address_id`, `address_details` FROM `Addresses`
SELECT COUNT(*) FROM `Products`
SELECT COUNT(*) FROM `Products`
SELECT `product_id`, `product_type_code`, `product_name` FROM `Products`
SELECT DISTINCT `product_id`, `product_type_code`, `product_name` FROM `Products`
SELECT `product_price` FROM `Products` WHERE `product_name` = 'Monitor'
SELECT `product_price` FROM `Products` WHERE `product_name` = 'Monitor'
SELECT MIN(product_price), AVG(product_price), MAX(product_price) FROM `Products`
SELECT MIN(product_price), AVG(product_price), MAX(product_price) FROM `Products`
SELECT avg(`product_price`) FROM `Products` WHERE `product_type_code` = 'Clothes'
SELECT avg(product_price) FROM `Products` WHERE product_type_code = 'Clothes'
SELECT count(*) FROM `Products` WHERE `product_type_code` = 'Hardware'
SELECT count(*) FROM `Products` WHERE `product_type_code` = 'Hardware'
SELECT `product_name` FROM `Products` WHERE `product_price` > (SELECT avg(`product_price`) FROM `Products`)
SELECT `product_name` FROM `Products` WHERE `product_price` > (SELECT avg(`product_price`) FROM `Products`)
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' AND `product_price` > (SELECT avg(`product_price`) FROM `Products` WHERE `product_type_code` = 'Hardware')
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' AND `product_price` > (SELECT avg(`product_price`) FROM `Products` WHERE `product_type_code` = 'Hardware')
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Clothes' ORDER BY `product_price` DESC LIMIT 1
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Clothes' ORDER BY `product_price` DESC LIMIT 1
SELECT `product_id`, `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC LIMIT 1
SELECT `product_id`, `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC LIMIT 1
SELECT `product_name` FROM `Products` ORDER BY `product_price` DESC
SELECT `product_name` FROM `Products` ORDER BY `product_price` DESC
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC
SELECT `product_type_code`, count(*) FROM `Products` GROUP BY `product_type_code`
SELECT `product_type_code`, count(*) FROM `Products` GROUP BY `product_type_code`
SELECT `product_type_code`, AVG(`product_price`) FROM `Products` GROUP BY `product_type_code`
SELECT `product_type_code`, AVG(`product_price`) FROM `Products` GROUP BY `product_type_code`
SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` HAVING count(*)  >=  2
SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` HAVING count(*)  >=  2
SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` ORDER BY count(*) DESC LIMIT 1
SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(*) FROM `Customers`
SELECT COUNT(*) FROM `Customers`
SELECT `customer_id`, `customer_name` FROM `Customers`
SELECT `customer_id`, `customer_name` FROM `Customers`
SELECT `customer_address`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_name` = 'Jeromy'
SELECT `customer_address`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_name` = 'Jeromy'
SELECT `payment_method_code`, COUNT(`customer_id`) FROM `Customers` GROUP BY `payment_method_code`
SELECT `payment_method_code`, COUNT(DISTINCT `customer_id`) FROM `Customers` GROUP BY `payment_method_code`
SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `customer_name` FROM `Customers` WHERE `payment_method_code` = (SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(*) ASC LIMIT 1)
SELECT `customer_name` FROM `Customers` WHERE `payment_method_code` = (SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(*) ASC LIMIT 1)
SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy'
SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy'
SELECT DISTINCT `payment_method_code` FROM `Customers`
SELECT DISTINCT `payment_method_code` FROM `Customers`
SELECT `product_id`, `product_type_code` FROM `Products` ORDER BY `product_name`
SELECT DISTINCT `product_id`, `product_type_code` FROM `Products` ORDER BY `product_name`
SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` ORDER BY count(*) ASC LIMIT 1
SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` ORDER BY COUNT(*) ASC LIMIT 1
SELECT COUNT(*) FROM `Customer_Orders`
SELECT COUNT(*) FROM `Customer_Orders`
SELECT `order_id`, `order_date`, `order_status_code` FROM `Customer_Orders` WHERE `customer_id` = (SELECT `customer_id` FROM `Customers` WHERE `customer_name` = 'Jeromy')
SELECT `T1`.`order_id`, `T1`.`order_date`, `T1`.`order_status_code` FROM `Customer_Orders` AS `T1` JOIN `Customers` AS `T2` ON `T1`.`customer_id` = `T2`.`customer_id` WHERE `T2`.`customer_name` = 'Jeromy'
SELECT `Customers`.`customer_name`, `Customers`.`customer_id`, COUNT(*) FROM `Customers` JOIN `Customer_Orders` ON `Customers`.`customer_id` = `Customer_Orders`.`customer_id` GROUP BY `Customers`.`customer_id`
SELECT `c`.`customer_name`, `c`.`customer_id`, COUNT(DISTINCT `co`.`order_id`) AS `number_of_orders` FROM `Customers` AS `c` JOIN `Customer_Orders` AS `co` ON `c`.`customer_id` = `co`.`customer_id` GROUP BY `c`.`customer_id`, `c`.`customer_name`
SELECT `customer_id`, `customer_name`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_id` = (SELECT `customer_id` FROM `Customer_Orders` GROUP BY `customer_id` ORDER BY count(*) DESC LIMIT 1)
SELECT `customer_id`, `customer_name`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_id` = (SELECT `customer_id` FROM `Customer_Orders` GROUP BY `customer_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `order_status_code`, COUNT(*) FROM `Customer_Orders` GROUP BY `order_status_code`
SELECT `order_status_code`, count(*) FROM `Customer_Orders` GROUP BY `order_status_code`
SELECT `order_status_code` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `order_status_code` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT count(*) FROM `Customers` EXCEPT SELECT count(DISTINCT `customer_id`) FROM `Customer_Orders`
SELECT count(*) FROM `Customers` WHERE `customer_id` NOT IN (SELECT `customer_id` FROM `Customer_Orders`)
SELECT DISTINCT `product_name` FROM `Products` WHERE `product_id` NOT IN (SELECT `product_id` FROM `Order_Items`)
SELECT `product_name` FROM `Products` EXCEPT SELECT T1.`product_name` FROM `Products` AS T1 INNER JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id`
SELECT sum(`order_quantity`) FROM `Order_Items` AS T1 JOIN `Products` AS T2 ON T1.`product_id` = T2.`product_id` WHERE T2.`product_name` = 'Monitor'
SELECT sum(`order_quantity`) FROM `Order_Items` AS T1 INNER JOIN `Products` AS T2 ON T1.`product_id` = T2.`product_id` WHERE T2.`product_name` = 'Monitor'
SELECT count(DISTINCT T1.customer_id) FROM `Customer_Orders` AS T1 INNER JOIN `Order_Items` AS T2 ON T1.order_id = T2.order_id INNER JOIN `Products` AS T3 ON T2.product_id = T3.product_id WHERE T3.product_name = 'Monitor'
SELECT count(DISTINCT T1.customer_id) FROM `Customer_Orders` AS T1 INNER JOIN `Order_Items` AS T2 ON T1.order_id = T2.order_id INNER JOIN `Products` AS T3 ON T2.product_id = T3.product_id WHERE T3.product_name = 'Monitor'
SELECT count(DISTINCT `customer_id`) FROM `Customer_Orders`
SELECT count(DISTINCT `customer_id`) FROM `Customer_Orders`
SELECT `customer_id` FROM `Customers` EXCEPT SELECT `customer_id` FROM `Customer_Orders`
SELECT `customer_id` FROM `Customers` EXCEPT SELECT `customer_id` FROM `Customer_Orders`
SELECT `order_date`, `order_id` FROM `Customer_Orders` WHERE `order_id` IN (SELECT `order_id` FROM `Order_Items` GROUP BY `order_id` HAVING SUM(CASE WHEN `order_quantity` > 6 THEN 1 ELSE 0 END) > 0 OR COUNT(*) > 3)
SELECT `order_id`, `order_date` FROM `Customer_Orders` WHERE `order_id` IN (SELECT `order_id` FROM `Order_Items` GROUP BY `order_id` HAVING SUM(`order_quantity`) > 6 UNION SELECT `order_id` FROM `Order_Items` GROUP BY `order_id` HAVING COUNT(`product_id`) > 3)
SELECT COUNT(*) FROM `building`
SELECT COUNT(*) FROM `building`
SELECT `Name` FROM `building` ORDER BY `Number_of_Stories` ASC
SELECT `Name` FROM building ORDER BY `Number_of_Stories` ASC
SELECT `Address` FROM `building` ORDER BY `Completed_Year` DESC
SELECT `Address` FROM `building` ORDER BY `Completed_Year` DESC
SELECT max(`Number_of_Stories`) FROM building WHERE `Completed_Year` != 1980
SELECT MAX(`Number_of_Stories`) FROM `building` WHERE `Completed_Year` != 1980
SELECT AVG(Population) FROM `region`
SELECT AVG(Population) FROM `region`
SELECT `Name` FROM `region` ORDER BY `Name` ASC
SELECT `Name` FROM `region` ORDER BY `Name`
SELECT Capital FROM region WHERE Area > 10000
SELECT Capital FROM region WHERE Area > 10000
SELECT Capital FROM region ORDER BY Population DESC LIMIT 1
SELECT Capital FROM region ORDER BY Population DESC LIMIT 1
SELECT `Name` FROM `region` ORDER BY `Area` DESC LIMIT 5
SELECT `Name` FROM `region` ORDER BY `Area` DESC LIMIT 5
SELECT `building`.`Name`, `region`.`Name` FROM `building` JOIN `region` ON `building`.`Region_ID` = `region`.`Region_ID`
SELECT `building`.`Name`, `region`.`Name` FROM `building` JOIN `region` ON `building`.`Region_ID` = `region`.`Region_ID`
SELECT DISTINCT T2.Name FROM building AS T1 INNER JOIN region AS T2 ON T1.Region_ID = T2.Region_ID
SELECT T2.Name FROM building AS T1 INNER JOIN region AS T2 ON T1.Region_ID = T2.Region_ID
SELECT T2.Capital FROM building AS T1 INNER JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Region_ID ORDER BY count(*) DESC LIMIT 1
SELECT T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY count(*) DESC LIMIT 1
SELECT `building`.`Address`, `region`.`Capital` FROM `building` JOIN `region` ON `building`.`Region_ID` = `region`.`Region_ID`
SELECT `building`.`Address`, `region`.`Name` FROM `building` JOIN `region` ON `building`.`Region_ID` = `region`.`Region_ID`
SELECT T1.`Number_of_Stories` FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  'Abruzzo'
SELECT T1.`Number_of_Stories` FROM building AS T1 INNER JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  'Abruzzo'
SELECT `Completed_Year`, count(*) FROM `building` GROUP BY `Completed_Year`
SELECT `Completed_Year`, count(*) FROM building GROUP BY `Completed_Year`
SELECT `Completed_Year` FROM `building` GROUP BY `Completed_Year` ORDER BY count(*) DESC LIMIT 1
SELECT `Completed_Year` FROM building GROUP BY `Completed_Year` ORDER BY count(*) DESC LIMIT 1
SELECT `Name` FROM `region` EXCEPT SELECT T1.`Name` FROM `region` AS T1 INNER JOIN `building` AS T2 ON T1.`Region_ID`  =  T2.`Region_ID`
SELECT `Name` FROM `region` EXCEPT SELECT T1.`Name` FROM `region` AS T1 JOIN `building` AS T2 ON T1.`Region_ID`  =  T2.`Region_ID`
SELECT `Completed_Year` FROM `building` WHERE `Number_of_Stories`  >  20 INTERSECT SELECT `Completed_Year` FROM `building` WHERE `Number_of_Stories`  <  15
SELECT `Completed_Year` FROM `building` WHERE `Number_of_Stories`  >  20 INTERSECT SELECT `Completed_Year` FROM `building` WHERE `Number_of_Stories`  <  15
SELECT DISTINCT `Address` FROM building
SELECT DISTINCT `Address` FROM building
SELECT `Completed_Year` FROM `building` ORDER BY `Number_of_Stories` DESC
SELECT `Completed_Year` FROM `building` ORDER BY `Number_of_Stories` DESC
SELECT `Channel_Details` FROM `Channels` ORDER BY `Channel_Details`
SELECT Channel_Details FROM Channels ORDER BY Channel_Details
SELECT COUNT(*) FROM `Services`
SELECT COUNT(*) FROM `Services`
SELECT `Analytical_Layer_Type_Code` FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Analytical_Layer_Type_Code` FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.`Service_Details` FROM `Services` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Service_ID` = T2.`Service_ID` INNER JOIN `Customers` AS T3 ON T2.`Customer_ID` = T3.`Customer_ID` WHERE T3.`Customer_Details` = 'Hardy Kutch'
SELECT T2.`Service_Details` FROM `Customers` AS T1 INNER JOIN `Services` AS T2 INNER JOIN `Customers_and_Services` AS T3 ON T1.`Customer_ID` = T3.`Customer_ID` AND T2.`Service_ID` = T3.`Service_ID` WHERE T1.`Customer_Details` = 'Hardy Kutch'
SELECT `Service_Details` FROM `Services` WHERE `Service_ID` IN (SELECT `Service_ID` FROM `Customer_Interactions` GROUP BY `Service_ID` HAVING COUNT(*) > 3)
SELECT T1.`Service_Details` FROM `Services` AS T1 JOIN `Customer_Interactions` AS T2 ON T1.`Service_ID` = T2.`Service_ID` GROUP BY T1.`Service_ID` HAVING count(*)  >  3
SELECT T2.Customer_Details FROM `Customers_and_Services` AS T1 INNER JOIN `Customers` AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_ID ORDER BY count(*) DESC LIMIT 1
SELECT T1.Customer_Details FROM Customers AS T1 INNER JOIN Customers_and_Services AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_ID ORDER BY COUNT(T2.Service_ID) DESC LIMIT 1
SELECT T1.Customer_Details FROM Customers AS T1 INNER JOIN Customers_and_Services AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_ID ORDER BY count(*) DESC LIMIT 1
SELECT T1.Customer_Details FROM Customers AS T1 INNER JOIN Customers_and_Services AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Customer_ID ORDER BY count(*) DESC LIMIT 1
SELECT `Customer_Details` FROM `Customers` EXCEPT SELECT T1.`Customer_Details` FROM `Customers` AS T1 INNER JOIN `Customers_and_Services` AS T2 ON T1.`Customer_ID`  =  T2.`Customer_ID`
SELECT `Customer_Details` FROM `Customers` EXCEPT SELECT T1.`Customer_Details` FROM `Customers` AS T1 INNER JOIN `Customers_and_Services` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID`
SELECT T1.Customer_Details FROM Customers AS T1 INNER JOIN Customers_and_Services AS T2 ON T1.Customer_ID  =  T2.Customer_ID INNER JOIN Services AS T3 ON T2.Service_ID  =  T3.Service_ID WHERE T3.Service_ID IN (SELECT Service_ID FROM Customers_and_Services GROUP BY Service_ID ORDER BY COUNT(*) ASC LIMIT 1)
SELECT DISTINCT T1.Customer_Details FROM Customers AS T1 INNER JOIN Customers_and_Services AS T2 ON T1.Customer_ID  =  T2.Customer_ID INNER JOIN Services AS T3 ON T2.Service_ID  =  T3.Service_ID WHERE T3.Service_ID IN (SELECT Service_ID FROM Customers_and_Services GROUP BY Service_ID ORDER BY count(*) ASC LIMIT 1)
SELECT count(DISTINCT `Customers_and_Services_Details`) FROM `Customers_and_Services`
SELECT count(*) FROM `Customers_and_Services`
SELECT `Customer_ID`, `Customer_Details` FROM `Customers` WHERE `Customer_Details` LIKE '%Kutch%'
SELECT `Customer_Details` FROM `Customers` WHERE `Customer_Details` LIKE '%Kutch%'
SELECT T1.Service_Details FROM Services AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.Service_ID  =  T2.Service_ID INNER JOIN Customers AS T3 ON T2.Customer_ID  =  T3.Customer_ID WHERE T3.Customer_Details  =  'Hardy Kutch' UNION SELECT T1.Service_Details FROM Services AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Services_and_Channels_Details  =  'good'
SELECT DISTINCT T1.`Service_Details` FROM `Services` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Service_ID` = T2.`Service_ID` INNER JOIN `Customers` AS T3 ON T2.`Customer_ID` = T3.`Customer_ID` WHERE T3.`Customer_Details` = 'Hardy Kutch' UNION SELECT DISTINCT T1.`Service_Details` FROM `Services` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Service_ID` = T2.`Service_ID` WHERE T2.`Services_and_Channels_Details` = 'good'
SELECT T1.Service_Details FROM Services AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.Service_ID  =  T2.Service_ID INNER JOIN Customers AS T3 ON T2.Customer_ID  =  T3.Customer_ID WHERE T3.Customer_Details  =  'Hardy Kutch' INTERSECT SELECT T1.Service_Details FROM Services AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Services_and_Channels_Details  =  'bad'
SELECT T1.`Service_Details` FROM `Services` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Service_ID` = T2.`Service_ID` INNER JOIN `Customers` AS T3 ON T2.`Customer_ID` = T3.`Customer_ID` WHERE T3.`Customer_Details` = 'Hardy Kutch' INTERSECT SELECT T1.`Service_Details` FROM `Services` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Service_ID` = T2.`Service_ID` WHERE T2.`Services_and_Channels_Details` = 'bad'
SELECT T1.`Service_Details` FROM `Services` AS T1 JOIN `Customer_Interactions` AS T2 ON T1.`Service_ID` = T2.`Service_ID` JOIN `Channels` AS T3 ON T2.`Channel_ID` = T3.`Channel_ID` WHERE T3.`Channel_Details` LIKE '15 ij'
SELECT T1.Service_Details FROM Services AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.Service_ID = T2.Service_ID INNER JOIN Channels AS T3 ON T2.Channel_ID = T3.Channel_ID WHERE T3.Channel_Details = '15 ij'
SELECT T1.`Customer_Details` FROM `Customers` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T2.`Status_Code` = 'Close' AND T2.`Services_and_Channels_Details` = 'bad'
SELECT T1.Customer_Details FROM Customers AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Status_Code = 'Stuck' AND T2.Services_and_Channels_Details = 'bad'
SELECT COUNT(*) FROM `Integration_Platform` WHERE `Integration_Platform_Details` = 'Success'
SELECT COUNT(*) FROM `Integration_Platform` WHERE `Integration_Platform_Details` LIKE '%Success%'
SELECT DISTINCT T3.Customer_Details FROM Customer_Interactions AS T1 INNER JOIN Integration_Platform AS T2 ON T1.Customer_Interaction_ID = T2.Customer_Interaction_ID INNER JOIN Customers AS T3 ON T1.Customer_ID = T3.Customer_ID WHERE T2.Integration_Platform_Details NOT LIKE 'Success'
SELECT DISTINCT T1.Customer_Details FROM Customers AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.Customer_ID = T2.Customer_ID INNER JOIN Integration_Platform AS T3 ON T2.Customer_Interaction_ID = T3.Customer_Interaction_ID WHERE T3.Integration_Platform_Details = 'Fail'
SELECT T1.Service_Details FROM Services AS T1 LEFT JOIN Customer_Interactions AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Customer_ID IS NULL
SELECT `Service_Details` FROM `Services` WHERE NOT EXISTS (SELECT 1 FROM `Customers_and_Services` WHERE `Customers_and_Services`.`Service_ID` = `Services`.`Service_ID`)
SELECT `Analytical_Layer_Type_Code`, COUNT(*) FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code`
SELECT `Analytical_Layer_Type_Code`, COUNT(*) FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code`
SELECT T1.`Service_Details` FROM `Services` AS T1 JOIN `Customers_and_Services` AS T2 ON T1.`Service_ID` = T2.`Service_ID` WHERE T2.`Customers_and_Services_Details` LIKE 'unsatisfied'
SELECT T2.Service_Details FROM Customers_and_Services AS T1 INNER JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T1.Customers_and_Services_Details LIKE '%unsatisfied%'
SELECT COUNT(*) FROM `Vehicles`
SELECT COUNT(*) FROM `Vehicles`
SELECT `name` FROM `Vehicles` ORDER BY `Model_year` DESC
SELECT `name` FROM `Vehicles` ORDER BY `Model_year` DESC
SELECT DISTINCT `Type_of_powertrain` FROM `Vehicles`
SELECT DISTINCT `Type_of_powertrain` FROM `Vehicles`
SELECT `name`, `Type_of_powertrain`, `Annual_fuel_cost` FROM `Vehicles` WHERE `Model_year` = 2013 OR `Model_year` = 2014
SELECT `name`, `Type_of_powertrain`, `Annual_fuel_cost` FROM `Vehicles` WHERE `Model_year` IN (2013, 2014)
SELECT `Type_of_powertrain` FROM `Vehicles` WHERE `Model_year` = 2014 INTERSECT SELECT `Type_of_powertrain` FROM `Vehicles` WHERE `Model_year` = 2013
SELECT `Type_of_powertrain` FROM Vehicles WHERE `Model_year` = 2013 INTERSECT SELECT `Type_of_powertrain` FROM Vehicles WHERE `Model_year` = 2014
SELECT `Type_of_powertrain`, count(*) FROM `Vehicles` GROUP BY `Type_of_powertrain`
SELECT Type_of_powertrain, count(*) FROM `Vehicles` GROUP BY Type_of_powertrain
SELECT `Type_of_powertrain` FROM `Vehicles` GROUP BY `Type_of_powertrain` ORDER BY count(*) DESC LIMIT 1
SELECT `Type_of_powertrain` FROM `Vehicles` GROUP BY `Type_of_powertrain` ORDER BY COUNT(*) DESC LIMIT 1
SELECT min(Annual_fuel_cost), max(Annual_fuel_cost), avg(Annual_fuel_cost) FROM `Vehicles`
SELECT MIN(Annual_fuel_cost), MAX(Annual_fuel_cost), AVG(Annual_fuel_cost) FROM `Vehicles`
SELECT `name`, `Model_year` FROM `Vehicles` WHERE `City_fuel_economy_rate` <= `Highway_fuel_economy_rate`
SELECT `name`, `Model_year` FROM `Vehicles` WHERE `City_fuel_economy_rate` <= `Highway_fuel_economy_rate`
SELECT `Type_of_powertrain`, AVG(`Annual_fuel_cost`) FROM `Vehicles` GROUP BY `Type_of_powertrain` HAVING COUNT(*)  >=  2
SELECT `Type_of_powertrain`, AVG(`Annual_fuel_cost`) FROM `Vehicles` GROUP BY `Type_of_powertrain` HAVING COUNT(*) >= 2
SELECT `name`, `age`, `membership_credit` FROM `Customers`
SELECT `name`, `age`, `membership_credit` FROM `Customers`
SELECT `name`, `age` FROM `Customers` ORDER BY `membership_credit` DESC LIMIT 1
SELECT `name`, `age` FROM `Customers` ORDER BY `membership_credit` DESC LIMIT 1
SELECT AVG(age) FROM `Customers` WHERE membership_credit > (SELECT AVG(membership_credit) FROM `Customers`)
SELECT AVG(T1.age) FROM `Customers` AS T1 WHERE T1.membership_credit > (SELECT avg(membership_credit) FROM `Customers`)
SELECT * FROM `Discount`
SELECT * FROM `Discount`
SELECT T1.name, sum(T2.total_hours) FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id  =  T2.vehicles_id GROUP BY T1.name
SELECT T1.name, sum(T2.total_hours) FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id GROUP BY T1.name
SELECT `name` FROM `Vehicles` EXCEPT SELECT T1.`name` FROM `Vehicles` AS T1 JOIN `Renting_history` AS T2 ON T1.id = T2.vehicles_id
SELECT `name` FROM `Vehicles` EXCEPT SELECT T1.`name` FROM `Vehicles` AS T1 JOIN `Renting_history` AS T2 ON T1.`id` = T2.`vehicles_id`
SELECT DISTINCT T1.name FROM Customers AS T1 INNER JOIN Renting_history AS T2 ON T1.id = T2.customer_id GROUP BY T1.id HAVING count(*)  >=  2
SELECT DISTINCT T1.name FROM Customers AS T1 INNER JOIN Renting_history AS T2 ON T1.id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2
SELECT `name`, `Model_year` FROM `Vehicles` WHERE `id` = (SELECT `vehicles_id` FROM `Renting_history` GROUP BY `vehicles_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `name`, `Model_year` FROM `Vehicles` WHERE `id` = (SELECT `vehicles_id` FROM `Renting_history` GROUP BY `vehicles_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T1.name FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id ORDER BY T2.total_hours DESC
SELECT T1.name FROM Vehicles AS T1 INNER JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id ORDER BY T2.total_hours DESC
SELECT `name` FROM Discount WHERE id = (SELECT discount_id FROM Renting_history GROUP BY discount_id ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T2.name FROM Renting_history AS T1 INNER JOIN Discount AS T2 ON T1.discount_id = T2.id GROUP BY T1.discount_id ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT T1.name, T1.Type_of_powertrain FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id WHERE T2.total_hours > 30
SELECT DISTINCT T1.name, T1.Type_of_powertrain FROM Vehicles AS T1 INNER JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id WHERE T2.total_hours > 30
SELECT DISTINCT Type_of_powertrain, avg(City_fuel_economy_rate), avg(Highway_fuel_economy_rate) FROM `Vehicles` GROUP BY Type_of_powertrain
SELECT DISTINCT AVG(`City_fuel_economy_rate`), AVG(`Highway_fuel_economy_rate`) FROM `Vehicles` GROUP BY `Type_of_powertrain`
SELECT avg(`amount_of_loan`) FROM `Student_Loans`
SELECT avg(`amount_of_loan`) FROM `Student_Loans`
SELECT `bio_data`, `Students`.`student_id` FROM `Students` INNER JOIN `Classes` ON `Students`.`student_id` = `Classes`.`student_id` WHERE `Students`.`student_id` IN (SELECT `student_id` FROM `Classes` GROUP BY `student_id` HAVING count(*) >= 2) INTERSECT SELECT `bio_data`, `Students`.`student_id` FROM `Students` INNER JOIN `Detention` ON `Students`.`student_id` = `Detention`.`student_id` WHERE `Students`.`student_id` IN (SELECT `student_id` FROM `Detention` GROUP BY `student_id` HAVING count(*) < 2)
SELECT `bio_data`, `student_id` FROM `Students` WHERE `student_id` IN (SELECT `student_id` FROM `Classes` GROUP BY `student_id` HAVING count(*)  >=  2) UNION SELECT T1.`bio_data`, T1.`student_id` FROM `Students` AS T1 JOIN `Detention` AS T2 ON T1.`student_id`  =  T2.`student_id` GROUP BY T1.`student_id` HAVING count(*)  <  2
SELECT `teacher_details` FROM `Teachers` WHERE `teacher_id` IN (SELECT `teacher_id` FROM `Classes` WHERE `class_details` LIKE '%data%') EXCEPT SELECT `teacher_details` FROM `Teachers` WHERE `teacher_id` IN (SELECT `teacher_id` FROM `Classes` WHERE `class_details` LIKE 'net%')
SELECT DISTINCT T.`teacher_details` FROM `Teachers` AS T JOIN `Classes` AS C ON T.`teacher_id` = C.`teacher_id` WHERE C.`class_details` LIKE '%data%' EXCEPT SELECT DISTINCT T.`teacher_details` FROM `Teachers` AS T JOIN `Classes` AS C ON T.`teacher_id` = C.`teacher_id` WHERE C.`class_details` LIKE 'net%'
SELECT DISTINCT T1.bio_data FROM Students AS T1 LEFT JOIN Detention AS T2 ON T1.student_id = T2.student_id LEFT JOIN Student_Loans AS T3 ON T1.student_id = T3.student_id WHERE T2.student_id IS NULL AND T3.student_id IS NULL;
SELECT DISTINCT T1.bio_data FROM Students AS T1 LEFT JOIN Detention AS T2 ON T1.student_id = T2.student_id LEFT JOIN Student_Loans AS T3 ON T1.student_id = T3.student_id WHERE T2.student_id IS NULL AND T3.student_id IS NULL;
SELECT T1.`amount_of_loan`, T1.`date_of_loan` FROM `Student_Loans` AS T1 JOIN `Achievements` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` HAVING count(*)  >=  2
SELECT T1.`amount_of_loan`, T1.`date_of_loan` FROM `Student_Loans` AS T1 INNER JOIN `Achievements` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` HAVING count(*)  >=  2
SELECT `teacher_details`, `teacher_id` FROM `Teachers` WHERE `teacher_id` = (SELECT `teacher_id` FROM `Classes` GROUP BY `teacher_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `teacher_details`, `teacher_id` FROM `Teachers` WHERE `teacher_id` = (SELECT `teacher_id` FROM `Classes` GROUP BY `teacher_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT DISTINCT `detention_type_description` FROM `Ref_Detention_Type`
SELECT DISTINCT `detention_type_description` FROM `Ref_Detention_Type`
SELECT T1.`student_details`, T2.`address_type_description` FROM `Students` AS T1 INNER JOIN `Students_Addresses` AS T3 ON T1.`student_id` = T3.`student_id` INNER JOIN `Ref_Address_Types` AS T2 ON T3.`address_type_code` = T2.`address_type_code`
SELECT DISTINCT `Students`.`student_details`, `Ref_Address_Types`.`address_type_description` FROM `Students` JOIN `Students_Addresses` ON `Students`.`student_id` = `Students_Addresses`.`student_id` JOIN `Ref_Address_Types` ON `Students_Addresses`.`address_type_code` = `Ref_Address_Types`.`address_type_code`
SELECT T1.address_details, T2.bio_data FROM `Addresses` AS T1 JOIN `Students_Addresses` AS T3 ON T1.address_id  =  T3.address_id JOIN `Students` AS T2 ON T3.student_id  =  T2.student_id
SELECT T1.`address_details`, T2.`bio_data` FROM `Addresses` AS T1 JOIN `Students_Addresses` AS T3 ON T1.`address_id` = T3.`address_id` JOIN `Students` AS T2 ON T3.`student_id` = T2.`student_id`
SELECT T1.`bio_data`, T2.`date_of_transcript` FROM `Students` AS T1 INNER JOIN `Transcripts` AS T2 ON T1.`student_id` = T2.`student_id`
SELECT DISTINCT T1.`bio_data`, T2.`date_of_transcript` FROM `Students` AS T1 JOIN `Transcripts` AS T2 ON T1.`student_id` = T2.`student_id`
SELECT COUNT(`student_id`), `behaviour_monitoring_details` FROM `Behaviour_Monitoring` GROUP BY `behaviour_monitoring_details` ORDER BY COUNT(`student_id`) DESC LIMIT 1
SELECT behaviour_monitoring_details, COUNT(*) AS count FROM `Behaviour_Monitoring` GROUP BY behaviour_monitoring_details ORDER BY count DESC LIMIT 1
SELECT T1.`bio_data`, T1.`student_details` FROM `Students` AS T1 INNER JOIN `Behaviour_Monitoring` AS T2 ON T1.`student_id` = T2.`student_id` WHERE T2.`behaviour_monitoring_details` = (SELECT `behaviour_monitoring_details` FROM `Behaviour_Monitoring` GROUP BY `behaviour_monitoring_details` ORDER BY COUNT(*) DESC LIMIT 1) AND T1.`student_id` IN (SELECT `student_id` FROM `Behaviour_Monitoring` GROUP BY `student_id` HAVING COUNT(*) = 3)
SELECT DISTINCT T1.`bio_data`, T1.`student_details` FROM `Students` AS T1 INNER JOIN `Behaviour_Monitoring` AS T2 ON T1.`student_id` = T2.`student_id` WHERE T2.`behaviour_monitoring_details` IN (SELECT `behaviour_monitoring_details` FROM `Behaviour_Monitoring` GROUP BY `behaviour_monitoring_details` ORDER BY count(*) DESC LIMIT 1) INTERSECT SELECT T1.`bio_data`, T1.`student_details` FROM `Students` AS T1 INNER JOIN `Behaviour_Monitoring` AS T2 ON T1.`student_id` = T2.`student_id` WHERE T2.`behaviour_monitoring_details` IN (SELECT `behaviour_monitoring_details` FROM `Behaviour_Monitoring` GROUP BY `behaviour_monitoring_details` HAVING COUNT(*) = 3)
SELECT T1.`bio_data` FROM `Students` AS T1 INNER JOIN `Behaviour_Monitoring` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` ORDER BY count(*) DESC LIMIT 1
SELECT T1.`bio_data` FROM `Students` AS T1 INNER JOIN `Behaviour_Monitoring` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`bio_data` ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT T1.`bio_data`, T2.`event_date` FROM `Students` AS T1 JOIN `Student_Events` AS T2 ON T1.`student_id` = T2.`student_id`
SELECT T1.`bio_data`, T2.`event_date` FROM `Students` AS T1 JOIN `Student_Events` AS T2 ON T1.`student_id` = T2.`student_id`
SELECT COUNT(T1.`student_id`), T2.`event_type_code`, T2.`event_type_description` FROM `Student_Events` AS T1 INNER JOIN `Ref_Event_Types` AS T2 ON T1.`event_type_code` = T2.`event_type_code` GROUP BY T1.`event_type_code` ORDER BY COUNT(T1.`student_id`) DESC LIMIT 1
SELECT COUNT(T1.student_id), T1.event_type_code, T2.event_type_description FROM `Student_Events` AS T1 INNER JOIN `Ref_Event_Types` AS T2 ON T1.event_type_code = T2.event_type_code GROUP BY T1.event_type_code ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT DISTINCT `Achievements`.`achievement_details`, `Ref_Achievement_Type`.`achievement_type_description` FROM `Achievements` JOIN `Ref_Achievement_Type` ON `Achievements`.`achievement_type_code` = `Ref_Achievement_Type`.`achievement_type_code`
SELECT `Achievements`.`achievement_details`, `Ref_Achievement_Type`.`achievement_type_description` FROM `Achievements` JOIN `Ref_Achievement_Type` ON `Achievements`.`achievement_type_code` = `Ref_Achievement_Type`.`achievement_type_code`
SELECT count(DISTINCT T1.teacher_id) FROM `Teachers` AS T1 INNER JOIN `Classes` AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN (SELECT student_id FROM `Achievements`)
SELECT count(DISTINCT `teacher_id`) FROM `Classes` WHERE `student_id` IN (SELECT `student_id` FROM `Students` EXCEPT SELECT `student_id` FROM `Achievements`)
SELECT `date_of_transcript`, `transcript_details` FROM `Transcripts`
SELECT `date_of_transcript`, `transcript_details` FROM `Transcripts`
SELECT DISTINCT `achievement_type_code`, `achievement_details`, `date_achievement` FROM `Achievements`
SELECT DISTINCT `achievement_type_code`,  `achievement_details`,  `date_achievement` FROM `Achievements`
SELECT `datetime_detention_start`, `datetime_detention_end` FROM `Detention`
SELECT `datetime_detention_start`, `datetime_detention_end` FROM `Detention`
SELECT `bio_data` FROM `Students` WHERE `student_details` LIKE '%Suite%'
SELECT `bio_data` FROM `Students` WHERE `student_details` LIKE '%Suite%'
SELECT T1.teacher_details, T2.student_details FROM `Teachers` AS T1 INNER JOIN `Classes` AS T3 ON T1.teacher_id = T3.teacher_id INNER JOIN `Students` AS T2 ON T3.student_id = T2.student_id
SELECT T1.teacher_details, T2.student_details FROM `Teachers` AS T1 INNER JOIN `Classes` AS T3 ON T1.teacher_id = T3.teacher_id INNER JOIN `Students` AS T2 ON T3.student_id = T2.student_id
SELECT COUNT(DISTINCT `class_id`), `teacher_id` FROM `Classes` GROUP BY `teacher_id` ORDER BY COUNT(DISTINCT `class_id`) DESC LIMIT 1
SELECT `teacher_id`, count(*) FROM `Classes` GROUP BY `teacher_id` ORDER BY count(*) DESC LIMIT 1
SELECT COUNT(DISTINCT `class_id`), `student_id` FROM `Classes` GROUP BY `student_id` ORDER BY COUNT(DISTINCT `class_id`) DESC LIMIT 1
SELECT `student_id`, count(*) FROM `Classes` GROUP BY `student_id` ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT `T1`.`student_id`, `T1`.`student_details` FROM `Students` AS T1 INNER JOIN `Classes` AS T2 ON `T1`.`student_id` = `T2`.`student_id` GROUP BY `T1`.`student_id` HAVING count(*)  =  2
SELECT DISTINCT `T1`.`student_id`, `T1`.`student_details` FROM `Students` AS T1 INNER JOIN `Classes` AS T2 ON `T1`.`student_id` = `T2`.`student_id` GROUP BY `T1`.`student_id` HAVING COUNT(*) = 2
SELECT `detention_type_code`, COUNT(*) FROM `Detention` GROUP BY `detention_type_code` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `detention_type_code`, MIN(detention_type_description) FROM Ref_Detention_Type GROUP BY `detention_type_code` ORDER BY COUNT(*) ASC LIMIT 1
SELECT DISTINCT T1.`bio_data`, T1.`student_details` FROM `Students` AS T1 JOIN `Student_Loans` AS T2 ON T1.`student_id` = T2.`student_id` WHERE T2.`amount_of_loan` > (SELECT AVG(`amount_of_loan`) FROM `Student_Loans`)
SELECT DISTINCT T1.`bio_data`, T1.`student_details` FROM `Students` AS T1 JOIN `Student_Loans` AS T2 ON T1.`student_id` = T2.`student_id` WHERE T2.`amount_of_loan` > (SELECT AVG(`amount_of_loan`) FROM `Student_Loans`)
SELECT min(`date_of_loan`) FROM `Student_Loans`
SELECT MIN(date_of_loan) FROM `Student_Loans`
SELECT T1.`bio_data` FROM `Students` AS T1 JOIN `Student_Loans` AS T2 ON T1.`student_id` = T2.`student_id` ORDER BY T2.`amount_of_loan` ASC LIMIT 1
SELECT T1.bio_data FROM `Students` AS T1 INNER JOIN `Student_Loans` AS T2 ON T1.student_id = T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1
SELECT T1.`date_of_transcript` FROM `Transcripts` AS T1 INNER JOIN `Student_Loans` AS T2 ON T1.`student_id` = T2.`student_id` ORDER BY T2.`amount_of_loan` DESC LIMIT 1
SELECT T1.`date_of_transcript` FROM `Transcripts` AS T1 INNER JOIN `Student_Loans` AS T2 ON T1.`student_id` = T2.`student_id` ORDER BY T2.`amount_of_loan` DESC LIMIT 1
SELECT T2.teacher_details FROM Transcripts AS T1 INNER JOIN Classes AS T3 ON T1.student_id = T3.student_id INNER JOIN Teachers AS T2 ON T3.teacher_id = T2.teacher_id ORDER BY T1.date_of_transcript ASC LIMIT 1
SELECT T2.teacher_details FROM Transcripts AS T1 INNER JOIN Classes AS T3 ON T1.student_id = T3.student_id INNER JOIN Teachers AS T2 ON T3.teacher_id = T2.teacher_id ORDER BY T1.date_of_transcript ASC LIMIT 1
SELECT `student_id`, SUM(`amount_of_loan`) FROM `Student_Loans` GROUP BY `student_id`
SELECT `student_id`, SUM(`amount_of_loan`) FROM `Student_Loans` GROUP BY `student_id`
SELECT DISTINCT T1.`student_id`,  T1.`bio_data`,  count(*) FROM `Students` AS T1 JOIN `Classes` AS T2 ON T1.`student_id`  =  T2.`student_id` GROUP BY T1.`student_id`
SELECT DISTINCT T1.`student_id`, T1.`bio_data`, count(*) FROM `Students` AS T1 JOIN `Classes` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id`
SELECT count(DISTINCT `student_id`) FROM `Detention`
SELECT count(DISTINCT `student_id`) FROM `Detention`
SELECT `address_type_code`, COUNT(*) AS address_count FROM `Students_Addresses` GROUP BY `address_type_code` ORDER BY address_count DESC LIMIT 1
SELECT `T1`.`address_type_code`, `T2`.`address_type_description` FROM `Students_Addresses` AS `T1` INNER JOIN `Ref_Address_Types` AS `T2` ON `T1`.`address_type_code` = `T2`.`address_type_code` GROUP BY `T1`.`address_type_code` ORDER BY count(*) DESC LIMIT 1
SELECT T1.`bio_data` FROM `Students` AS T1 JOIN `Student_Events` AS T2 ON T1.`student_id` = T2.`student_id` LEFT JOIN `Student_Loans` AS T3 ON T1.`student_id` = T3.`student_id` WHERE T3.`student_id` IS NULL
SELECT DISTINCT T1.bio_data FROM Students AS T1 INNER JOIN Student_Events AS T2 ON T1.student_id = T2.student_id LEFT JOIN Student_Loans AS T3 ON T1.student_id = T3.student_id WHERE T3.student_loan_id IS NULL
SELECT `T2`.`date_from`, `T2`.`date_to` FROM `Transcripts` AS T1 JOIN `Students_Addresses` AS T2 ON `T1`.`student_id` = `T2`.`student_id` GROUP BY `T1`.`student_id` HAVING COUNT(*)  =  2
SELECT DISTINCT T1.date_from, T1.date_to FROM Students_Addresses AS T1 INNER JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
SELECT DISTINCT `datetime_detention_start` FROM `Detention`
SELECT `datetime_detention_start` FROM `Detention`
SELECT DISTINCT `Name` FROM `Author`
SELECT DISTINCT `Name` FROM `Author`
SELECT `Name`, `Address` FROM `Client`
SELECT `Name`, `Address` FROM `Client`
SELECT `Title`, `ISBN`, `SalePrice` FROM `Book`
SELECT `Title`, `ISBN`, `SalePrice` FROM `Book`
SELECT COUNT(*) FROM `Book`
SELECT COUNT(*) FROM `Book`
SELECT count(DISTINCT `idAuthor`) FROM `Author`
SELECT COUNT(DISTINCT `idAuthor`) FROM `Author`
SELECT COUNT(*) FROM `Client`
SELECT COUNT(*) FROM `Client`
SELECT `Name`, `Address` FROM `Client` ORDER BY `Name`
SELECT `Name`, `Address` FROM `Client` ORDER BY `Name`
SELECT `Book`.`Title`, `Author`.`Name` FROM `Book` JOIN `Author_Book` ON `Book`.`ISBN` = `Author_Book`.`ISBN` JOIN `Author` ON `Author_Book`.`Author` = `Author`.`idAuthor`
SELECT DISTINCT `Book`.`Title`, `Author`.`Name` FROM `Book` INNER JOIN `Author_Book` ON `Book`.`ISBN` = `Author_Book`.`ISBN` INNER JOIN `Author` ON `Author_Book`.`Author` = `Author`.`idAuthor`
SELECT `Orders`.`IdOrder`, `Client`.`Name` FROM `Orders` JOIN `Client` ON `Orders`.`IdClient` = `Client`.`IdClient`
SELECT `Orders`.`IdOrder`, `Client`.`Name` FROM `Orders` JOIN `Client` ON `Orders`.`IdClient` = `Client`.`IdClient`
SELECT T1.Name, count(T2.ISBN) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.Name
SELECT T1.Name, count(T2.ISBN) FROM `Author` AS T1 JOIN `Author_Book` AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.Name
SELECT DISTINCT `ISBN`, count(`IdOrder`) FROM `Books_Order` GROUP BY `ISBN`
SELECT DISTINCT `ISBN`, COUNT(*) FROM `Books_Order` GROUP BY `ISBN`
SELECT `ISBN`, SUM(`amount`) FROM `Books_Order` GROUP BY `ISBN`
SELECT DISTINCT `Book`.`ISBN`, SUM(`Books_Order`.`amount`) FROM `Book` INNER JOIN `Books_Order` ON `Book`.`ISBN` = `Books_Order`.`ISBN` GROUP BY `Book`.`ISBN`
SELECT `Title` FROM `Book` WHERE `ISBN` IN (SELECT `ISBN` FROM `Books_Order` GROUP BY `ISBN` ORDER BY count(*) DESC LIMIT 1)
SELECT T1.Title FROM `Book` AS T1 JOIN `Books_Order` AS T2 ON T1.ISBN  =  T2.ISBN GROUP BY T1.Title ORDER BY sum(T2.amount) DESC LIMIT 1
SELECT `Title`, `PurchasePrice` FROM `Book` WHERE `ISBN` = (SELECT `ISBN` FROM `Books_Order` GROUP BY `ISBN` ORDER BY SUM(amount) DESC LIMIT 1)
SELECT `Title`, `PurchasePrice` FROM `Book` WHERE `ISBN` = (SELECT `ISBN` FROM `Books_Order` GROUP BY `ISBN` ORDER BY SUM(amount) DESC LIMIT 1)
SELECT DISTINCT `Title` FROM `Book` INNER JOIN `Books_Order` ON `Book`.`ISBN` = `Books_Order`.`ISBN`
SELECT DISTINCT T1.Title FROM `Book` AS T1 JOIN `Books_Order` AS T2 ON T1.ISBN  =  T2.ISBN
SELECT DISTINCT T1.Name FROM `Client` AS T1 INNER JOIN `Orders` AS T2 ON T1.IdClient = T2.IdClient
SELECT DISTINCT T1.Name FROM `Client` AS T1 JOIN `Orders` AS T2 ON T1.IdClient = T2.IdClient
SELECT `Name`, count(`IdOrder`) FROM `Client` AS T1 INNER JOIN `Orders` AS T2 ON T1.`IdClient` = T2.`IdClient` GROUP BY T1.`IdClient`
SELECT `Name`, count(*) FROM `Client` AS T1 JOIN `Orders` AS T2 ON T1.`IdClient`  =  T2.`IdClient` GROUP BY T1.`IdClient`
SELECT `Name` FROM `Client` WHERE `IdClient` IN (SELECT `IdClient` FROM `Orders` GROUP BY `IdClient` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `Name` FROM `Client` WHERE `IdClient` = (SELECT `IdClient` FROM `Orders` GROUP BY `IdClient` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T1.Name, sum(T2.amount) FROM `Client` AS T1 JOIN `Orders` AS T3 ON T1.IdClient  =  T3.IdClient JOIN `Books_Order` AS T2 ON T3.IdOrder  =  T2.IdOrder GROUP BY T1.Name
SELECT T1.Name, sum(T2.amount) FROM `Client` AS T1 JOIN `Orders` AS T3 ON T1.IdClient  =  T3.IdClient JOIN `Books_Order` AS T2 ON T3.IdOrder  =  T2.IdOrder GROUP BY T1.Name
SELECT T1.Name FROM `Client` AS T1 JOIN `Orders` AS T2 ON T1.IdClient = T2.IdClient JOIN `Books_Order` AS T3 ON T2.IdOrder = T3.IdOrder GROUP BY T1.IdClient ORDER BY sum(T3.amount) DESC LIMIT 1
SELECT T1.Name FROM `Client` AS T1 INNER JOIN `Orders` AS T2 ON T1.IdClient = T2.IdClient INNER JOIN `Books_Order` AS T3 ON T2.IdOrder = T3.IdOrder GROUP BY T1.IdClient ORDER BY SUM(T3.amount) DESC LIMIT 1
SELECT `Title` FROM `Book` EXCEPT SELECT T1.Title FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN  =  T2.ISBN
SELECT `Title` FROM `Book` WHERE `ISBN` NOT IN (SELECT `ISBN` FROM `Books_Order`)
SELECT `Name` FROM `Client` WHERE NOT EXISTS (SELECT 1 FROM `Orders` WHERE `Orders`.`IdClient` = `Client`.`IdClient`)
SELECT `Name` FROM `Client` EXCEPT SELECT T1.`Name` FROM `Client` AS T1 INNER JOIN `Orders` AS T2 ON T1.`IdClient`  =  T2.`IdClient`
SELECT MAX(SalePrice), MIN(SalePrice) FROM `Book`
SELECT MAX(SalePrice), MIN(SalePrice) FROM `Book`
SELECT AVG(`PurchasePrice`), AVG(`SalePrice`) FROM `Book`
SELECT avg(`PurchasePrice`), avg(`SalePrice`) FROM `Book`
SELECT MAX(`SalePrice` - `PurchasePrice`) FROM `Book`
SELECT MAX(`SalePrice` - `PurchasePrice`) FROM `Book`
SELECT `Title` FROM `Book` WHERE `SalePrice` > (SELECT avg(`SalePrice`) FROM `Book`)
SELECT `Title` FROM `Book` WHERE `SalePrice` > (SELECT avg(`SalePrice`) FROM `Book`)
SELECT `Title` FROM `Book` ORDER BY `SalePrice` ASC LIMIT 1
SELECT `Title` FROM `Book` WHERE `SalePrice` = (SELECT MIN(`SalePrice`) FROM `Book`)
SELECT `Title` FROM `Book` ORDER BY `PurchasePrice` DESC LIMIT 1
SELECT `Title` FROM `Book` ORDER BY `PurchasePrice` DESC LIMIT 1
SELECT avg(`SalePrice`) FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` = 'George Orwell'
SELECT avg(`SalePrice`) FROM `Book` AS T1 JOIN `Author_Book` AS T2 ON T1.`ISBN`  =  T2.`ISBN` JOIN `Author` AS T3 ON T2.`Author`  =  T3.`idAuthor` WHERE T3.`Name`  =  'George Orwell'
SELECT T1.SalePrice FROM Book AS T1 INNER JOIN Author_Book AS T2 ON T1.ISBN = T2.ISBN INNER JOIN Author AS T3 ON T2.Author = T3.idAuthor WHERE T3.Name = 'Jane Austin'
SELECT T1.SalePrice FROM Book AS T1 INNER JOIN Author_Book AS T2 ON T1.ISBN = T2.ISBN INNER JOIN Author AS T3 ON T2.Author = T3.idAuthor WHERE T3.Name = 'Plato'
SELECT `Title` FROM `Book` JOIN `Author_Book` ON `Book`.`ISBN` = `Author_Book`.`ISBN` JOIN `Author` ON `Author_Book`.`Author` = `Author`.`idAuthor` WHERE `Author`.`Name` = 'George Orwell' ORDER BY `SalePrice` ASC LIMIT 1
SELECT `Title` FROM `Book` JOIN `Author_Book` ON `Book`.`ISBN` = `Author_Book`.`ISBN` JOIN `Author` ON `Author_Book`.`Author` = `Author`.`idAuthor` WHERE `Author`.`Name` = 'George Orwell' ORDER BY `SalePrice` ASC LIMIT 1
SELECT `Title` FROM `Book` WHERE `SalePrice` < (SELECT avg(`SalePrice`) FROM `Book`)
SELECT T1.Title FROM Book AS T1 INNER JOIN Author_Book AS T2 ON T1.ISBN = T2.ISBN INNER JOIN Author AS T3 ON T2.Author = T3.idAuthor WHERE T3.Name = 'Plato' AND T1.SalePrice < (SELECT avg(SalePrice) FROM Book)
SELECT T1.Name FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author JOIN Book AS T3 ON T2.ISBN  =  T3.ISBN WHERE T3.Title  =  'Pride and Prejudice'
SELECT T1.Name FROM `Author` AS T1 JOIN `Author_Book` AS T2 ON T1.idAuthor  =  T2.Author JOIN `Book` AS T3 ON T2.ISBN  =  T3.ISBN WHERE T3.Title  =  'Pride and Prejudice'
SELECT `Title` FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` LIKE '%Plato%'
SELECT `Title` FROM `Book` AS T1 JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` LIKE '%Plato%'
SELECT count(T1.IdOrder) FROM `Orders` AS T1 INNER JOIN `Books_Order` AS T2 ON T1.IdOrder = T2.IdOrder INNER JOIN `Book` AS T3 ON T2.ISBN = T3.ISBN WHERE T3.Title = 'Pride and Prejudice'
SELECT count(T1.IdOrder) FROM `Orders` AS T1 INNER JOIN `Books_Order` AS T2 ON T1.IdOrder  =  T2.IdOrder INNER JOIN `Book` AS T3 ON T2.ISBN  =  T3.ISBN WHERE T3.Title  =  'Pride and Prejudice'
SELECT `IdOrder` FROM `Books_Order` WHERE `ISBN` = '8233771378567' INTERSECT SELECT `IdOrder` FROM `Books_Order` WHERE `ISBN` = '4554672899910'
SELECT `IdOrder` FROM `Books_Order` WHERE `ISBN` = (SELECT `ISBN` FROM `Book` WHERE `Title` = 'Pride and Prejudice') INTERSECT SELECT `IdOrder` FROM `Books_Order` WHERE `ISBN` = (SELECT `ISBN` FROM `Book` WHERE `Title` = 'The Little Prince')
SELECT `ISBN` FROM `Books_Order` AS T1 JOIN `Orders` AS T2 ON T1.`IdOrder` = T2.`IdOrder` JOIN `Client` AS T3 ON T2.`IdClient` = T3.`IdClient` WHERE T3.`Name` = 'Peter Doe' INTERSECT SELECT `ISBN` FROM `Books_Order` AS T1 JOIN `Orders` AS T2 ON T1.`IdOrder` = T2.`IdOrder` JOIN `Client` AS T3 ON T2.`IdClient` = T3.`IdClient` WHERE T3.`Name` = 'James Smith'
SELECT DISTINCT `BO`.`ISBN` FROM `Books_Order` AS `BO` JOIN `Orders` AS `O` ON `BO`.`IdOrder` = `O`.`IdOrder` JOIN `Client` AS `C` ON `O`.`IdClient` = `C`.`IdClient` WHERE `C`.`Name` = 'Peter Doe' INTERSECT SELECT DISTINCT `BO`.`ISBN` FROM `Books_Order` AS `BO` JOIN `Orders` AS `O` ON `BO`.`IdOrder` = `O`.`IdOrder` JOIN `Client` AS `C` ON `O`.`IdClient` = `C`.`IdClient` WHERE `C`.`Name` = 'James Smith'
SELECT `Title` FROM `Book` WHERE `ISBN` IN (SELECT `ISBN` FROM `Books_Order` WHERE `IdOrder` IN (SELECT `IdOrder` FROM `Orders` WHERE `IdClient` = (SELECT `IdClient` FROM `Client` WHERE `Name` = 'Peter Doe')) INTERSECT SELECT `ISBN` FROM `Books_Order` WHERE `IdOrder` NOT IN (SELECT `IdOrder` FROM `Orders` WHERE `IdClient` = (SELECT `IdClient` FROM `Client` WHERE `Name` = 'James Smith')))
SELECT DISTINCT T1.Title FROM Book AS T1 INNER JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN INNER JOIN Orders AS T3 ON T2.IdOrder = T3.IdOrder INNER JOIN Client AS T4 ON T3.IdClient = T4.IdClient WHERE T4.Name = 'Peter Doe' EXCEPT SELECT DISTINCT T1.Title FROM Book AS T1 INNER JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN INNER JOIN Orders AS T3 ON T2.IdOrder = T3.IdOrder INNER JOIN Client AS T4 ON T3.IdClient = T4.IdClient WHERE T4.Name = 'James Smith'
SELECT DISTINCT T1.Name FROM `Client` AS T1 INNER JOIN `Orders` AS T2 ON T1.IdClient = T2.IdClient INNER JOIN `Books_Order` AS T3 ON T2.IdOrder = T3.IdOrder INNER JOIN `Book` AS T4 ON T3.ISBN = T4.ISBN WHERE T4.Title = 'Pride and Prejudice'
SELECT DISTINCT T1.Name FROM `Client` AS T1 INNER JOIN `Orders` AS T2 ON T1.IdClient = T2.IdClient INNER JOIN `Books_Order` AS T3 ON T2.IdOrder = T3.IdOrder INNER JOIN `Book` AS T4 ON T3.ISBN = T4.ISBN WHERE T4.Title = 'Pride and Prejudice'
SELECT COUNT(*) FROM `book`
SELECT `Title` FROM `book` ORDER BY `Title` ASC
SELECT `Title` FROM `book` ORDER BY `Pages` DESC
SELECT `Type`, `Release` FROM `book`
SELECT MAX(Chapters), MIN(Chapters) FROM `book`
SELECT `Title` FROM `book` WHERE `Title` != 'Poet'
SELECT avg(Rating) FROM `review`
SELECT `Title`, T2.`Rating` FROM `book` AS T1 JOIN `review` AS T2 ON T1.`Book_ID`  =  T2.`Book_ID`
SELECT T1.Rating FROM review AS T1 INNER JOIN book AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Chapters DESC LIMIT 1
SELECT T2.Rank FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID ORDER BY T1.Pages ASC LIMIT 1
SELECT `Title` FROM `book` WHERE `Book_ID` = (SELECT `Book_ID` FROM `review` ORDER BY `Rank` ASC LIMIT 1)
SELECT avg(`Readers_in_Million`) FROM review AS t1 JOIN book AS t2 ON t1.Book_ID  =  t2.Book_ID WHERE t2.Type  =  'Novel'
SELECT `Type`, COUNT(*) FROM `book` GROUP BY `Type`
SELECT Type FROM book GROUP BY Type ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Type` FROM `book` GROUP BY `Type` HAVING count(*)  >=  3
SELECT `Title` FROM `book` JOIN `review` ON `book`.`Book_ID` = `review`.`Book_ID` ORDER BY `Rating` ASC
SELECT `Title`, `Audio` FROM `book` JOIN `review` ON `book`.`Book_ID` = `review`.`Book_ID` ORDER BY `Readers_in_Million` DESC
SELECT count(*) FROM `book` WHERE NOT EXISTS (SELECT * FROM `review` WHERE `book`.`Book_ID` = `review`.`Book_ID`)
SELECT Type FROM `book` WHERE Chapters > 75 INTERSECT SELECT Type FROM `book` WHERE Chapters < 50
SELECT count(DISTINCT `Type`) FROM `book`
SELECT `Type`, `Title` FROM `book` WHERE `Book_ID` NOT IN (SELECT `Book_ID` FROM `review`)
SELECT COUNT(*) FROM `customer`
SELECT COUNT(*) FROM `customer`
SELECT `Name` FROM `customer` ORDER BY `Level_of_Membership` ASC
SELECT `Name` FROM `customer` ORDER BY `Level_of_Membership` ASC
SELECT DISTINCT `Nationality`, `Card_Credit` FROM `customer`
SELECT `Nationality`, `Card_Credit` FROM `customer`
SELECT `Name` FROM `customer` WHERE `Nationality` = 'England' OR `Nationality` = 'Australia'
SELECT `Name` FROM customer WHERE Nationality = 'England' UNION SELECT `Name` FROM customer WHERE Nationality = 'Australia'
SELECT avg(`Card_Credit`) FROM `customer` WHERE `Level_of_Membership`  >  1
SELECT AVG(`Card_Credit`) FROM `customer` WHERE `Level_of_Membership`  >  1
SELECT `Card_Credit` FROM `customer` ORDER BY `Level_of_Membership` DESC LIMIT 1
SELECT `Card_Credit` FROM `customer` ORDER BY `Level_of_Membership` DESC LIMIT 1
SELECT Nationality, COUNT(DISTINCT Customer_ID) FROM customer GROUP BY Nationality
SELECT Nationality, COUNT(Customer_ID) FROM customer GROUP BY Nationality
SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM customer WHERE Card_Credit < 50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit > 75
SELECT Nationality FROM customer WHERE Card_Credit  >  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  <  75
SELECT T1.Name, T2.Dish_Name FROM `customer` AS T1 JOIN `customer_order` AS T2 ON T1.Customer_ID  =  T2.Customer_ID
SELECT T1.Name, T2.Dish_Name FROM `customer` AS T1 JOIN `customer_order` AS T2 ON T1.Customer_ID  =  T2.Customer_ID
SELECT T1.Name, T2.Dish_Name FROM `customer` AS T1 JOIN `customer_order` AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC
SELECT T1.Name, T2.Dish_Name FROM `customer` AS T1 JOIN `customer_order` AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC
SELECT `Name`, SUM(`Quantity`) FROM `customer` JOIN `customer_order` ON `customer`.`Customer_ID` = `customer_order`.`Customer_ID` GROUP BY `Name`
SELECT T1.Name, sum(T2.Quantity) FROM `customer` AS T1 JOIN `customer_order` AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name
SELECT `Name` FROM `customer` AS T1 JOIN `customer_order` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` GROUP BY T1.`Customer_ID` HAVING sum(Quantity)  >  1
SELECT DISTINCT T1.Name FROM `customer` AS T1 JOIN `customer_order` AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.Quantity  >  1
SELECT DISTINCT `Manager` FROM `branch`
SELECT DISTINCT `Manager` FROM `branch`
SELECT `Name` FROM `customer` WHERE NOT EXISTS (SELECT 1 FROM `customer_order` WHERE `customer`.`Customer_ID` = `customer_order`.`Customer_ID`)
SELECT `Name` FROM `customer` WHERE NOT EXISTS (SELECT 1 FROM `customer_order` WHERE `customer`.`Customer_ID` = `customer_order`.`Customer_ID`)
SELECT COUNT(*) FROM `member`
SELECT `Name` FROM `member` ORDER BY `Age` ASC
SELECT `Name`, `Nationality` FROM member
SELECT `Name` FROM member WHERE Nationality NOT LIKE 'England'
SELECT `Name` FROM `member` WHERE `Age` = 19 OR `Age` = 20
SELECT `Name` FROM `member` ORDER BY `Age` DESC LIMIT 1
SELECT Nationality, COUNT(DISTINCT Member_ID) FROM member GROUP BY Nationality
SELECT Nationality FROM member GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Nationality` FROM `member` GROUP BY `Nationality` HAVING COUNT(*)  >=  2
SELECT T1.Name, T2.Club_Name FROM `member` AS T1 JOIN `club` AS T2 JOIN `club_leader` AS T3 ON T1.Member_ID  =  T3.Member_ID AND T2.Club_ID  =  T3.Club_ID
SELECT T1.Name FROM member AS T1 JOIN club_leader AS T2 ON T1.Member_ID = T2.Member_ID JOIN club AS T3 ON T2.Club_ID = T3.Club_ID WHERE T3.Overall_Ranking  >  100
SELECT T1.Name FROM member AS T1 JOIN club_leader AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Year_Join  <  2018
SELECT `Team_Leader` FROM `club` WHERE `Club_Name` = 'Houston'
SELECT `Name` FROM `member` WHERE `Member_ID` NOT IN (SELECT `Member_ID` FROM `club_leader`)
SELECT Nationality FROM member WHERE Age  >  22 INTERSECT SELECT Nationality FROM member WHERE Age  <  19
SELECT avg(T1.Age) FROM `member` AS T1 JOIN `club_leader` AS T2 ON T1.Member_ID  =  T2.Member_ID
SELECT `Club_Name` FROM `club` WHERE `Club_Name` LIKE '%state%'
SELECT DISTINCT `Collection_Subset_Name` FROM `Collection_Subsets`
SELECT DISTINCT `Collection_Subset_Name` FROM `Collection_Subsets`
SELECT `Collecrtion_Subset_Details` FROM `Collection_Subsets` WHERE `Collection_Subset_Name` = 'Top collection'
SELECT T1.`Collecrtion_Subset_Details` FROM `Collection_Subsets` AS T1 WHERE T1.`Collection_Subset_Name` = 'Top collection'
SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 INNER JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID  =  T2.Document_Subset_ID
SELECT DISTINCT `Document_Subset_Name` FROM `Document_Subsets`
SELECT `Document_Subset_Details` FROM `Document_Subsets` WHERE `Document_Subset_Name` = 'Best for 2000'
SELECT `Document_Subset_Details` FROM `Document_Subsets` WHERE `Document_Subset_Name` = 'Best for 2000'
SELECT DISTINCT `Document_Object_ID` FROM `Document_Objects`
SELECT DISTINCT `Document_Object_ID` FROM `Document_Objects`
SELECT `Parent_Document_Object_ID` FROM `Document_Objects` WHERE `Owner` = 'Marlin'
SELECT `Document_Object_ID` FROM `Document_Objects` WHERE `Owner` = 'Marlin'
SELECT Owner FROM `Document_Objects` WHERE Description = 'Braeden Collection'
SELECT `Owner` FROM `Document_Objects` WHERE `Description` = 'Braeden Collection'
SELECT T1.Owner FROM Document_Objects AS T1 INNER JOIN Document_Objects AS T2 ON T1.Document_Object_ID  =  T2.Parent_Document_Object_ID WHERE T2.Owner  =  'Marlin'
SELECT DISTINCT T1.Owner FROM Document_Objects AS T1 INNER JOIN Document_Objects AS T2 ON T1.Document_Object_ID  =  T2.Parent_Document_Object_ID WHERE T2.Owner  =  'Marlin'
SELECT DISTINCT `Description` FROM `Document_Objects`
SELECT DISTINCT `Description` FROM `Document_Objects`
SELECT count(*) FROM `Document_Objects` WHERE Owner = 'Marlin'
SELECT count(*) FROM `Document_Objects` WHERE Owner = 'Marlin'
SELECT `Document_Object_ID` FROM `Document_Objects` WHERE NOT EXISTS (SELECT 1 FROM `Document_Objects` AS T2 WHERE T2.`Parent_Document_Object_ID` = `Document_Objects`.`Document_Object_ID`)
SELECT DISTINCT `Document_Object_ID` FROM `Document_Objects` WHERE `Document_Object_ID` != `Parent_Document_Object_ID`
SELECT `Parent_Document_Object_ID`, count(*) FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID`
SELECT DISTINCT Parent_Document_Object_ID, count(*) FROM `Document_Objects` GROUP BY Parent_Document_Object_ID
SELECT DISTINCT `Collection_Name` FROM `Collections`
SELECT DISTINCT `Collection_Name` FROM `Collections`
SELECT `Collection_Description` FROM `Collections` WHERE `Collection_Name` LIKE 'Best'
SELECT DISTINCT `Collection_Description` FROM `Collections` WHERE `Collection_Description` LIKE '%Best%'
SELECT T1.Collection_Name FROM Collections AS T1 INNER JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Parent_Collection_ID WHERE T2.Collection_Name  =  'Nice'
SELECT T1.Collection_Name FROM Collections AS T1 INNER JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Parent_Collection_ID WHERE T2.Collection_Name  =  'Nice'
SELECT DISTINCT `Collection_Name` FROM `Collections` WHERE `Collection_ID` NOT IN (SELECT `Parent_Collection_ID` FROM `Collections` WHERE `Parent_Collection_ID` IS NOT NULL)
SELECT DISTINCT `Collection_Name` FROM `Collections` WHERE `Collection_ID` NOT IN (SELECT `Parent_Collection_ID` FROM `Collections` WHERE `Parent_Collection_ID` IS NOT NULL)
SELECT DISTINCT `Parent_Document_Object_ID` FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID` HAVING COUNT(*)  >  1
SELECT DISTINCT `Parent_Document_Object_ID` FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID` HAVING COUNT(*)  >  1
SELECT count(*) FROM `Collections` WHERE `Parent_Collection_ID` IN (SELECT `Collection_ID` FROM `Collections` WHERE `Collection_Name` = 'Best')
SELECT count(*) FROM `Collections` WHERE `Parent_Collection_ID` IN (SELECT `Collection_ID` FROM `Collections` WHERE `Collection_Name` = 'Best')
SELECT `Related_Document_Object_ID` FROM `Document_Subset_Members` WHERE `Document_Object_ID` IN (SELECT `Document_Object_ID` FROM `Document_Objects` WHERE `Owner` = 'Ransom')
SELECT DISTINCT `Related_Document_Object_ID` FROM `Document_Subset_Members` AS T1 JOIN `Document_Objects` AS T2 ON T1.`Document_Object_ID` = T2.`Document_Object_ID` WHERE T2.`Owner` = 'Ransom'
SELECT DISTINCT T1.Collection_Subset_ID, T1.Collection_Subset_Name, count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID  =  T2.Collection_Subset_ID GROUP BY T1.Collection_Subset_ID
SELECT DISTINCT T1.Collection_Subset_ID, T1.Collection_Subset_Name, count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID = T2.Collection_Subset_ID GROUP BY T1.Collection_Subset_ID
SELECT `Parent_Document_Object_ID`, count(*) FROM Document_Objects GROUP BY `Parent_Document_Object_ID` ORDER BY count(*) DESC LIMIT 1
SELECT `Parent_Document_Object_ID`, count(*) FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID`
SELECT `Document_Object_ID`, count(*) FROM `Document_Subset_Members` GROUP BY `Document_Object_ID` ORDER BY count(*) ASC LIMIT 1
SELECT `Document_Object_ID` FROM `Document_Subset_Members` GROUP BY `Document_Object_ID` ORDER BY count(*) ASC LIMIT 1
SELECT `Document_Object_ID`, count(*) FROM `Document_Subset_Members` GROUP BY `Document_Object_ID` HAVING count(*) BETWEEN 2 AND 4
SELECT DISTINCT `Document_Object_ID`, count(*) FROM `Document_Subset_Members` GROUP BY `Document_Object_ID` HAVING count(*) BETWEEN 2 AND 4
SELECT DISTINCT T1.Owner FROM Document_Objects AS T1 INNER JOIN Document_Subset_Members AS T2 ON T1.Document_Object_ID = T2.Related_Document_Object_ID INNER JOIN Document_Objects AS T3 ON T2.Document_Object_ID = T3.Document_Object_ID WHERE T3.Owner = 'Braeden'
SELECT DISTINCT T1.`Owner` FROM `Document_Objects` AS T1 INNER JOIN `Document_Subset_Members` AS T2 ON T1.`Document_Object_ID`  =  T2.`Related_Document_Object_ID` INNER JOIN `Document_Objects` AS T3 ON T2.`Document_Object_ID`  =  T3.`Document_Object_ID` WHERE T3.`Owner`  =  'Braeden'
SELECT DISTINCT T1.`Document_Subset_Name` FROM `Document_Subsets` AS T1 JOIN `Document_Subset_Members` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` JOIN `Document_Objects` AS T3 ON T2.`Document_Object_ID` = T3.`Document_Object_ID` WHERE T3.`Owner` = 'Braeden'
SELECT DISTINCT T1.`Document_Subset_Name` FROM `Document_Subsets` AS T1 JOIN `Document_Subset_Members` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` JOIN `Document_Objects` AS T3 ON T2.`Document_Object_ID` = T3.`Document_Object_ID` WHERE T3.`Owner` = 'Braeden'
SELECT DISTINCT T1.Document_Subset_ID, T1.Document_Subset_Name, count(*) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID  =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID
SELECT DISTINCT T1.`Document_Subset_ID`, T2.`Document_Subset_Name`, COUNT(T1.`Document_Object_ID`) FROM `Document_Subset_Members` AS T1 JOIN `Document_Subsets` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` GROUP BY T1.`Document_Subset_ID`
SELECT `T1`.`Document_Subset_ID`, `T1`.`Document_Subset_Name`, count(DISTINCT `T2`.`Document_Object_ID`) FROM `Document_Subsets` AS T1 JOIN `Document_Subset_Members` AS T2 ON `T1`.`Document_Subset_ID` = `T2`.`Document_Subset_ID` GROUP BY `T1`.`Document_Subset_ID` ORDER BY count(DISTINCT `T2`.`Document_Object_ID`) DESC LIMIT 1
SELECT `T1`.`Document_Subset_ID`, `T1`.`Document_Subset_Name`, count(DISTINCT `T2`.`Document_Object_ID`) FROM `Document_Subsets` AS T1 JOIN `Document_Subset_Members` AS T2 ON `T1`.`Document_Subset_ID` = `T2`.`Document_Subset_ID` GROUP BY `T1`.`Document_Subset_ID` ORDER BY count(DISTINCT `T2`.`Document_Object_ID`) DESC LIMIT 1
SELECT `Document_Object_ID` FROM `Document_Subset_Members` WHERE `Document_Subset_ID` = (SELECT `Document_Subset_ID` FROM `Document_Subsets` WHERE `Document_Subset_Name` = 'Best for 2000')
SELECT `Document_Object_ID` FROM `Document_Subset_Members` WHERE `Document_Subset_ID` = (SELECT `Document_Subset_ID` FROM `Document_Subsets` WHERE `Document_Subset_Name` = 'Best for 2000')
SELECT T1.`Document_Subset_Name`, T2.`Document_Object_ID` FROM `Document_Subsets` AS T1 JOIN `Document_Subset_Members` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID`
SELECT DISTINCT T1.`Document_Object_ID`, T2.`Document_Subset_Name` FROM `Document_Subset_Members` AS T1 JOIN `Document_Subsets` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID`
SELECT T2.`Collection_Name` FROM `Document_Objects` AS T1 INNER JOIN `Collections` AS T2 INNER JOIN `Documents_in_Collections` AS T3 ON T1.`Document_Object_ID` = T3.`Document_Object_ID` AND T2.`Collection_ID` = T3.`Collection_ID` WHERE T1.`Owner` = 'Ransom'
SELECT T1.Collection_Name FROM Collections AS T1 INNER JOIN Documents_in_Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID INNER JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.Owner  =  'Ransom'
SELECT COUNT(DISTINCT `Collection_ID`), `Document_Object_ID` FROM `Documents_in_Collections` GROUP BY `Document_Object_ID`
SELECT `Document_Object_ID`, count(*) FROM `Documents_in_Collections` GROUP BY `Document_Object_ID`
SELECT count(*) FROM `Documents_in_Collections` AS T1 JOIN `Collections` AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name  =  'Best'
SELECT COUNT(*) FROM `Document_Subsets` WHERE `Document_Subset_Name` LIKE 'Best%'
SELECT DISTINCT `T1`.`Document_Object_ID` FROM `Documents_in_Collections` AS T1 JOIN `Collections` AS T2 ON `T1`.`Collection_ID`  =  `T2`.`Collection_ID` WHERE `T2`.`Collection_Name`  =  'Best'
SELECT count(T1.`Document_Object_ID`) FROM `Documents_in_Collections` AS T1 INNER JOIN `Collections` AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` = 'Best'
SELECT T1.Collection_Name, T1.Collection_ID, count(*) FROM `Collections` AS T1 JOIN `Documents_in_Collections` AS T2 ON T1.Collection_ID  =  T2.Collection_ID GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1
SELECT T1.Collection_Name, T1.Collection_ID, count(*) FROM Collections AS T1 INNER JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name LIKE 'Best%' GROUP BY T1.Collection_Name ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT `Document_Object_ID` FROM `Document_Subset_Members` AS T1 INNER JOIN `Document_Subsets` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` WHERE T2.`Document_Subset_Name` = 'Best for 2000' INTERSECT SELECT DISTINCT T1.`Document_Object_ID` FROM `Documents_in_Collections` AS T1 INNER JOIN `Collections` AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` = 'Best'
SELECT DISTINCT `Document_Object_ID` FROM `Document_Subset_Members` AS T1 JOIN `Document_Subsets` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` WHERE T2.`Document_Subset_Name` = 'Best for 2000' INTERSECT SELECT DISTINCT T1.`Document_Object_ID` FROM `Documents_in_Collections` AS T1 JOIN `Collections` AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` = 'Best'
SELECT DISTINCT `Documents_in_Collections`.`Document_Object_ID` FROM `Documents_in_Collections` INNER JOIN `Collections` ON `Documents_in_Collections`.`Collection_ID` = `Collections`.`Collection_ID` WHERE `Collections`.`Collection_Name` = 'Best' EXCEPT SELECT DISTINCT `Document_Subset_Members`.`Document_Object_ID` FROM `Document_Subset_Members` INNER JOIN `Document_Subsets` ON `Document_Subsets`.`Document_Subset_ID` = `Document_Subset_Members`.`Document_Subset_ID` WHERE `Document_Subsets`.`Document_Subset_Name` = 'Best for 2000'
SELECT DISTINCT `Documents_in_Collections`.`Document_Object_ID` FROM `Documents_in_Collections` INNER JOIN `Collections` ON `Documents_in_Collections`.`Collection_ID` = `Collections`.`Collection_ID` WHERE `Collections`.`Collection_Name` = 'Best' EXCEPT SELECT DISTINCT `Document_Subset_Members`.`Document_Object_ID` FROM `Document_Subset_Members` INNER JOIN `Document_Subsets` ON `Document_Subset_Members`.`Document_Subset_ID` = `Document_Subsets`.`Document_Subset_ID` WHERE `Document_Subsets`.`Document_Subset_Name` = 'Best for 2000'
SELECT `Document_Object_ID` FROM `Document_Subset_Members` JOIN `Document_Subsets` ON `Document_Subsets`.`Document_Subset_ID` = `Document_Subset_Members`.`Document_Subset_ID` WHERE `Document_Subset_Name` = "Best for 2000" INTERSECT SELECT `Document_Object_ID` FROM `Documents_in_Collections` JOIN `Collections` ON `Collections`.`Collection_ID` = `Documents_in_Collections`.`Collection_ID` WHERE `Collection_Name` = "Best"
SELECT DISTINCT `Document_Object_ID` FROM `Document_Subset_Members` AS T1 JOIN `Document_Subsets` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` WHERE T2.`Document_Subset_Name` = 'Best for 2000' UNION SELECT DISTINCT T1.`Document_Object_ID` FROM `Documents_in_Collections` AS T1 JOIN `Collections` AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` = 'Best'
SELECT T1.Collection_Name FROM Collections AS T1 INNER JOIN Collection_Subset_Members AS T2 ON T1.Collection_ID = T2.Related_Collection_ID INNER JOIN Collections AS T3 ON T2.Collection_ID = T3.Collection_ID WHERE T3.Collection_Name = 'Best'
SELECT T1.Collection_Name FROM `Collections` AS T1 INNER JOIN `Collection_Subset_Members` AS T2 ON T1.Collection_ID = T2.Related_Collection_ID INNER JOIN `Collections` AS T3 ON T2.Collection_ID = T3.Collection_ID WHERE T3.Collection_Name = 'Best'
SELECT count(*) FROM `Collection_Subset_Members` AS T1 JOIN `Collections` AS T2 ON T1.Related_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = 'Best'
SELECT count(DISTINCT T1.Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Related_Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name  =  'Best'
SELECT DISTINCT T2.`Collection_Subset_Name` FROM `Collections` AS T1 INNER JOIN `Collection_Subset_Members` AS T3 ON T1.`Collection_ID` = T3.`Collection_ID` INNER JOIN `Collection_Subsets` AS T2 ON T3.`Collection_Subset_ID` = T2.`Collection_Subset_ID` WHERE T1.`Collection_Name` LIKE 'Best%' LIMIT 10
SELECT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 INNER JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID  =  T2.Collection_Subset_ID INNER JOIN Collections AS T3 ON T2.Collection_ID  =  T3.Collection_ID WHERE T3.Collection_Name  =  'Best'
SELECT COUNT(*) FROM `songs` WHERE `name` LIKE '%Love%'
SELECT `name` FROM `songs` ORDER BY `name` ASC
SELECT DISTINCT `name`, `language` FROM `songs`
SELECT MAX(voice_sound_quality), MIN(voice_sound_quality) FROM `performance_score`
SELECT T1.voice_sound_quality, T1.rhythm_tempo, T1.stage_presence FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id  =  T2.id WHERE T2.name  =  'Freeway'
SELECT `id`, `language`, `original_artist` FROM `songs` WHERE `name` != 'Love'
SELECT `name`, `original_artist` FROM `songs` WHERE `english_translation` = 'All the streets of love'
SELECT DISTINCT `T1`.`stage_presence` FROM `performance_score` AS T1 JOIN `songs` AS T2 ON `T1`.`songs_id` = `T2`.`id` WHERE `T2`.`language` = 'English'
SELECT DISTINCT T1.id, T1.name FROM participants AS T1 INNER JOIN performance_score AS T2 ON T1.id = T2.participant_id GROUP BY T1.id HAVING count(*)  >=  2
SELECT `p`.`id`, `p`.`name`, `p`.`popularity` FROM `participants` AS `p` JOIN `performance_score` AS `ps` ON `p`.`id` = `ps`.`participant_id` GROUP BY `p`.`id` ORDER BY count(`ps`.`songs_id`)
SELECT DISTINCT T1.id, T1.name FROM participants AS T1 INNER JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T2.voice_sound_quality = 5 OR T2.rhythm_tempo = 5
SELECT T1.`voice_sound_quality` FROM `performance_score` AS T1 JOIN `songs` AS T2 ON T1.`songs_id` = T2.`id` WHERE T2.`name` = ' The Balkan Girls ' AND T2.`language` = 'English'
SELECT `songs`.`id`, `songs`.`name` FROM `performance_score` JOIN `songs` ON `performance_score`.`songs_id` = `songs`.`id` GROUP BY `songs_id` ORDER BY count(*) DESC LIMIT 1
SELECT COUNT(*) FROM `performance_score` WHERE `stage_presence` < 7 OR `stage_presence` > 9
SELECT count(*) FROM `songs`
SELECT AVG(T1.rhythm_tempo), T2.language FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id  =  T2.id GROUP BY T2.language
SELECT DISTINCT T1.name FROM participants AS T1 INNER JOIN performance_score AS T2 ON T1.id = T2.participant_id INNER JOIN songs AS T3 ON T2.songs_id = T3.id WHERE T3.language = 'English'
SELECT T1.name, T1.popularity FROM `participants` AS T1 INNER JOIN `performance_score` AS T2 ON T1.id = T2.participant_id INNER JOIN `songs` AS T3 ON T2.songs_id = T3.id WHERE T3.language = 'Croatian' INTERSECT SELECT T1.name, T1.popularity FROM `participants` AS T1 INNER JOIN `performance_score` AS T2 ON T1.id = T2.participant_id INNER JOIN `songs` AS T3 ON T2.songs_id = T3.id WHERE T3.language = 'English'
SELECT `name` FROM `songs` WHERE `name` LIKE '%Is%'
SELECT T2.original_artist FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id = T2.id WHERE T1.rhythm_tempo > 5 ORDER BY T1.voice_sound_quality DESC
SELECT count(DISTINCT `city_code`) FROM `City`
SELECT COUNT(*) FROM `City`
SELECT DISTINCT `state` FROM `City`
SELECT DISTINCT `state` FROM `City`
SELECT count(DISTINCT country) FROM `City`
SELECT count(DISTINCT country) FROM `City`
SELECT `city_name`, `city_code`, `state`, `country` FROM `City`
SELECT `city_name`, `city_code`, `state`, `country` FROM `City`
SELECT latitude, longitude FROM `City` WHERE city_name = 'Baltimore'
SELECT latitude, longitude FROM `City` WHERE city_name = 'Baltimore'
SELECT `city_name` FROM `City` WHERE `state` = 'PA'
SELECT `city_name` FROM `City` WHERE `state` = 'PA'
SELECT count(*) FROM `City` WHERE country = 'Canada'
SELECT count(*) FROM `City` WHERE country = 'Canada'
SELECT `city_name` FROM `City` WHERE `country` = 'USA' ORDER BY `latitude`
SELECT `city_name` FROM `City` WHERE `country` = 'USA' ORDER BY `latitude`
SELECT state, count(*) FROM `City` GROUP BY state
SELECT count(DISTINCT `city_name`), `state` FROM `City` GROUP BY `state`
SELECT `country`, count(DISTINCT `city_code`) FROM `City` GROUP BY `country`
SELECT count(DISTINCT `city_code`) ,  `country` FROM `City` GROUP BY `country`
SELECT DISTINCT state FROM City GROUP BY state HAVING count(*)  >=  2
SELECT DISTINCT `state` FROM `City` GROUP BY `state` HAVING count(*)  >=  2
SELECT `state` FROM `City` GROUP BY `state` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `state` FROM `City` GROUP BY `state` ORDER BY count(*) DESC LIMIT 1
SELECT `country` FROM `City` GROUP BY `country` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `country` FROM `City` GROUP BY `country` ORDER BY COUNT(*) ASC LIMIT 1
SELECT T1.Fname, T1.Lname FROM `Student` AS T1 JOIN `City` AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'MD'
SELECT T1.Fname, T1.LName FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T2.state  =  'MD'
SELECT count(*) FROM `Student` AS T1 JOIN `City` AS T2 ON T1.city_code  =  T2.city_code WHERE T2.country  =  'China'
SELECT count(*) FROM `Student` AS T1 INNER JOIN `City` AS T2 ON T1.city_code  =  T2.city_code WHERE T2.country  =  'China'
SELECT Fname, Major FROM Student WHERE city_code = 'BAL'
SELECT Fname, Major FROM Student WHERE city_code = 'BAL'
SELECT T2.country, count(*) FROM `Student` AS T1 JOIN `City` AS T2 ON T1.city_code  =  T2.city_code GROUP BY T2.country
SELECT count(DISTINCT T1.StuID), T2.country FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code GROUP BY T2.country
SELECT count(*), `city_code` FROM `Student` GROUP BY `city_code`
SELECT count(*), `city_code` FROM `Student` GROUP BY `city_code`
SELECT T2.state FROM `Student` AS T1 JOIN `City` AS T2 ON T1.city_code  =  T2.city_code GROUP BY T2.state ORDER BY count(*) DESC LIMIT 1
SELECT T2.state FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code  =  T2.city_code GROUP BY T2.state ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.country FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code  =  T2.city_code GROUP BY T2.country ORDER BY count(*) ASC LIMIT 1
SELECT T2.country FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code GROUP BY T2.country ORDER BY count(*) ASC LIMIT 1
SELECT `city_name` FROM `City` WHERE `city_code` IN (SELECT `city_code` FROM `Student` GROUP BY `city_code` HAVING COUNT(*)  >=  3)
SELECT DISTINCT T2.city_name FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING COUNT(*)  >=  3
SELECT DISTINCT T1.state FROM `City` AS T1 JOIN `Student` AS T2 ON T1.city_code = T2.city_code GROUP BY T1.state HAVING count(*)  >  5
SELECT T2.state FROM `Student` AS T1 JOIN `City` AS T2 ON T1.city_code  =  T2.city_code GROUP BY T2.state HAVING count(*)  >  5
SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')
SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')
SELECT T1.StuID FROM `Student` AS T1 INNER JOIN `City` AS T2 ON T1.city_code = T2.city_code WHERE T1.Sex = 'F' INTERSECT SELECT T1.StuID FROM `Student` AS T1 INNER JOIN `City` AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'PA'
SELECT T1.StuID FROM `Student` AS T1 INNER JOIN `City` AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Sex  =  'F' INTERSECT SELECT T1.StuID FROM `Student` AS T1 INNER JOIN `City` AS T2 ON T1.city_code  =  T2.city_code WHERE T2.state  =  'PA'
SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')
SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')
SELECT distance FROM `Direct_distance` WHERE city1_code = 'BAL' AND city2_code = 'CHI'
SELECT distance FROM `Direct_distance` WHERE city1_code = 'BAL' AND city2_code = 'CHI'
SELECT T1.distance FROM `Direct_distance` AS T1 INNER JOIN `City` AS T2 ON T1.city1_code = T2.city_code INNER JOIN `City` AS T3 ON T1.city2_code = T3.city_code WHERE T2.city_name = 'Boston' AND T3.city_name = 'Newark'
SELECT T1.distance FROM `Direct_distance` AS T1 INNER JOIN `City` AS T2 ON T1.city1_code = T2.city_code INNER JOIN `City` AS T3 ON T1.city2_code = T3.city_code WHERE T2.city_name = 'Boston' AND T3.city_name = 'Newark'
SELECT AVG(distance), MIN(distance), MAX(distance) FROM `Direct_distance`
SELECT AVG(distance), MIN(distance), MAX(distance) FROM `Direct_distance`
SELECT DISTINCT `city1_code`, `city2_code` FROM `Direct_distance` ORDER BY `distance` DESC LIMIT 1
SELECT DISTINCT `city1_code` FROM `Direct_distance` WHERE distance = (SELECT max(distance) FROM Direct_distance)
SELECT DISTINCT `city1_code` FROM `Direct_distance` WHERE `distance` > (SELECT avg(`distance`) FROM `Direct_distance`)
SELECT DISTINCT `city1_code` FROM `Direct_distance` WHERE `distance` > (SELECT avg(`distance`) FROM `Direct_distance`)
SELECT DISTINCT `city1_code` FROM `Direct_distance` WHERE `distance` < 1000
SELECT DISTINCT `city1_code` FROM `Direct_distance` WHERE `distance` < 1000
SELECT SUM(distance) FROM `Direct_distance` WHERE city1_code = 'BAL'
SELECT SUM(distance) FROM `Direct_distance` WHERE city1_code = 'BAL'
SELECT avg(distance) FROM `Direct_distance` WHERE city1_code = 'BOS'
SELECT avg(distance) FROM `Direct_distance` WHERE city1_code = 'BOS'
SELECT DISTINCT T1.city_name FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T1.city_name = 'Chicago' ORDER BY T2.distance ASC LIMIT 1
SELECT T1.city_name FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code INNER JOIN City AS T3 ON T2.city1_code = T3.city_code WHERE T3.city_name = 'Chicago' ORDER BY T2.distance ASC LIMIT 1
SELECT DISTINCT T1.city_name FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code INNER JOIN City AS T3 ON T2.city1_code = T3.city_code WHERE T3.city_name = 'Boston' ORDER BY T2.distance DESC LIMIT 1
SELECT T1.city_name FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.city1_code = 'BOS' ORDER BY T2.distance DESC LIMIT 1
SELECT `city1_code`, sum(`distance`) FROM `Direct_distance` GROUP BY `city1_code`
SELECT T1.city_code, SUM(T2.distance) FROM `City` AS T1 INNER JOIN `Direct_distance` AS T2 ON T1.city_code = T2.city1_code GROUP BY T1.city_code
SELECT T1.city_name, AVG(T2.distance) FROM `City` AS T1 INNER JOIN `Direct_distance` AS T2 ON T1.city_code = T2.city1_code GROUP BY T1.city_name
SELECT T1.city_name, avg(T2.distance) FROM `City` AS T1 JOIN `Direct_distance` AS T2 ON T1.city_code  =  T2.city1_code GROUP BY T1.city_name
SELECT T1.distance FROM Direct_distance AS T1 INNER JOIN City AS T2 ON T1.city1_code = T2.city_code INNER JOIN City AS T3 ON T1.city2_code = T3.city_code INNER JOIN Student AS T4 ON T2.city_code = T4.city_code INNER JOIN Student AS T5 ON T3.city_code = T5.city_code WHERE T4.Fname = 'Linda' AND T4.LName = 'Smith' AND T5.Fname = 'Tracy' AND T5.LName = 'Kim'
SELECT T1.distance FROM Direct_distance AS T1 INNER JOIN City AS T2 ON T1.city1_code = T2.city_code INNER JOIN Student AS T3 ON T2.city_code = T3.city_code WHERE T3.Fname = 'Linda' AND T3.LName = 'Smith' INTERSECT SELECT T1.distance FROM Direct_distance AS T1 INNER JOIN City AS T2 ON T1.city1_code = T2.city_code INNER JOIN Student AS T3 ON T2.city_code = T3.city_code WHERE T3.Fname = 'Tracy' AND T3.LName = 'Kim'
SELECT T1.Fname, T1.Lname FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.StuID <> (SELECT StuID FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith') ORDER BY (SELECT SUM(distance) FROM Direct_distance WHERE city1_code = T2.city_code) DESC LIMIT 1
SELECT DISTINCT T1.Fname, T1.Lname FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.StuID = (SELECT T1.StuID FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Fname = 'Linda' AND T1.Lname = 'Smith' ORDER BY T2.latitude DESC LIMIT 1)
SELECT T2.state FROM `Student` AS T1 JOIN `City` AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname = 'Linda'
SELECT T2.state FROM `Student` AS T1 JOIN `City` AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  'Linda'
SELECT * FROM `Sailors` WHERE `age` > 30
SELECT `sid`, `name`, `rating`, `age` FROM `Sailors` WHERE `age` > 30
SELECT `name`, `age` FROM `Sailors` WHERE `age` < 30
SELECT `name`, `age` FROM `Sailors` WHERE `age` < 30
SELECT DISTINCT `b`.`name` FROM `Boats` AS `b` JOIN `Reserves` AS `r` ON `b`.`bid` = `r`.`bid` WHERE `r`.`sid` = 1
SELECT DISTINCT `bid` FROM `Reserves` WHERE `sid` = 1
SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102
SELECT T1.name FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102
SELECT DISTINCT `bid` FROM `Reserves`
SELECT DISTINCT `bid` FROM `Reserves`
SELECT `name` FROM `Sailors` WHERE `name` LIKE '%e%'
SELECT `name` FROM `Sailors` WHERE `name` LIKE '%e%'
SELECT DISTINCT `S`.`sid` FROM `Sailors` AS `S` WHERE `S`.`age` > (SELECT AVG(`age`) FROM `Sailors`)
SELECT DISTINCT `sid` FROM `Sailors` WHERE `age` != (SELECT min(`age`) FROM `Sailors`)
SELECT DISTINCT `name` FROM `Sailors` WHERE `age` > (SELECT MAX(`age`) FROM `Sailors` WHERE `rating` > 7)
SELECT DISTINCT `name` FROM `Sailors` WHERE `age` > (SELECT MIN(`age`) FROM `Sailors` WHERE `rating` > 7)
SELECT DISTINCT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid
SELECT DISTINCT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid
SELECT DISTINCT T1.sid, T1.name FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T1.sid HAVING count(*)  >  1
SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T1.sid HAVING count(*)  >=  2
SELECT DISTINCT `S`.`sid` FROM `Sailors` AS `S` JOIN `Reserves` AS `R` ON `S`.`sid` = `R`.`sid` JOIN `Boats` AS `B` ON `R`.`bid` = `B`.`bid` WHERE `B`.`color` LIKE 'red' UNION SELECT DISTINCT `S`.`sid` FROM `Sailors` AS `S` JOIN `Reserves` AS `R` ON `S`.`sid` = `R`.`sid` JOIN `Boats` AS `B` ON `R`.`bid` = `B`.`bid` WHERE `B`.`color` LIKE 'blue'
SELECT DISTINCT `S`.`sid` FROM `Sailors` AS `S` JOIN `Reserves` AS `R` ON `S`.`sid` = `R`.`sid` JOIN `Boats` AS `B` ON `R`.`bid` = `B`.`bid` WHERE `B`.`color` = 'red' UNION SELECT DISTINCT `S`.`sid` FROM `Sailors` AS `S` JOIN `Reserves` AS `R` ON `S`.`sid` = `R`.`sid` JOIN `Boats` AS `B` ON `R`.`bid` = `B`.`bid` WHERE `B`.`color` = 'blue'
SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid INNER JOIN Boats AS T3 ON T2.bid  =  T3.bid WHERE T3.color  =  'red' UNION SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid INNER JOIN Boats AS T3 ON T2.bid  =  T3.bid WHERE T3.color  =  'blue'
SELECT T1.`name`, T1.`sid` FROM `Sailors` AS T1 INNER JOIN `Reserves` AS T2 ON T1.`sid` = T2.`sid` INNER JOIN `Boats` AS T3 ON T2.`bid` = T3.`bid` WHERE T3.`color` = 'red' UNION SELECT T1.`name`, T1.`sid` FROM `Sailors` AS T1 INNER JOIN `Reserves` AS T2 ON T1.`sid` = T2.`sid` INNER JOIN `Boats` AS T3 ON T2.`bid` = T3.`bid` WHERE T3.`color` = 'blue'
SELECT `sid` FROM `Reserves` AS T1 JOIN `Boats` AS T2 ON T1.`bid`  =  T2.`bid` WHERE T2.`color`  =  'red' INTERSECT SELECT `sid` FROM `Reserves` AS T1 JOIN `Boats` AS T2 ON T1.`bid`  =  T2.`bid` WHERE T2.`color`  =  'blue'
SELECT DISTINCT `S`.`sid` FROM `Sailors` AS `S` INNER JOIN `Reserves` AS `R` ON `S`.`sid` = `R`.`sid` INNER JOIN `Boats` AS `B` ON `R`.`bid` = `B`.`bid` WHERE `B`.`color` = 'red' INTERSECT SELECT DISTINCT `S`.`sid` FROM `Sailors` AS `S` INNER JOIN `Reserves` AS `R` ON `S`.`sid` = `R`.`sid` INNER JOIN `Boats` AS `B` ON `R`.`bid` = `B`.`bid` WHERE `B`.`color` = 'blue'
SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid INNER JOIN Boats AS T3 ON T2.bid  =  T3.bid WHERE T3.color  =  'red' INTERSECT SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid INNER JOIN Boats AS T3 ON T2.bid  =  T3.bid WHERE T3.color  =  'blue'
SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid INNER JOIN Boats AS T3 ON T2.bid  =  T3.bid WHERE T3.color  =  'red' INTERSECT SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid INNER JOIN Boats AS T3 ON T2.bid  =  T3.bid WHERE T3.color  =  'blue'
SELECT `sid` FROM `Sailors` WHERE `sid` NOT IN (SELECT `sid` FROM `Reserves`)
SELECT `sid` FROM `Sailors` WHERE `sid` NOT IN (SELECT `sid` FROM `Reserves`)
SELECT `name`, `sid` FROM `Sailors` WHERE NOT EXISTS (SELECT * FROM `Reserves` WHERE `Reserves`.`sid` = `Sailors`.`sid`)
SELECT `name`, `sid` FROM `Sailors` WHERE NOT EXISTS (SELECT * FROM `Reserves` WHERE `Reserves`.`sid` = `Sailors`.`sid`)
SELECT `sid` FROM `Sailors` WHERE NOT EXISTS (SELECT 1 FROM `Reserves` WHERE `Reserves`.`sid` = `Sailors`.`sid`)
SELECT `sid` FROM `Sailors` WHERE `sid` NOT IN (SELECT `sid` FROM `Reserves`)
SELECT T1.name FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  103
SELECT T1.name FROM `Sailors` AS T1 JOIN `Reserves` AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  103
SELECT `name` FROM `Sailors` WHERE `rating` > (SELECT MAX(`rating`) FROM `Sailors` WHERE `name` = 'Luis')
SELECT `name` FROM `Sailors` WHERE `rating` > (SELECT MAX(`rating`) FROM `Sailors` WHERE `name` = 'Luis')
SELECT `name` FROM `Sailors` WHERE `rating` > (SELECT MAX(`rating`) FROM `Sailors` WHERE `name` = 'Luis')
SELECT `name` FROM `Sailors` WHERE `rating` > (SELECT MAX(`rating`) FROM `Sailors` WHERE `name` = 'Luis')
SELECT DISTINCT T1.name, T1.sid FROM `Sailors` AS T1 INNER JOIN `Reserves` AS T2 ON T1.sid  =  T2.sid WHERE T1.rating  >  2
SELECT DISTINCT T1.name, T1.sid FROM `Sailors` AS T1 INNER JOIN `Reserves` AS T2 ON T1.sid  =  T2.sid WHERE T1.rating  >=  3
SELECT `name`, `age` FROM `Sailors` ORDER BY `age` DESC LIMIT 1
SELECT `name`, `age` FROM `Sailors` ORDER BY `age` DESC LIMIT 1
SELECT COUNT(*) FROM `Sailors`
SELECT COUNT(*) FROM `Sailors`
SELECT avg(age) FROM `Sailors` WHERE rating = 7
SELECT avg(age) FROM `Sailors` WHERE rating = 7
SELECT COUNT(*) FROM `Sailors` WHERE `name` LIKE 'D%'
SELECT COUNT(*) FROM `Sailors` WHERE `name` LIKE 'D%'
SELECT AVG(Rating), MAX(Age) FROM `Sailors`
SELECT AVG(rating), MAX(age) FROM `Sailors`
SELECT `bid`, count(*) FROM `Reserves` GROUP BY `bid`
SELECT `bid`, count(*) FROM `Reserves` GROUP BY `bid`
SELECT COUNT(DISTINCT `bid`) FROM `Reserves` WHERE `bid`  >  50
SELECT `bid`, count(*) FROM `Reserves` WHERE `bid` > 50 GROUP BY `bid`
SELECT `bid`, count(*) FROM `Reserves` GROUP BY `bid` HAVING count(*) > 1
SELECT count(DISTINCT `bid`) FROM `Reserves` GROUP BY `bid` HAVING count(*)  >  1
SELECT `bid`, count(DISTINCT `sid`) FROM `Reserves` WHERE `sid` > 1 GROUP BY `bid`
SELECT `bid`, count(*) FROM `Reserves` WHERE `sid` > 1 GROUP BY `bid`
SELECT `s`.`rating`, AVG(`s`.`age`) FROM `Sailors` AS `s` JOIN `Reserves` AS `r` ON `s`.`sid` = `r`.`sid` JOIN `Boats` AS `b` ON `r`.`bid` = `b`.`bid` WHERE `b`.`color` = 'red' GROUP BY `s`.`rating`
SELECT T1.rating, avg(T1.age) FROM `Sailors` AS T1 JOIN `Reserves` AS T2 ON T1.sid  =  T2.sid JOIN `Boats` AS T3 ON T2.bid  =  T3.bid WHERE T3.color  =  'red' GROUP BY T1.rating
SELECT `name`, `rating`, `age` FROM `Sailors` ORDER BY `rating`, `age`
SELECT `name`, `rating`, `age` FROM `Sailors` ORDER BY `rating`, `age`
SELECT COUNT(*) FROM `Boats`
SELECT COUNT(*) FROM `Boats`
SELECT count(*) FROM `Boats` WHERE color = 'red'
SELECT count(*) FROM `Boats` WHERE `color` = 'red'
SELECT DISTINCT `b`.`name` FROM `Boats` AS `b` JOIN `Reserves` AS `r` ON `b`.`bid` = `r`.`bid` JOIN `Sailors` AS `s` ON `r`.`sid` = `s`.`sid` WHERE `s`.`age` >= 20 AND `s`.`age` <= 30
SELECT DISTINCT `b`.`name` FROM `Boats` AS `b` JOIN `Reserves` AS `r` ON `b`.`bid` = `r`.`bid` JOIN `Sailors` AS `s` ON `s`.`sid` = `r`.`sid` WHERE `s`.`age` >= 20 AND `s`.`age` <= 30
SELECT `name` FROM `Sailors` WHERE `rating` > (SELECT MAX(T1.`rating`) FROM `Sailors` AS T1 INNER JOIN `Reserves` AS T2 ON T1.`sid`  =  T2.`sid` INNER JOIN `Boats` AS T3 ON T2.`bid`  =  T3.`bid` WHERE T3.`color`  =  'red')
SELECT `name` FROM `Sailors` WHERE `rating` > (SELECT max(T1.`rating`) FROM `Sailors` AS T1 INNER JOIN `Reserves` AS T2 ON T1.`sid` = T2.`sid` INNER JOIN `Boats` AS T3 ON T2.`bid` = T3.`bid` WHERE T3.`color` = 'red')
SELECT MAX(rating) FROM `Sailors`
SELECT MAX(`rating`) FROM `Sailors`
SELECT T1.name FROM `Sailors` AS T1 JOIN `Reserves` AS T2 ON T1.sid  =  T2.sid JOIN `Boats` AS T3 ON T2.bid  =  T3.bid WHERE T3.name  =  'Melon'
SELECT T1.name FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid  =  T2.sid INNER JOIN Boats AS T3 ON T2.bid  =  T3.bid WHERE T3.name  =  'Melon'
SELECT `name`, `age` FROM `Sailors` ORDER BY `rating` DESC
SELECT `name`, `age` FROM `Sailors` ORDER BY `rating` DESC
SELECT Model FROM headphone ORDER BY Price DESC LIMIT 1
SELECT Model FROM headphone ORDER BY Price DESC LIMIT 1
SELECT DISTINCT `Model` FROM `headphone` ORDER BY `Model`
SELECT DISTINCT `Model` FROM `headphone` ORDER BY `Model`
SELECT `Class` FROM `headphone` GROUP BY `Class` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Class` FROM `headphone` GROUP BY `Class` ORDER BY count(*) DESC LIMIT 1
SELECT `Class` FROM `headphone` GROUP BY `Class` HAVING count(*)  >  2
SELECT `Class` FROM `headphone` GROUP BY `Class` HAVING count(*) <= 2
SELECT count(DISTINCT `Headphone_ID`) FROM headphone WHERE Price  >  200
SELECT `Class`, count(*) FROM headphone WHERE Price  >  200 GROUP BY `Class`
SELECT count(DISTINCT Earpads) FROM headphone
SELECT count(DISTINCT Earpads) FROM headphone
SELECT `Earpads` FROM `headphone` GROUP BY `Earpads` ORDER BY count(*) DESC LIMIT 2
SELECT `Earpads` FROM `headphone` GROUP BY `Earpads` ORDER BY count(*) DESC LIMIT 2
SELECT `Model`, `Class`, `Construction` FROM `headphone` ORDER BY `Price` ASC LIMIT 1
SELECT `Model`, `Class`, `Construction` FROM `headphone` ORDER BY `Price` ASC LIMIT 1
SELECT Construction, avg(Price) FROM headphone GROUP BY Construction
SELECT avg(Price), Construction FROM headphone GROUP BY Construction
SELECT Class FROM headphone WHERE Earpads = 'Bowls' INTERSECT SELECT Class FROM headphone WHERE Earpads = 'Comfort Pads'
SELECT Class FROM headphone WHERE Earpads = 'Bowls' INTERSECT SELECT Class FROM headphone WHERE Earpads = 'Comfort Pads'
SELECT DISTINCT `Earpads` FROM `headphone` WHERE `Construction` != 'Plastic'
SELECT DISTINCT `Earpads` FROM `headphone` WHERE `Construction` NOT LIKE 'Plastic'
SELECT `Model` FROM `headphone` WHERE `Price` < (SELECT avg(`Price`) FROM `headphone`)
SELECT `Model` FROM `headphone` WHERE `Price` < (SELECT avg(`Price`) FROM `headphone`)
SELECT `Name` FROM `store` ORDER BY `Date_Opened`
SELECT `Name` FROM store ORDER BY `Date_Opened`
SELECT `Name`, `Parking` FROM store WHERE `Neighborhood` = 'Tarzana'
SELECT `Name`, `Parking` FROM store WHERE `Neighborhood` = 'Tarzana'
SELECT count(DISTINCT `Neighborhood`) FROM store
SELECT count(DISTINCT `Neighborhood`) FROM store
SELECT Neighborhood, count(DISTINCT Store_ID) FROM store GROUP BY Neighborhood
SELECT Neighborhood, count(DISTINCT Store_ID) FROM store GROUP BY Neighborhood
SELECT T1.Name, sum(T2.Quantity) FROM store AS T1 JOIN stock AS T2 ON T1.Store_ID  =  T2.Store_ID GROUP BY T1.Name ORDER BY sum(T2.Quantity) DESC LIMIT 1
SELECT T1.Name, sum(T2.Quantity) FROM `store` AS T1 JOIN `stock` AS T2 ON T1.Store_ID  =  T2.Store_ID GROUP BY T1.Name
SELECT `Name` FROM `store` WHERE `Store_ID` NOT IN (SELECT `Store_ID` FROM `stock`)
SELECT DISTINCT `Name` FROM `store` WHERE `Store_ID` NOT IN (SELECT `Store_ID` FROM `stock`)
SELECT `Model` FROM `headphone` EXCEPT SELECT T1.`Model` FROM `headphone` AS T1 INNER JOIN `stock` AS T2 ON T1.`Headphone_ID` = T2.`Headphone_ID`
SELECT `Model` FROM `headphone` WHERE NOT EXISTS (SELECT 1 FROM `stock` WHERE `stock`.`Headphone_ID` = `headphone`.`Headphone_ID`)
SELECT T1.Model FROM `headphone` AS T1 JOIN `stock` AS T2 ON T1.Headphone_ID  =  T2.Headphone_ID ORDER BY T2.Quantity DESC LIMIT 1
SELECT T1.Model FROM `headphone` AS T1 JOIN `stock` AS T2 ON T1.Headphone_ID  =  T2.Headphone_ID GROUP BY T1.Model ORDER BY sum(T2.Quantity) DESC LIMIT 1
SELECT sum(T1.Quantity) FROM `stock` AS T1 JOIN `store` AS T2 ON T1.Store_ID  =  T2.Store_ID WHERE T2.Name  =  'Woodman'
SELECT sum(T1.Quantity) FROM `stock` AS T1 JOIN `store` AS T2 ON T1.Store_ID  =  T2.Store_ID WHERE T2.Name  =  'Woodman'
SELECT `Neighborhood` FROM `store` EXCEPT SELECT T1.`Neighborhood` FROM `store` AS T1 JOIN `stock` AS T2 ON T1.`Store_ID`  =  T2.`Store_ID`
SELECT `Neighborhood` FROM `store` EXCEPT SELECT T1.`Neighborhood` FROM `store` AS T1 INNER JOIN `stock` AS T2 ON T1.`Store_ID`  =  T2.`Store_ID`
SELECT count(*) FROM `Author`
SELECT COUNT(*) FROM `Author`
SELECT COUNT(*) FROM `Paper`
SELECT COUNT(*) FROM `Paper`
SELECT COUNT(*) FROM `Affiliation`
SELECT COUNT(*) FROM `Affiliation`
SELECT count(*) FROM `Paper` WHERE Venue = 'NAACL' AND YEAR = 2000
SELECT count(*) FROM `Paper` WHERE Venue = 'NAACL' AND YEAR = 2000
SELECT count(*) FROM `Paper` AS t1 JOIN `Author_list` AS t2 ON t1.paper_id  =  t2.paper_id JOIN `Affiliation` AS t3 ON t2.affiliation_id  =  t3.affiliation_id WHERE t1.year  =  2009 AND t3.name  =  'Columbia University'
SELECT count(*) FROM `Paper` AS t1 JOIN `Author_list` AS t2 ON t1.paper_id  =  t2.paper_id JOIN `Affiliation` AS t3 ON t2.affiliation_id  =  t3.affiliation_id WHERE t3.name  =  'Columbia University' AND t1.year  =  2009
SELECT `name`, `address` FROM `Affiliation`
SELECT `name`, `address` FROM `Affiliation`
SELECT `venue`, `year` FROM `Paper` ORDER BY `year`
SELECT DISTINCT `venue` FROM `Paper` ORDER BY `year`
SELECT T1.title, T1.paper_id FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.paper_id = T2.paper_id JOIN `Affiliation` AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Harvard University'
SELECT DISTINCT T1.title, T1.paper_id FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.paper_id  =  T2.paper_id JOIN `Affiliation` AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE '%Harvard University%'
SELECT T1.title, T1.paper_id FROM Paper AS T1 INNER JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id INNER JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.name LIKE '%Mckeown%'
SELECT T1.title, T1.paper_id FROM Paper AS T1 INNER JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id INNER JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.name LIKE '%Mckeown%'
SELECT `title`, `paper_id` FROM `Paper` WHERE `paper_id` IN (SELECT `paper_id` FROM `Author_list` WHERE `affiliation_id` IN (SELECT `affiliation_id` FROM `Affiliation` WHERE `name` = 'Stanford University') INTERSECT SELECT `paper_id` FROM `Author_list` WHERE `affiliation_id` IN (SELECT `affiliation_id` FROM `Affiliation` WHERE `name` = 'Columbia University'))
SELECT T1.title, T1.paper_id FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.paper_id = T2.paper_id INNER JOIN `Affiliation` AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Stanford University' INTERSECT SELECT T1.title, T1.paper_id FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.paper_id = T2.paper_id INNER JOIN `Affiliation` AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Columbia University'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` IN ('Mckeown, Kathleen', 'Rambow, Owen') GROUP BY T1.`paper_id` HAVING COUNT(DISTINCT T3.`name`) = 2
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` IN ('Mckeown, Kathleen', 'Rambow, Owen') GROUP BY T1.`paper_id` HAVING COUNT(DISTINCT T3.`name`) = 2
SELECT `p`.`paper_id`, `p`.`title` FROM `Paper` AS `p` JOIN `Author_list` AS `al1` ON `p`.`paper_id` = `al1`.`paper_id` JOIN `Author` AS `a1` ON `al1`.`author_id` = `a1`.`author_id` WHERE `a1`.`name` = 'Mckeown' AND `p`.`paper_id` NOT IN (SELECT `p`.`paper_id` FROM `Paper` AS `p` JOIN `Author_list` AS `al2` ON `p`.`paper_id` = `al2`.`paper_id` JOIN `Author` AS `a2` ON `al2`.`author_id` = `a2`.`author_id` WHERE `a2`.`name` = 'Rambow')
SELECT DISTINCT T1.title, T1.paper_id FROM Paper AS T1 INNER JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id INNER JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.name = 'Mckeown' AND T1.paper_id NOT IN (SELECT T4.paper_id FROM Author_list AS T4 INNER JOIN Author AS T5 ON T4.author_id = T5.author_id WHERE T5.name = 'Rambow')
SELECT `Paper`.`title`, `Paper`.`paper_id` FROM `Paper` JOIN `Author_list` ON `Paper`.`paper_id` = `Author_list`.`paper_id` JOIN `Author` ON `Author_list`.`author_id` = `Author`.`author_id` WHERE `Author`.`name` = 'Mckeown, Kathleen' UNION SELECT `Paper`.`title`, `Paper`.`paper_id` FROM `Paper` JOIN `Author_list` ON `Paper`.`paper_id` = `Author_list`.`paper_id` JOIN `Author` ON `Author_list`.`author_id` = `Author`.`author_id` WHERE `Author`.`name` = 'Rambow, Owen'
SELECT DISTINCT T1.title, T1.paper_id FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.paper_id = T2.paper_id INNER JOIN `Author` AS T3 ON T2.author_id = T3.author_id WHERE T3.name = 'Mckeown, Kathleen' OR T3.name = 'Rambow, Owen'
SELECT `Author`.name, count(*) FROM `Author` JOIN `Author_list` ON `Author`.author_id = `Author_list`.author_id GROUP BY `Author`.author_id ORDER BY count(*) DESC
SELECT `name`, count(*) FROM `Author` AS T1 JOIN `Author_list` AS T2 ON T1.`author_id`  =  T2.`author_id` GROUP BY T1.`author_id` ORDER BY count(*) DESC
SELECT T1.name FROM Affiliation AS T1 INNER JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) ASC
SELECT T1.name FROM `Affiliation` AS T1 JOIN `Author_list` AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.name ORDER BY count(*) DESC
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1
SELECT `venue`, `year` FROM `Paper` GROUP BY `venue`, `year` ORDER BY count(*) DESC LIMIT 1
SELECT `venue`, `year` FROM `Paper` GROUP BY `venue`, `year` ORDER BY count(*) DESC LIMIT 1
SELECT `venue` FROM `Paper` GROUP BY `venue` ORDER BY count(*) ASC LIMIT 1
SELECT `venue` FROM `Paper` GROUP BY `venue` ORDER BY count(*) ASC LIMIT 1
SELECT count(*) FROM `Citation` WHERE cited_paper_id = 'A00-1002'
SELECT count(*) FROM `Citation` WHERE cited_paper_id = 'A00-1002'
SELECT count(*) FROM `Citation` WHERE paper_id = 'D12-1027'
SELECT COUNT(*) FROM `Citation` WHERE `paper_id` = 'D12-1027'
SELECT `cited_paper_id`, count(*) FROM Citation GROUP BY `cited_paper_id` ORDER BY count(*) DESC LIMIT 1
SELECT `cited_paper_id`, count(*) FROM Citation GROUP BY `cited_paper_id` ORDER BY count(*) DESC LIMIT 1
SELECT `title` FROM `Paper` WHERE `paper_id` = (SELECT `paper_id` FROM `Citation` GROUP BY `paper_id` ORDER BY count(*) DESC LIMIT 1)
SELECT `title` FROM `Paper` WHERE `paper_id` = (SELECT `paper_id` FROM `Citation` GROUP BY `paper_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `Paper`.`title`, COUNT(*) AS `citation_count` FROM `Paper` JOIN `Citation` ON `Paper`.`paper_id` = `Citation`.`cited_paper_id` GROUP BY `Paper`.`title` ORDER BY `citation_count` DESC LIMIT 10
SELECT `cited_paper_id`, count(*) FROM Citation GROUP BY `cited_paper_id` ORDER BY count(*) DESC LIMIT 10
SELECT count(*) FROM `Author` AS T1 JOIN `Author_list` AS T2 ON T1.author_id  =  T2.author_id JOIN `Citation` AS T3 ON T2.paper_id  =  T3.paper_id WHERE T1.name  =  'Mckeown , Kathleen'
SELECT COUNT(DISTINCT T1.paper_id) FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author_list AS T3 ON T2.paper_id  =  T3.paper_id JOIN Author AS T4 ON T3.author_id  =  T4.author_id WHERE T4.name  =  'Mckeown, Kathleen'
SELECT count(*) FROM `Citation` AS T1 JOIN `Paper` AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN `Author_list` AS T3 ON T2.paper_id  =  T3.paper_id JOIN `Author` AS T4 ON T3.author_id  =  T4.author_id WHERE T4.name  =  'Kathleen McKeown'
SELECT count(DISTINCT T1.paper_id) FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author_list AS T3 ON T2.paper_id  =  T3.paper_id JOIN Author AS T4 ON T3.author_id  =  T4.author_id WHERE T4.name  =  'Mckeown, Kathleen'
SELECT T1.name, count(*) FROM `Author` AS T1 JOIN `Author_list` AS T2 ON T1.author_id  =  T2.author_id JOIN `Citation` AS T3 ON T2.paper_id  =  T3.paper_id GROUP BY T1.author_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.name, count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id JOIN Citation AS T3 ON T2.paper_id  =  T3.paper_id GROUP BY T1.author_id ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT T2.venue, T2.year FROM Author AS T1 INNER JOIN Author_list AS T3 ON T1.author_id = T3.author_id INNER JOIN Paper AS T2 ON T3.paper_id = T2.paper_id WHERE T1.name = 'Kathleen McKeown'
SELECT DISTINCT T3.`venue`, T3.`year` FROM `Author` AS T1 JOIN `Author_list` AS T2 ON T1.`author_id` = T2.`author_id` JOIN `Paper` AS T3 ON T2.`paper_id` = T3.`paper_id` WHERE T1.`name` LIKE 'Mckeown, Kathleen'
SELECT DISTINCT T1.venue, T1.year FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Columbia University'
SELECT DISTINCT `venue`, `year` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Affiliation` AS T3 ON T2.`affiliation_id` = T3.`affiliation_id` WHERE T3.`name` = 'Columbia University'
SELECT T2.name FROM Paper AS T1 JOIN Author_list AS T3 ON T1.paper_id  =  T3.paper_id JOIN Author AS T2 ON T2.author_id  =  T3.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id JOIN Paper AS T3 ON T2.paper_id  =  T3.paper_id WHERE T3.year  =  2009 GROUP BY T1.author_id ORDER BY count(*) DESC LIMIT 1
SELECT T2.name FROM `Paper` AS T1 INNER JOIN `Author_list` AS T3 ON T1.paper_id  =  T3.paper_id INNER JOIN `Affiliation` AS T2 ON T3.affiliation_id  =  T2.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3
SELECT T2.name FROM `Paper` AS T1 JOIN `Affiliation` AS T2 JOIN `Author_list` AS T3 ON T1.paper_id  =  T3.paper_id AND T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3
SELECT count(*) FROM `Paper` AS t1 JOIN `Author_list` AS t2 ON t1.paper_id  =  t2.paper_id JOIN `Affiliation` AS t3 ON t2.affiliation_id  =  t3.affiliation_id WHERE t3.name  =  'Columbia University' AND t1.year <= 2009
SELECT count(DISTINCT T1.`paper_id`) FROM `Author_list` AS T1 JOIN `Affiliation` AS T2 ON T1.`affiliation_id` = T2.`affiliation_id` JOIN `Paper` AS T3 ON T1.`paper_id` = T3.`paper_id` WHERE T2.`name` = 'Columbia University' AND T3.`year` <= 2009
SELECT count(*) FROM `Paper` AS t1 JOIN `Author_list` AS t2 ON t1.paper_id  =  t2.paper_id JOIN `Affiliation` AS t3 ON t2.affiliation_id  =  t3.affiliation_id WHERE t3.name  =  'Stanford University' AND t1.year BETWEEN 2000 AND 2009
SELECT count(DISTINCT T1.`paper_id`) FROM `Author_list` AS T1 JOIN `Affiliation` AS T2 ON T1.`affiliation_id` = T2.`affiliation_id` JOIN `Paper` AS T3 ON T1.`paper_id` = T3.`paper_id` WHERE T2.`name` = 'Stanford University' AND T3.`year` BETWEEN 2000 AND 2009
SELECT `title` FROM `Paper` WHERE `paper_id` IN (SELECT `paper_id` FROM `Author_list` GROUP BY `paper_id` ORDER BY count(*) DESC LIMIT 1)
SELECT `title` FROM `Paper` WHERE `paper_id` IN (SELECT `paper_id` FROM `Author_list` GROUP BY `paper_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT count(DISTINCT T1.author_id) FROM Author_list AS T1 JOIN Author AS T2 ON T1.author_id  =  T2.author_id WHERE T2.name  =  'Mckeown, Kathleen'
SELECT count(DISTINCT T1.author_id) FROM Author_list AS T1 JOIN Author AS T2 ON T1.author_id  =  T2.author_id WHERE T1.paper_id IN (SELECT T1.paper_id FROM Author_list AS T1 JOIN Author AS T2 ON T1.author_id  =  T2.author_id WHERE T2.name  =  'Mckeown, Kathleen') AND T2.name  !=  'Mckeown, Kathleen'
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id WHERE T2.paper_id IN (SELECT T3.paper_id FROM Author_list AS T3 JOIN Author AS T4 ON T3.author_id  =  T4.author_id WHERE T4.name  =  'Mckeown, Kathleen') GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
SELECT T1.name FROM Author AS T1 INNER JOIN Author_list AS T2 ON T1.author_id = T2.author_id WHERE T2.paper_id IN (SELECT T3.paper_id FROM Author_list AS T3 WHERE T3.author_id = (SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen')) AND T1.name != 'Mckeown, Kathleen' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
SELECT `paper_id` FROM `Paper` WHERE `title` LIKE '%translation%'
SELECT `paper_id` FROM `Paper` WHERE `title` LIKE '%translation%'
SELECT `paper_id`, `title` FROM `Paper` WHERE `paper_id` NOT IN (SELECT `cited_paper_id` FROM `Citation`)
SELECT `paper_id`, `title` FROM `Paper` WHERE `paper_id` NOT IN (SELECT `cited_paper_id` FROM `Citation`);
SELECT T1.name FROM Affiliation AS T1 INNER JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE '%China%' GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.name FROM Affiliation AS T1 INNER JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE '%China%' GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1
SELECT `venue`, `year`, count(*) FROM `Paper` GROUP BY `venue`, `year`
SELECT `venue`, `year`, count(*) FROM `Paper` GROUP BY `venue`, `year`
SELECT T1.name, count(T2.paper_id) FROM `Affiliation` AS T1 JOIN `Author_list` AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id
SELECT T1.name, count(*) FROM `Affiliation` AS T1 JOIN `Author_list` AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id
SELECT `title` FROM `Paper` WHERE `paper_id` IN (SELECT `paper_id` FROM `Citation` GROUP BY `paper_id` HAVING COUNT(*) > 50)
SELECT `title` FROM `Paper` WHERE `paper_id` IN (SELECT `paper_id` FROM `Citation` GROUP BY `paper_id` HAVING count(*) > 50)
SELECT COUNT(DISTINCT T1.author_id) FROM `Author` AS T1 LEFT JOIN `Author_list` AS T2 ON T1.author_id  =  T2.author_id LEFT JOIN `Paper` AS T3 ON T2.paper_id  =  T3.paper_id LEFT JOIN `Citation` AS T4 ON T3.paper_id  =  T4.cited_paper_id GROUP BY T1.author_id HAVING COUNT(T4.paper_id)  =  0
SELECT count(DISTINCT T1.author_id) FROM `Author_list` AS T1 WHERE T1.paper_id NOT IN (SELECT T2.paper_id FROM Citation AS T2 GROUP BY T2.paper_id HAVING count(*)  >  50)
SELECT T1.name FROM Author AS T1 INNER JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id INNER JOIN Paper AS T3 ON T2.paper_id  =  T3.paper_id WHERE T3.venue  =  'NAACL' INTERSECT SELECT T1.name FROM Author AS T1 INNER JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id INNER JOIN Paper AS T3 ON T2.paper_id  =  T3.paper_id WHERE T3.venue  =  'ACL' AND T3.year  =  2009
SELECT T1.name FROM Author AS T1 INNER JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id INNER JOIN Paper AS T3 ON T2.paper_id  =  T3.paper_id WHERE T3.venue  =  'NAACL' AND T3.year  =  2009 UNION SELECT T1.name FROM Author AS T1 INNER JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id INNER JOIN Paper AS T3 ON T2.paper_id  =  T3.paper_id WHERE T3.venue  =  'ACL' AND T3.year  =  2009
SELECT `name` FROM `Author` WHERE `author_id` NOT IN (SELECT `author_id` FROM `Author_list` WHERE `paper_id` IN (SELECT `paper_id` FROM `Paper` WHERE `venue` = 'ACL'))
SELECT `name` FROM `Author` WHERE `author_id` NOT IN (SELECT `author_id` FROM `Author_list` AS T1 JOIN `Paper` AS T2 ON T1.`paper_id` = T2.`paper_id` WHERE T2.`venue` = 'ACL')
SELECT COUNT(*) FROM `conference`
SELECT COUNT(*) FROM `conference`
SELECT DISTINCT `Conference_Name` FROM `conference`
SELECT DISTINCT `Conference_Name` FROM conference
SELECT `Conference_Name`, `Year`, `Location` FROM `conference`
SELECT DISTINCT `Conference_Name`, `Year`, `Location` FROM `conference`
SELECT `Conference_Name`, count(*) FROM `conference` GROUP BY `Conference_Name`
SELECT `Conference_Name`, count(*) FROM conference GROUP BY `Conference_Name`
SELECT `Year`, count(*) FROM conference GROUP BY `Year`
SELECT DISTINCT Year FROM conference
SELECT Year FROM conference GROUP BY Year ORDER BY count(*) ASC LIMIT 1
SELECT `Year` FROM conference GROUP BY `Year` ORDER BY count(*) ASC LIMIT 1
SELECT DISTINCT `Location` FROM `conference` GROUP BY `Location` HAVING COUNT(*)  >=  2
SELECT DISTINCT `Location` FROM `conference` GROUP BY `Location` HAVING COUNT(*)  >=  2
SELECT `Institution_Name`, `Location`, `Founded` FROM `institution`
SELECT `Institution_Name`, `Location`, `Founded` FROM `institution`
SELECT COUNT(*) FROM `institution` WHERE Founded BETWEEN 1850 AND 1900
SELECT count(*) FROM `institution` WHERE Founded BETWEEN 1850 AND 1900
SELECT Institution_Name, Location FROM institution ORDER BY Founded DESC LIMIT 1
SELECT `Institution_Name`, `Location` FROM `institution` ORDER BY `Founded` DESC LIMIT 1
SELECT T1.Institution_Name, count(*) FROM institution AS T1 JOIN staff AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Founded  >  1800 GROUP BY T1.Institution_Name
SELECT T1.Institution_Name, count(T2.staff_ID) FROM institution AS T1 JOIN staff AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Founded  >  1800 GROUP BY T1.Institution_Name
SELECT `Institution_Name` FROM `institution` WHERE `Institution_ID` NOT IN (SELECT `Institution_ID` FROM `staff`)
SELECT `Institution_Name` FROM `institution` EXCEPT SELECT T1.`Institution_Name` FROM `institution` AS T1 JOIN `staff` AS T2 ON T1.`Institution_ID`  =  T2.`Institution_ID`
SELECT `name` FROM staff WHERE Age > (SELECT avg(Age) FROM staff)
SELECT `name` FROM staff WHERE Age > (SELECT avg(Age) FROM staff)
SELECT max(Age), min(Age) FROM staff WHERE Nationality = 'United States'
SELECT MAX(Age), MIN(Age) FROM `staff`
SELECT DISTINCT T1.Conference_Name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID  =  T2.Conference_ID JOIN staff AS T3 ON T2.staff_ID  =  T3.staff_ID WHERE T3.Nationality  =  'Canada'
SELECT DISTINCT T1.`Conference_Name` FROM `conference` AS T1 JOIN `conference_participation` AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` JOIN `staff` AS T3 ON T2.`staff_ID` = T3.`staff_ID` WHERE T3.`Nationality` = 'Canada'
SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID WHERE T2.role  =  'Sponsor'
SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID WHERE T2.role  =  'Sponsor'
SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID INNER JOIN conference AS T3 ON T2.Conference_ID  =  T3.Conference_ID WHERE T3.Conference_Name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID INNER JOIN conference AS T3 ON T2.Conference_ID  =  T3.Conference_ID WHERE T3.Conference_Name  =  'Naccl'
SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID INNER JOIN conference AS T3 ON T2.Conference_ID  =  T3.Conference_ID WHERE T3.Conference_Name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID INNER JOIN conference AS T3 ON T2.Conference_ID  =  T3.Conference_ID WHERE T3.Conference_Name  =  'Naccl'
SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID INNER JOIN conference AS T3 ON T2.Conference_ID  =  T3.Conference_ID WHERE T3.Year  =  2003 UNION SELECT T1.name FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID INNER JOIN conference AS T3 ON T2.Conference_ID  =  T3.Conference_ID WHERE T3.Year  =  2004
SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID  =  T3.Conference_ID WHERE T3.Year  =  2003 INTERSECT SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID  =  T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID  =  T3.Conference_ID WHERE T3.Year  =  2004
SELECT `Conference`.`Conference_Name`,  `Conference`.`Year`, count(DISTINCT `Conference_participation`.`staff_ID`) FROM `Conference` JOIN `Conference_participation` ON `Conference`.`Conference_ID` = `Conference_participation`.`Conference_ID` GROUP BY `Conference`.`Conference_Name`, `Conference`.`Year`
SELECT `conference`.`Conference_ID`, `conference`.`Conference_Name`, `conference`.`Year`, COUNT(DISTINCT `conference_participation`.`staff_ID`) FROM `conference` JOIN `conference_participation` ON `conference`.`Conference_ID` = `conference_participation`.`Conference_ID` GROUP BY `conference`.`Conference_ID`
SELECT `Conference_Name` FROM `conference` AS T1 JOIN `conference_participation` AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` GROUP BY T1.`Conference_ID` ORDER BY COUNT(*) DESC LIMIT 2
SELECT `Conference_Name` FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID  =  T2.Conference_ID GROUP BY T1.Conference_ID ORDER BY count(*) DESC LIMIT 2
SELECT `name`, `Nationality` FROM `staff` WHERE NOT EXISTS (SELECT 1 FROM `conference_participation` AS T1 JOIN `conference` AS T2 ON T1.`Conference_ID`  =  T2.`Conference_ID` WHERE T2.`Conference_Name`  =  'ACL' AND T1.`staff_ID`  =  `staff`.`staff_ID`)
SELECT `name`, `Nationality` FROM `staff` WHERE NOT EXISTS (SELECT 1 FROM `conference_participation` AS T1 JOIN `conference` AS T2 ON T1.`Conference_ID`  =  T2.`Conference_ID` WHERE T1.`staff_ID`  =  `staff`.`staff_ID` AND T2.`Conference_Name`  =  'ACL')
SELECT `Institution_Name`, `Location` FROM `institution` WHERE NOT EXISTS (SELECT T1.`Institution_ID` FROM `staff` AS T1 JOIN `conference_participation` AS T2 ON T1.`staff_ID` = T2.`staff_ID` JOIN `conference` AS T3 ON T2.`Conference_ID` = T3.`Conference_ID` WHERE T3.`Year` = 2004 AND T1.`Institution_ID` = `institution`.`Institution_ID`)
SELECT DISTINCT `Institution_Name`, `Location` FROM `institution` WHERE NOT EXISTS (SELECT 1 FROM `staff` AS t1 JOIN `conference_participation` AS t2 ON t1.`staff_ID` = t2.`staff_ID` JOIN `conference` AS t3 ON t2.`Conference_ID` = t3.`Conference_ID` WHERE t1.`Institution_ID` = `institution`.`Institution_ID` AND t3.`Year` = 2004)
SELECT `pilot_name` FROM `PilotSkills` ORDER BY `age` DESC LIMIT 1
SELECT `pilot_name` FROM `PilotSkills` ORDER BY `age` DESC LIMIT 1
SELECT `pilot_name` FROM `PilotSkills` WHERE `age` < (SELECT avg(`age`) FROM `PilotSkills`) ORDER BY `age`
SELECT `pilot_name` FROM `PilotSkills` WHERE `age` < (SELECT avg(`age`) FROM `PilotSkills`) ORDER BY `age` ASC
SELECT * FROM `PilotSkills` WHERE `age` < 30
SELECT * FROM `PilotSkills` WHERE `age` < 30
SELECT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub' AND `age` < 35
SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE `age` < 35 AND `plane_name` = 'Piper Cub'
SELECT `location` FROM `Hangar` WHERE `plane_name` = 'F-14 Fighter'
SELECT `location` FROM `Hangar` WHERE `plane_name` = 'F-14 Fighter'
SELECT count(DISTINCT `location`) FROM `Hangar`
SELECT count(DISTINCT `location`) FROM `Hangar`
SELECT `plane_name` FROM `PilotSkills` WHERE `pilot_name` = 'Jones' AND `age` = 32
SELECT `plane_name` FROM `PilotSkills` WHERE `pilot_name` LIKE 'Jones' AND `age` = 32
SELECT count(*) FROM `PilotSkills` WHERE age > 40
SELECT COUNT(*) FROM `PilotSkills` WHERE age > 40
SELECT count(*) FROM `PilotSkills` WHERE `plane_name` = 'B-52 Bomber' AND `age` < 35
SELECT COUNT(*) FROM `PilotSkills` WHERE `plane_name` = 'B-52 Bomber' AND `age` < 35
SELECT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub' ORDER BY `age` ASC LIMIT 1
SELECT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub' ORDER BY `age` ASC LIMIT 1
SELECT `plane_name` FROM `PilotSkills` GROUP BY `plane_name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `plane_name` FROM `PilotSkills` GROUP BY `plane_name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `plane_name` FROM `PilotSkills` GROUP BY `plane_name` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `plane_name` FROM `PilotSkills` GROUP BY `plane_name` ORDER BY COUNT(*) ASC LIMIT 1
SELECT count(DISTINCT T1.pilot_name) FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Chicago'
SELECT count(DISTINCT `pilot_name`) FROM `PilotSkills` WHERE `plane_name` IN (SELECT `plane_name` FROM `Hangar` WHERE `location` = 'Chicago')
SELECT `plane_name` FROM `PilotSkills` WHERE `pilot_name` = 'Smith' AND `age` = 41
SELECT `plane_name` FROM `PilotSkills` WHERE `pilot_name` = 'Smith' AND `age` = 41
SELECT count(DISTINCT `plane_name`) FROM `PilotSkills`
SELECT count(DISTINCT `plane_name`) FROM PilotSkills
SELECT count(*) FROM `PilotSkills` WHERE `pilot_name` = 'Smith'
SELECT count(*) FROM `PilotSkills` WHERE `pilot_name` = 'Smith'
SELECT count(DISTINCT `plane_name`) FROM `PilotSkills` WHERE `age`  >  40
SELECT COUNT(DISTINCT T1.`plane_name`) FROM `PilotSkills` AS T1 INNER JOIN `Hangar` AS T2 ON T1.`plane_name` = T2.`plane_name` WHERE T1.`age` > 40
SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE age BETWEEN 30 AND 40 ORDER BY age ASC
SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE age BETWEEN 30 AND 40 ORDER BY age ASC
SELECT `pilot_name` FROM `PilotSkills` ORDER BY `age` DESC
SELECT `pilot_name` FROM `PilotSkills` ORDER BY `age` DESC
SELECT `location` FROM `Hangar` ORDER BY `plane_name`
SELECT DISTINCT `location` FROM `Hangar` ORDER BY `plane_name`
SELECT DISTINCT `plane_name` FROM `PilotSkills` ORDER BY `plane_name`
SELECT DISTINCT `plane_name` FROM `Hangar` ORDER BY `plane_name`
SELECT count(*) FROM `PilotSkills` WHERE age > 40 OR age < 30
SELECT COUNT(*) FROM `PilotSkills` WHERE age > 40 OR age < 30
SELECT `pilot_name`, `age` FROM `PilotSkills` WHERE (`plane_name` = 'Piper Cub' AND `age` > 35) OR (`plane_name` = 'F-14 Fighter' AND `age` < 30)
SELECT `pilot_name`, `age` FROM `PilotSkills` WHERE (`plane_name` = 'Piper Cub' AND `age` > 35) OR (`plane_name` = 'F-14 Fighter' AND `age` < 30)
SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub' EXCEPT SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'B-52 Bomber'
SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub' EXCEPT SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'B-52 Bomber'
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' INTERSECT SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber'
SELECT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub' INTERSECT SELECT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'B-52 Bomber'
SELECT AVG(age), MIN(age) FROM `PilotSkills`
SELECT AVG(age), MIN(age) FROM `PilotSkills`
SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE `plane_name` IN (SELECT `plane_name` FROM `Hangar` WHERE `location` = 'Austin') INTERSECT SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE `plane_name` IN (SELECT `plane_name` FROM `Hangar` WHERE `location` = 'Boston')
SELECT DISTINCT `pilot_name` FROM `PilotSkills` AS T1 INNER JOIN `Hangar` AS T2 ON T1.`plane_name` = T2.`plane_name` WHERE T2.`location` = 'Austin' INTERSECT SELECT DISTINCT `pilot_name` FROM `PilotSkills` AS T1 INNER JOIN `Hangar` AS T2 ON T1.`plane_name` = T2.`plane_name` WHERE T2.`location` = 'Boston'
SELECT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub' OR `plane_name` = 'F-14 Fighter'
SELECT `pilot_name` FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub' OR `plane_name` = 'F-14 Fighter'
SELECT DISTINCT AVG(Age) FROM PilotSkills
SELECT `plane_name`, AVG(`age`) FROM `PilotSkills` GROUP BY `plane_name`
SELECT `plane_name`, COUNT(*) FROM `Hangar` GROUP BY `plane_name`
SELECT `plane_name`, COUNT(*) FROM `PilotSkills` GROUP BY `plane_name`
SELECT `pilot_name` FROM `PilotSkills` GROUP BY `plane_name` ORDER BY `plane_name` DESC LIMIT 1
SELECT `pilot_name`, `plane_name`, MAX(`age`) FROM `pilotskills` GROUP BY `plane_name` ORDER BY `plane_name`
SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE (`plane_name`, `age`) IN (SELECT `plane_name`, MAX(`age`) FROM `PilotSkills` GROUP BY `plane_name`)
SELECT DISTINCT `plane_name` FROM `PilotSkills` ORDER BY `age` DESC
SELECT `pilot_name`, MAX(`age`) FROM `PilotSkills` GROUP BY `pilot_name`
SELECT DISTINCT `pilot_name`, MAX(`age`) FROM `PilotSkills` GROUP BY `pilot_name`
SELECT count(T1.pilot_name), avg(T1.age) FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location
SELECT DISTINCT T2.location, count(*), avg(T1.age) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location
SELECT COUNT(DISTINCT `plane_name`) FROM `PilotSkills` WHERE age < 35
SELECT DISTINCT `plane_name` FROM `PilotSkills` WHERE `age` < 35
SELECT `location` FROM `Hangar` WHERE `plane_name` = (SELECT `plane_name` FROM `PilotSkills` ORDER BY `age` ASC LIMIT 1)
SELECT T2.location FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age ASC LIMIT 1
SELECT DISTINCT T1.pilot_name, T1.age FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Austin'
SELECT DISTINCT T1.pilot_name, T1.age FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Austin'
SELECT `pilot_name` FROM `PilotSkills` WHERE `age` > (SELECT min(`age`) FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub') ORDER BY `pilot_name`
SELECT DISTINCT `pilot_name` FROM `PilotSkills` WHERE `age` > (SELECT MAX(`age`) FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub') ORDER BY `pilot_name`
SELECT count(*) FROM `PilotSkills` WHERE age < (SELECT min(age) FROM `PilotSkills` WHERE plane_name = 'F-14 Fighter')
SELECT count(*) FROM `PilotSkills` WHERE age < (SELECT min(age) FROM `PilotSkills` WHERE plane_name = 'F-14 Fighter')
SELECT DISTINCT `plane_name` FROM `Hangar` WHERE `plane_name` LIKE '%Bomber%'
SELECT DISTINCT `plane_name` FROM `Hangar` WHERE `plane_name` LIKE '%Bomber%'
SELECT count(DISTINCT pilot_name) FROM PilotSkills WHERE age > (SELECT min(age) FROM PilotSkills WHERE plane_name = 'Piper Cub')
SELECT count(*) FROM PilotSkills WHERE age > (SELECT min(age) FROM PilotSkills WHERE plane_name = 'Piper Cub')
SELECT `Name` FROM `district` ORDER BY `Area_km` DESC LIMIT 1
SELECT `Area_km`, `Government_website` FROM district ORDER BY `Population` ASC LIMIT 1
SELECT `Name`, `Population` FROM `district` WHERE `Area_km` > (SELECT avg(`Area_km`) FROM `district`)
SELECT MAX(Area_km), AVG(Area_km) FROM `district`
SELECT sum(T1.Population) FROM district AS T1 ORDER BY T1.Area_km DESC LIMIT 3
SELECT `District_ID`, `Name`, `Government_website` FROM district ORDER BY Population
SELECT `Name` FROM `district` WHERE `Government_website` LIKE '%.gov'
SELECT `District_ID`, `Name` FROM district WHERE Population > 4000 UNION SELECT `District_ID`, `Name` FROM district WHERE Area_km > 3000
SELECT `Name`, `Speach_title` FROM spokesman
SELECT avg(`Points`), avg(`Age`) FROM spokesman WHERE `Rank_position` = 1
SELECT `Name`, `Points` FROM spokesman WHERE `Age` < 40
SELECT `Name` FROM spokesman ORDER BY Age DESC LIMIT 1
SELECT `Name` FROM spokesman WHERE `Points` < (SELECT avg(`Points`) FROM spokesman)
SELECT T1.Name FROM district AS T1 INNER JOIN spokesman_district AS T2 ON T1.District_ID  =  T2.District_ID GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT T1.Name FROM spokesman AS T1 JOIN spokesman_district AS T2 ON T1.Spokesman_ID  =  T2.Spokesman_ID WHERE T2.Start_year < 2004
SELECT count(T1.Spokesman_ID), T2.Name FROM spokesman_district AS T1 JOIN district AS T2 ON T1.District_ID  =  T2.District_ID GROUP BY T1.District_ID
SELECT T1.Name FROM district AS T1 INNER JOIN spokesman_district AS T2 ON T1.District_ID  =  T2.District_ID INNER JOIN spokesman AS T3 ON T2.Spokesman_ID  =  T3.Spokesman_ID WHERE T3.Rank_position  =  1 INTERSECT SELECT T1.Name FROM district AS T1 INNER JOIN spokesman_district AS T2 ON T1.District_ID  =  T2.District_ID INNER JOIN spokesman AS T3 ON T2.Spokesman_ID  =  T3.Spokesman_ID WHERE T3.Rank_position  =  2
SELECT DISTINCT T1.Name FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID GROUP BY T1.District_ID HAVING count(*)  >  1
SELECT count(*) FROM `district` WHERE District_ID NOT IN (SELECT District_ID FROM spokesman_district)
SELECT `Name` FROM spokesman EXCEPT SELECT T1.`Name` FROM spokesman AS T1 JOIN spokesman_district AS T2 ON T1.`Spokesman_ID`  =  T2.`Spokesman_ID`
SELECT sum(DISTINCT T1.Population), avg(DISTINCT T1.Population) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID  =  T2.District_ID
SELECT `title` FROM Sculptures ORDER BY `year` DESC LIMIT 1
SELECT `title` FROM Sculptures ORDER BY `year` DESC LIMIT 1
SELECT title, location FROM Paintings ORDER BY year ASC LIMIT 1
SELECT `title`, `location` FROM `Paintings` ORDER BY `year` ASC LIMIT 1
SELECT title FROM Sculptures WHERE location = 'Gallery 226'
SELECT title FROM `Sculptures` WHERE location = 'Gallery 226'
SELECT `title`, `location` FROM `Paintings`
SELECT `title`, `location` FROM `Paintings`
SELECT `title`, `location` FROM Sculptures
SELECT `title`, `location` FROM Sculptures
SELECT `medium` FROM `Paintings` WHERE `paintingID` = 80
SELECT `medium` FROM `Paintings` WHERE `paintingID` = 80
SELECT `fname`, `lname` FROM `Artists` WHERE `birthYear` > 1850
SELECT `fname`, `lname` FROM `Artists` WHERE `birthYear` > 1850
SELECT title, year FROM Sculptures WHERE location != 'Gallery 226' OR location IS NULL
SELECT `title`, `year` FROM Sculptures WHERE `location` IS NULL OR NOT `location` = 'Gallery 226'
SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID WHERE T2.year < 1900
SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year < 1900
SELECT DISTINCT T1.birthYear FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year > 1920
SELECT DISTINCT T1.birthYear FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920
SELECT `fname`, `lname` FROM `Artists` ORDER BY (`deathYear` - `birthYear`) DESC LIMIT 1
SELECT `fname`, `lname` FROM `Artists` ORDER BY (`deathYear` - `birthYear`) DESC LIMIT 1
SELECT MIN(deathYear - birthYear) FROM `Artists`
SELECT deathYear - birthYear FROM Artists ORDER BY deathYear - birthYear LIMIT 1
SELECT DISTINCT `fname`, (deathYear - birthYear) FROM `Artists` ORDER BY (deathYear - birthYear) DESC LIMIT 1
SELECT `fname`, (deathYear - birthYear) FROM `Artists` ORDER BY (deathYear - birthYear) DESC LIMIT 1
SELECT count(*) FROM `Paintings` WHERE location = 'Gallery 240'
SELECT count(*) FROM `Paintings` WHERE location = 'Gallery 240'
SELECT count(*) FROM `Paintings` WHERE painterID = (SELECT artistID FROM Artists ORDER BY (deathYear - birthYear) DESC LIMIT 1)
SELECT count(T2.paintingID) FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID ORDER BY T1.deathYear - T1.birthYear DESC LIMIT 1
SELECT `title`, `year` FROM `Paintings` AS T1 JOIN `Artists` AS T2 ON T1.`painterID`  =  T2.`artistID` WHERE T2.`fname` LIKE 'Mary'
SELECT `title`, `year` FROM `Paintings` AS T1 JOIN `Artists` AS T2 ON T1.`painterID` = T2.`artistID` WHERE T2.`fname` = 'Mary'
SELECT `width_mm` FROM `Paintings` AS T1 JOIN `Artists` AS T2 ON T1.`painterID` = T2.`artistID` WHERE T2.`birthYear` < 1850
SELECT `width_mm` FROM `Paintings` AS T1 JOIN `Artists` AS T2 ON T1.`painterID` = T2.`artistID` WHERE T2.`birthYear` < 1850
SELECT DISTINCT T1.location, T1.medium FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID  =  T2.artistID WHERE T2.fname  =  'Pablo'
SELECT DISTINCT `location`, `mediumOn` FROM `Paintings` AS T1 JOIN `Artists` AS T2 ON T1.`painterID`  =  T2.`artistID` WHERE T2.`fname`  =  'Pablo'
SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID INTERSECT SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID
SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID INTERSECT SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID
SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium = 'oil' INTERSECT SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium = 'lithograph'
SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium = 'oil' INTERSECT SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium = 'lithograph'
SELECT DISTINCT T1.birthYear FROM `Artists` AS T1 JOIN `Paintings` AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND T2.mediumOn  =  'canvas'
SELECT DISTINCT T1.birthYear FROM `Artists` AS T1 JOIN `Paintings` AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884
SELECT DISTINCT T1.fname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium = 'oil' AND T2.location = 'Gallery 241'
SELECT DISTINCT T1.fname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'oil' AND T2.location = 'Gallery 241'
SELECT COUNT(*), `medium` FROM `paintings` GROUP BY `medium`
SELECT medium, count(*) FROM Sculptures GROUP BY medium UNION SELECT medium, count(*) FROM Paintings GROUP BY medium
SELECT avg(height_mm), medium FROM `Paintings` GROUP BY medium
SELECT avg(`height_mm`), `medium` FROM `Paintings` GROUP BY `medium`
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1900
SELECT count(DISTINCT location) FROM Paintings WHERE YEAR < 1900
SELECT `title` FROM `Paintings` WHERE `year` > 1910 AND `medium` = 'oil'
SELECT `title` FROM `Paintings` WHERE `medium` = 'oil' AND `year` > 1910
SELECT DISTINCT `painterID` FROM `Paintings` WHERE `medium` = 'oil' AND `location` = 'Gallery 240'
SELECT DISTINCT `painterID` FROM `Paintings` WHERE `medium` = 'oil' AND `location` = 'Gallery 240'
SELECT DISTINCT `title` FROM `Paintings` WHERE `height_mm` > (SELECT min(`height_mm`) FROM `Paintings` WHERE `mediumOn` = 'canvas')
SELECT DISTINCT `title` FROM `Paintings` WHERE `height_mm` > (SELECT min(`height_mm`) FROM `Paintings` WHERE `mediumOn` = 'canvas')
SELECT DISTINCT `paintingID` FROM `Paintings` WHERE `year` < (SELECT max(`year`) FROM `Paintings` WHERE `location` = 'Gallery 240')
SELECT DISTINCT `paintingID` FROM `Paintings` WHERE `year` < (SELECT MAX(`year`) FROM `Paintings` WHERE `location` = 'Gallery 240')
SELECT `paintingID` FROM `Paintings` ORDER BY `year` LIMIT 1
SELECT `paintingID` FROM `Paintings` ORDER BY `year` ASC LIMIT 1
SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE '%Female%'
SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE '%Female%'
SELECT DISTINCT `title` FROM `Paintings` ORDER BY `title`
SELECT DISTINCT `title` FROM `Paintings` ORDER BY `title`
SELECT DISTINCT `title` FROM `Paintings` ORDER BY length(`title`)
SELECT DISTINCT `title` FROM `Paintings` ORDER BY `height_mm`
SELECT title FROM Paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM Sculptures WHERE YEAR BETWEEN 1900 AND 1950
SELECT title FROM Paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM Sculptures WHERE YEAR BETWEEN 1900 AND 1950
SELECT `title` FROM `Paintings` WHERE `painterID` = 222 UNION SELECT `title` FROM `Sculptures` WHERE `sculptorID` = 222
SELECT `title` FROM Paintings WHERE `painterID` = 222 UNION SELECT `title` FROM Sculptures WHERE `sculptorID` = 222
SELECT `painterID` FROM `Paintings` WHERE `year` < 1900 GROUP BY `painterID` ORDER BY count(*) DESC LIMIT 1
SELECT `painterID` FROM `Paintings` WHERE `year` < 1900 GROUP BY `painterID` ORDER BY count(*) DESC LIMIT 1
SELECT T1.fname FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.fname FROM Sculptures AS T1 JOIN Artists AS T2 ON T1.sculptorID  =  T2.artistID GROUP BY T1.sculptorID ORDER BY count(*) DESC LIMIT 1
SELECT title FROM Paintings WHERE width_mm < 600 OR height_mm > 800
SELECT title FROM Paintings WHERE width_mm < 600 OR height_mm > 800
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1885 OR `year` > 1930
SELECT DISTINCT `location` FROM Paintings WHERE `year` < 1885 UNION SELECT DISTINCT `location` FROM Paintings WHERE `year` > 1930
SELECT `paintingID` FROM `Paintings` WHERE `height_mm` > 500 AND `height_mm` < 2000
SELECT `paintingID` FROM `Paintings` WHERE `height_mm` > 500 AND `height_mm` < 2000
SELECT DISTINCT `location` FROM `Paintings` WHERE `mediumOn` = 'panel' INTERSECT SELECT DISTINCT `location` FROM `Paintings` WHERE `mediumOn` = 'canvas'
SELECT DISTINCT `location` FROM `Paintings` WHERE `mediumOn` = 'panel' INTERSECT SELECT DISTINCT `location` FROM `Paintings` WHERE `mediumOn` = 'canvas'
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1885 INTERSECT SELECT DISTINCT `location` FROM `Paintings` WHERE `year` > 1930
SELECT Location FROM Paintings WHERE YEAR < 1885 INTERSECT SELECT Location FROM Paintings WHERE YEAR > 1930
SELECT avg(`height_mm`), avg(`width_mm`) FROM `Paintings` WHERE `medium` = 'oil' AND `location` = 'Gallery 241'
SELECT avg(`height_mm`), avg(`width_mm`) FROM `Paintings` WHERE `medium` = 'oil' AND `location` = 'Gallery 241'
SELECT max(height_mm), paintingID FROM Paintings WHERE YEAR < 1900
SELECT `height_mm`, `paintingID` FROM `Paintings` WHERE `year` < 1900 ORDER BY `height_mm` DESC LIMIT 1
SELECT MAX(`height_mm`), MAX(`width_mm`), `year` FROM Paintings GROUP BY `year`
SELECT DISTINCT `year`, MAX(`height_mm`), MAX(`width_mm`) FROM Paintings GROUP BY `year`
SELECT avg(`height_mm`), avg(`width_mm`) FROM `Paintings` GROUP BY `painterID` ORDER BY `painterID`
SELECT avg(`height_mm`), avg(`width_mm`) FROM `Paintings` GROUP BY `painterID` ORDER BY `painterID`
SELECT T1.fname, count(*) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T1.artistID HAVING count(*)  >=  2
SELECT T1.fname, count(*) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T1.artistID HAVING count(*)  >=  2
SELECT T1.deathYear FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID GROUP BY T2.painterID HAVING count(*) <= 3
SELECT T1.deathYear FROM `Artists` AS T1 JOIN `Paintings` AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <  4
SELECT T1.deathYear FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY COUNT(*) ASC LIMIT 1
SELECT T1.deathYear FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T1.artistID ORDER BY COUNT(*) ASC LIMIT 1
SELECT `paintingID`, `height_mm` FROM `Paintings` WHERE `location` = 'Gallery 240' ORDER BY `width_mm` DESC LIMIT 1
SELECT `height_mm`, `paintingID` FROM `Paintings` WHERE `location` = 'Gallery 240' ORDER BY `width_mm` DESC LIMIT 1
SELECT `paintingID` FROM `Paintings` WHERE `year` < (SELECT min(`year`) FROM `Paintings` WHERE `location` = 'Gallery 240')
SELECT `paintingID` FROM `Paintings` WHERE `year` < (SELECT min(`year`) FROM `Paintings` WHERE `location` = 'Gallery 240')
SELECT `paintingID` FROM `Paintings` WHERE `height_mm` > (SELECT max(`height_mm`) FROM `Paintings` WHERE `year` > 1900)
SELECT `paintingID` FROM `Paintings` WHERE `height_mm` > (SELECT max(`height_mm`) FROM `Paintings` WHERE `year` > 1900)
SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'oil' GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 3
SELECT T2.fname, T2.lname FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.medium = 'oil' GROUP BY T1.painterID ORDER BY count(*) DESC LIMIT 1
SELECT `paintingID`, `location`, `title` FROM `Paintings` WHERE `medium` = 'oil' ORDER BY `year`
SELECT `paintingID`, `location`, `title` FROM `Paintings` WHERE `medium` = 'oil' ORDER BY `year`
SELECT `year`, `location`, `title` FROM `Paintings` WHERE `height_mm` > 1000 ORDER BY `title`
SELECT `year`, `location`, `title` FROM `Paintings` WHERE `height_mm` > 1000 ORDER BY `title`
SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID
SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID  =  T2.sculptorID
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1885 AND `mediumOn` != 'canvas'
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1885 AND `mediumOn` != 'canvas'
SELECT COUNT(*) FROM `race`
SELECT COUNT(*) FROM `race`
SELECT `Winning_driver`, `Winning_team` FROM `race` ORDER BY `Winning_team` ASC
SELECT `Winning_driver`, `Winning_team` FROM race ORDER BY `Winning_team`
SELECT DISTINCT `Winning_driver` FROM `race` WHERE `Pole_Position` NOT LIKE 'Junior Strous'
SELECT DISTINCT `Winning_driver` FROM race WHERE `Pole_Position` NOT LIKE 'Junior Strous'
SELECT DISTINCT `Constructor` FROM `driver` ORDER BY `Age` ASC
SELECT DISTINCT `Constructor` FROM `driver` ORDER BY `Age` ASC
SELECT DISTINCT `Entrant` FROM `driver` WHERE `Age`  >=  20
SELECT DISTINCT `Entrant` FROM `driver` WHERE `Age`  >=  20
SELECT max(Age), min(Age) FROM driver
SELECT MAX(Age), MIN(Age) FROM `driver`
SELECT count(DISTINCT Engine) FROM `driver` WHERE Age > 30 OR Age < 20
SELECT count(DISTINCT `Engine`) FROM `driver` WHERE Age > 30 OR Age < 20
SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC
SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC
SELECT t1.Driver_Name, t2.Race_Name FROM `driver` AS t1 JOIN `race` AS t2 ON t1.Driver_ID  =  t2.Driver_ID
SELECT DISTINCT `Driver_Name`, `Race_Name` FROM `driver` AS t1 JOIN `race` AS t2 ON t1.`Driver_ID`  =  t2.`Driver_ID`
SELECT `Driver_Name`, count(*) FROM driver AS t1 JOIN race AS t2 ON t1.`Driver_ID`  =  t2.`Driver_ID` GROUP BY t1.`Driver_Name`
SELECT `Driver_ID`, count(*) FROM race GROUP BY `Driver_ID`
SELECT T1.Age FROM driver AS T1 INNER JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT T1.Age FROM driver AS T1 INNER JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT `Driver_Name`, `Age` FROM `driver` AS t1 JOIN `race` AS t2 ON t1.`Driver_ID` = t2.`Driver_ID` GROUP BY t1.`Driver_ID` HAVING count(*)  >=  2
SELECT DISTINCT T1.Driver_Name, T1.Age FROM driver AS T1 INNER JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID INTERSECT SELECT T1.Driver_Name, T1.Age FROM driver AS T1 INNER JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Driver_ID HAVING COUNT(*)  >=  2
SELECT DISTINCT `Race_Name` FROM `race` AS t1 JOIN `driver` AS t2 ON t1.`Driver_ID` = t2.`Driver_ID` WHERE t2.`Age`  >=  26
SELECT DISTINCT `Race_Name` FROM `race` AS t1 JOIN `driver` AS t2 ON t1.`Driver_ID`  =  t2.`Driver_ID` WHERE t2.`Age`  >=  26
SELECT Driver_Name FROM driver WHERE Constructor != 'Bugatti'
SELECT Driver_Name FROM driver WHERE Constructor NOT LIKE 'Bugatti'
SELECT `Constructor`, COUNT(DISTINCT `Driver_ID`) FROM `driver` GROUP BY `Constructor`
SELECT Constructor, count(DISTINCT Driver_ID) FROM driver GROUP BY Constructor
SELECT `Engine` FROM `driver` GROUP BY `Engine` ORDER BY COUNT(*) DESC LIMIT 1
SELECT Engine FROM `driver` GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Engine` FROM `driver` GROUP BY `Engine` HAVING COUNT(*)  >=  2
SELECT DISTINCT `Engine` FROM `driver` GROUP BY `Engine` HAVING count(*)  >=  2
SELECT `Driver_Name` FROM `driver` WHERE NOT EXISTS (SELECT 1 FROM `race` WHERE `driver`.`Driver_ID` = `race`.`Driver_ID`)
SELECT `Driver_Name` FROM `driver` WHERE `Driver_ID` NOT IN (SELECT `Driver_ID` FROM `race`)
SELECT `Constructor` FROM driver WHERE `Age`  <  20 INTERSECT SELECT `Constructor` FROM driver WHERE `Age`  >  30
SELECT Constructor FROM driver WHERE Age < 20 INTERSECT SELECT Constructor FROM driver WHERE Age > 30
SELECT `Winning_team` FROM `race` GROUP BY `Winning_team` HAVING count(*)  >  1
SELECT `Winning_team` FROM `race` GROUP BY `Winning_team` HAVING COUNT(*) > 1
SELECT DISTINCT `Driver_Name` FROM `driver` WHERE `Driver_ID` IN (SELECT `Driver_ID` FROM `race` WHERE `Pole_Position` = 'James Hinchcliffe' INTERSECT SELECT `Driver_ID` FROM `race` WHERE `Pole_Position` = 'Carl Skerlong')
SELECT T1.Driver_Name FROM driver AS T1 INNER JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T2.Pole_Position  =  'James Hinchcliffe' INTERSECT SELECT T1.Driver_Name FROM driver AS T1 INNER JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T2.Pole_Position  =  'Carl Skerlong'
SELECT DISTINCT `Driver_Name` FROM `driver` WHERE NOT EXISTS (SELECT 1 FROM `race` WHERE `race`.`Driver_ID` = `driver`.`Driver_ID` AND `Pole_Position` = 'James Hinchcliffe')
SELECT DISTINCT `Driver_Name` FROM `driver` WHERE `Driver_ID` NOT IN (SELECT `Driver_ID` FROM `race` WHERE `Pole_Position` = 'James Hinchcliffe')
SELECT COUNT(*) FROM `languages`
SELECT COUNT(*) FROM `languages`
SELECT name FROM languages ORDER BY name
SELECT name FROM languages ORDER BY name
SELECT `name` FROM `languages` WHERE `name` LIKE '%ish%'
SELECT `name` FROM languages WHERE `name` LIKE '%ish%'
SELECT `name` FROM `countries` ORDER BY `overall_score` DESC
SELECT `name` FROM `countries` ORDER BY `overall_score` DESC
SELECT avg(Justice_Score) FROM countries
SELECT avg(Justice_Score) FROM countries
SELECT max(health_score), min(health_score) FROM `countries` WHERE name != 'Norway'
SELECT MAX(health_score), MIN(health_score) FROM `countries` WHERE name != 'Norway'
SELECT count(DISTINCT `language_id`) FROM `official_languages`
SELECT count(DISTINCT `language_id`) FROM official_languages
SELECT `name` FROM `countries` ORDER BY `education_score` DESC
SELECT `name` FROM `countries` ORDER BY `education_score` DESC
SELECT `name` FROM `countries` ORDER BY `politics_score` DESC LIMIT 1
SELECT `name` FROM `countries` ORDER BY `politics_score` DESC LIMIT 1
SELECT t1.name, t2.name FROM countries AS t1 INNER JOIN languages AS t2 INNER JOIN official_languages AS t3 ON t1.id = t3.country_id AND t2.id = t3.language_id
SELECT t1.name, t2.name FROM countries AS t1 INNER JOIN languages AS t2 INNER JOIN official_languages AS t3 ON t1.id = t3.country_id AND t2.id = t3.language_id
SELECT T1.name, count(T2.country_id) FROM `languages` AS T1 JOIN `official_languages` AS T2 ON T1.id  =  T2.language_id GROUP BY T1.name
SELECT T1.name, count(T2.country_id) FROM languages AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.language_id GROUP BY T1.name
SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T2.language_id HAVING count(*)  >=  2
SELECT DISTINCT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id  =  T2.language_id GROUP BY T1.id HAVING count(*)  >=  2
SELECT avg(T1.overall_score) FROM countries AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.country_id INNER JOIN languages AS T3 ON T2.language_id = T3.id WHERE T3.name = 'English'
SELECT AVG(T1.overall_score) FROM `countries` AS T1 JOIN `official_languages` AS T2 ON T1.id = T2.country_id JOIN `languages` AS T3 ON T2.language_id = T3.id WHERE T3.name = 'English'
SELECT DISTINCT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id LIMIT 3
SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name ORDER BY count(*) DESC LIMIT 3
SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id GROUP BY T1.name ORDER BY avg(T3.overall_score) DESC
SELECT T1.name FROM `languages` AS T1 INNER JOIN `official_languages` AS T2 ON T1.id = T2.language_id INNER JOIN `countries` AS T3 ON T2.country_id = T3.id GROUP BY T1.name ORDER BY avg(T3.overall_score) DESC
SELECT `name` FROM countries WHERE id IN (SELECT country_id FROM official_languages GROUP BY country_id ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `name` FROM `countries` WHERE id IN (SELECT country_id FROM official_languages GROUP BY country_id ORDER BY count(*) DESC LIMIT 1)
SELECT `name` FROM `languages` WHERE `id` NOT IN (SELECT `language_id` FROM `official_languages`);
SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)
SELECT T1.`name` FROM countries AS T1 LEFT JOIN official_languages AS T2 ON T1.id = T2.country_id WHERE T2.country_id IS NULL
SELECT `name` FROM `countries` WHERE `id` NOT IN (SELECT `country_id` FROM `official_languages`)
SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score > 95 INTERSECT SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score < 90
SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score > 95 INTERSECT SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score < 90
SELECT DISTINCT `country`, `town_city` FROM `Addresses`
SELECT DISTINCT `country`, `town_city` FROM `Addresses`
SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 INNER JOIN Properties AS T2 ON T1.address_id = T2.property_address_id
SELECT T1.`county_state_province` FROM `Addresses` AS T1 JOIN `Properties` AS T2 ON T1.`address_id` = T2.`property_address_id` GROUP BY T1.`county_state_province`
SELECT `feature_description` FROM `Features` WHERE `feature_name` = 'rooftop'
SELECT `feature_description` FROM `Features` WHERE `feature_name` = 'rooftop'
SELECT T1.`feature_name`, T1.`feature_description` FROM `Features` AS T1 JOIN `Property_Features` AS T2 ON T1.`feature_id` = T2.`feature_id` GROUP BY T1.`feature_id` ORDER BY count(*) DESC LIMIT 1
SELECT `T2`.`feature_name`, `T2`.`feature_description` FROM `Property_Features` AS T1 INNER JOIN `Features` AS T2 ON T1.`feature_id` = T2.`feature_id` GROUP BY T1.`feature_id` ORDER BY count(*) DESC LIMIT 1
SELECT MIN(`room_count`) FROM `Properties`
SELECT MIN(`room_count`) FROM `Properties`
SELECT count(*) FROM `Properties` WHERE `parking_lots` = 1 OR `garage_yn` = 1
SELECT COUNT(*) FROM `Properties` WHERE `parking_lots` = 1 OR `garage_yn` = 1
SELECT T1.`age_category_description` FROM `Ref_Age_Categories` AS T1 INNER JOIN `Users` AS T2 ON T1.`age_category_code` = T2.`age_category_code` INNER JOIN `Ref_User_Categories` AS T3 ON T2.`user_category_code` = T3.`user_category_code` WHERE T3.`user_category_description` LIKE '%Mother%'
SELECT DISTINCT T1.`age_category_code` FROM `Ref_Age_Categories` AS T1 JOIN `Users` AS T2 ON T1.`age_category_code` = T2.`age_category_code` JOIN `Ref_User_Categories` AS T3 ON T2.`user_category_code` = T3.`user_category_code` WHERE T3.`user_category_description` LIKE '%Mother%'
SELECT T1.`first_name` FROM `Users` AS T1 INNER JOIN `Properties` AS T2 ON T1.`user_id` = T2.`owner_user_id` GROUP BY T2.`owner_user_id` ORDER BY count(*) DESC LIMIT 1
SELECT `first_name` FROM `Users` WHERE `user_id` = (SELECT `owner_user_id` FROM `Properties` GROUP BY `owner_user_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT avg(`room_count`) FROM `Properties` WHERE `property_name` = 'garden'
SELECT avg(`room_count`) FROM `Properties` WHERE `property_id` IN (SELECT `property_id` FROM `Property_Features` WHERE `feature_id` = (SELECT `feature_id` FROM `Features` WHERE `feature_name` = 'garden'))
SELECT DISTINCT T1.`town_city` FROM `Addresses` AS T1 JOIN `Properties` AS T2 ON T1.`address_id` = T2.`property_address_id` JOIN `Property_Features` AS T3 ON T2.`property_id` = T3.`property_id` JOIN `Features` AS T4 ON T3.`feature_id` = T4.`feature_id` WHERE T4.`feature_name` LIKE '%swimming pool%'
SELECT DISTINCT T1.`town_city` FROM `Addresses` AS T1 INNER JOIN `Properties` AS T2 ON T1.`address_id` = T2.`property_address_id` INNER JOIN `Property_Features` AS T3 ON T2.`property_id` = T3.`property_id` INNER JOIN `Features` AS T4 ON T3.`feature_id` = T4.`feature_id` WHERE T4.`feature_name` LIKE '%swimming pool%'
SELECT `property_id`, `vendor_requested_price` FROM `Properties` ORDER BY `vendor_requested_price` ASC LIMIT 1
SELECT `property_id`, `vendor_requested_price` FROM `Properties` ORDER BY `vendor_requested_price` ASC LIMIT 1
SELECT AVG(`room_count`) FROM `Properties`
SELECT AVG(`room_count`) FROM `Properties`
SELECT count(DISTINCT `room_size`) FROM `Rooms`
SELECT count(DISTINCT `room_size`) FROM `Rooms`
SELECT DISTINCT `T1`.`user_id`, `T1`.`search_string` FROM `User_Searches` AS T1 JOIN `User_Searches` AS T2 ON `T1`.`user_id`  =  `T2`.`user_id` WHERE `T1`.`search_string`  !=  `T2`.`search_string`
SELECT DISTINCT `user_id`, `search_seq` FROM `User_Searches` GROUP BY `user_id` HAVING count(*)  >=  2
SELECT `search_datetime` FROM `User_Searches` ORDER BY `search_datetime` DESC LIMIT 1
SELECT `search_datetime` FROM `User_Searches` ORDER BY `search_datetime` DESC LIMIT 1
SELECT `search_datetime`, `search_string` FROM `User_Searches` ORDER BY `search_string` DESC
SELECT `search_string`, `search_datetime` FROM `User_Searches` ORDER BY `search_string` DESC
SELECT DISTINCT T1.`zip_postcode` FROM `Addresses` AS T1 JOIN `Properties` AS T2 ON T1.`address_id` = T2.`property_address_id` WHERE T2.`owner_user_id` IN (SELECT `owner_user_id` FROM `Properties` GROUP BY `owner_user_id` HAVING COUNT(*) > 2)
SELECT DISTINCT T1.`zip_postcode` FROM `Addresses` AS T1 JOIN `Properties` AS T2 ON T1.`address_id` = T2.`property_address_id` WHERE T2.`owner_user_id` IN (SELECT `owner_user_id` FROM `Properties` GROUP BY `owner_user_id` HAVING COUNT(*) > 2)
SELECT DISTINCT T1.`user_category_code`, T1.`user_id` FROM `Users` AS T1 INNER JOIN `User_Searches` AS T2 ON T1.`user_id` = T2.`user_id` GROUP BY T1.`user_id` HAVING count(*) = 1
SELECT DISTINCT `Users`.`user_id`, `Users`.`user_category_code` FROM `Users` INNER JOIN `User_Searches` ON `Users`.`user_id` = `User_Searches`.`user_id` GROUP BY `Users`.`user_id` HAVING count(*)  =  1
SELECT T1.`age_category_code` FROM `Ref_Age_Categories` AS T1 JOIN `Users` AS T2 ON T1.`age_category_code` = T2.`age_category_code` JOIN `User_Searches` AS T3 ON T2.`user_id` = T3.`user_id` ORDER BY T3.`search_datetime` LIMIT 1
SELECT T1.`age_category_code` FROM `Ref_Age_Categories` AS T1 INNER JOIN `Users` AS T2 ON T1.`age_category_code` = T2.`age_category_code` INNER JOIN `User_Searches` AS T3 ON T2.`user_id` = T3.`user_id` ORDER BY T3.`search_datetime` ASC LIMIT 1
SELECT `login_name` FROM `Users` WHERE `user_category_code` = 'Senior Citizen' ORDER BY `first_name`
SELECT `login_name` FROM `Users` WHERE `user_category_code` = 'Senior Citizen' ORDER BY `first_name`
SELECT COUNT(*) FROM `Users` WHERE `is_buyer` = 1
SELECT COUNT(*) FROM `Users` WHERE `is_buyer` = 1
SELECT `date_registered` FROM `Users` WHERE `login_name` = 'ratione'
SELECT `date_registered` FROM `Users` WHERE `login_name` = 'ratione'
SELECT `first_name`, `middle_name`, `last_name`, `login_name` FROM `Users` WHERE `is_seller` = 1
SELECT `first_name`, `middle_name`, `last_name`, `login_name` FROM `Users` WHERE `is_seller` = 1
SELECT T1.`line_1_number_building`, T1.`line_2_number_street`, T1.`town_city` FROM `Addresses` AS T1 JOIN `Users` AS T2 ON T1.`address_id` = T2.`user_address_id` JOIN `Ref_User_Categories` AS T3 ON T2.`user_category_code` = T3.`user_category_code` WHERE T3.`user_category_description` = 'Senior Citizen'
SELECT T1.`line_1_number_building`, T1.`line_2_number_street`, T1.town_city FROM `Addresses` AS T1 INNER JOIN `Users` AS T2 ON T1.`address_id` = T2.`user_address_id` INNER JOIN `Ref_User_Categories` AS T3 ON T2.`user_category_code` = T3.`user_category_code` WHERE T3.`user_category_description` = 'Senior Citizen'
SELECT count(DISTINCT `property_id`) FROM `Property_Features` GROUP BY `property_id` HAVING count(*)  >=  2
SELECT count(DISTINCT `property_id`) FROM `Property_Features` GROUP BY `property_id` HAVING count(*)  >=  2
SELECT `property_id`, count(*) FROM `Property_Photos` GROUP BY `property_id`
SELECT `property_id`, COUNT(*) FROM `Property_Photos` GROUP BY `property_id`
SELECT `T1`.`owner_user_id`, count(*) FROM `Properties` AS T1 JOIN `Property_Photos` AS T2 ON `T1`.`property_id`  =  `T2`.`property_id` GROUP BY `T1`.`owner_user_id`
SELECT `T1`.`owner_user_id`, count(*) FROM `Properties` AS `T1` JOIN `Property_Photos` AS `T2` ON `T1`.`property_id`  =  `T2`.`property_id` GROUP BY `T1`.`owner_user_id`
SELECT SUM(T1.`price_max`) FROM `Properties` AS T1 INNER JOIN `Users` AS T2 ON T1.`owner_user_id` = T2.`user_id` INNER JOIN `Ref_User_Categories` AS T3 ON T2.`user_category_code` = T3.`user_category_code` WHERE T3.`user_category_description` = 'Single Mother' OR T3.`user_category_description` = 'Student'
SELECT SUM(T1.`price_max`) FROM `Properties` AS T1 INNER JOIN `Users` AS T2 ON T1.`owner_user_id` = T2.`user_id` INNER JOIN `Ref_User_Categories` AS T3 ON T2.`user_category_code` = T3.`user_category_code` WHERE T3.`user_category_description` IN ('Single Mother', 'Student')
SELECT `User_Property_History`.`datestamp`, `Properties`.`property_name` FROM `User_Property_History` JOIN `Properties` ON `User_Property_History`.`property_id` = `Properties`.`property_id` ORDER BY `User_Property_History`.`datestamp`
SELECT `User_Property_History`.`datestamp`, `Properties`.`property_name` FROM `User_Property_History` JOIN `Properties` ON `User_Property_History`.`property_id` = `Properties`.`property_id` ORDER BY `User_Property_History`.`datestamp`
SELECT `property_type_description`, `property_type_code` FROM `Ref_Property_Types` ORDER BY `property_type_code` LIMIT 1
SELECT `property_type_code`, COUNT(*) AS count FROM `Properties` GROUP BY `property_type_code` ORDER BY count DESC LIMIT 1
SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60'
SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60'
SELECT `room_size`, count(*) FROM `Rooms` GROUP BY `room_size`
SELECT COUNT(*), `room_size` FROM `Rooms` GROUP BY `room_size`
SELECT T1.country FROM `Addresses` AS T1 JOIN `Users` AS T2 ON T1.address_id = T2.user_address_id WHERE T2.first_name = 'Robbie'
SELECT T1.country FROM `Addresses` AS T1 JOIN `Users` AS T2 ON T1.address_id = T2.user_address_id WHERE T2.first_name = 'Robbie'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM `Users` AS T1 INNER JOIN `Addresses` AS T2 ON T1.user_address_id = T2.address_id INNER JOIN `Properties` AS T3 ON T2.address_id = T3.property_address_id WHERE T1.user_id = T3.owner_user_id
SELECT DISTINCT T1.`first_name`, T1.`middle_name`, T1.`last_name` FROM `Users` AS T1 INNER JOIN `Properties` AS T2 ON T1.`user_id` = T2.`owner_user_id` WHERE T1.`user_address_id` = T2.`property_address_id`
SELECT DISTINCT T1.`search_string` FROM `User_Searches` AS T1 JOIN `Users` AS T2 ON T1.`user_id` = T2.`user_id` WHERE NOT EXISTS ( SELECT 1 FROM `Properties` WHERE `owner_user_id` = T2.`user_id` )
SELECT DISTINCT `search_string` FROM `User_Searches` WHERE `user_id` NOT IN (SELECT `owner_user_id` FROM `Properties`)
SELECT DISTINCT T1.last_name, T1.user_id FROM `Users` AS T1 INNER JOIN `Properties` AS T2 ON T1.user_id = T2.owner_user_id INNER JOIN `User_Searches` AS T3 ON T1.user_id = T3.user_id GROUP BY T1.user_id HAVING count(T2.property_id) >= 2 AND count(T3.search_seq) <= 2
SELECT DISTINCT T1.last_name, T1.user_id FROM `Users` AS T1 INNER JOIN `User_Searches` AS T2 ON T1.user_id  =  T2.user_id INNER JOIN `Properties` AS T3 ON T1.user_id  =  T3.owner_user_id GROUP BY T1.user_id HAVING count(T2.search_seq) <= 2 INTERSECT SELECT DISTINCT T1.last_name, T1.user_id FROM `Users` AS T1 INNER JOIN `User_Searches` AS T2 ON T1.user_id  =  T2.user_id INNER JOIN `Properties` AS T3 ON T1.user_id  =  T3.owner_user_id GROUP BY T1.user_id HAVING count(T3.property_id) >= 2
SELECT count(*) FROM `bike` WHERE weight > 780
SELECT `product_name`, `weight` FROM `bike` ORDER BY `price` ASC
SELECT `heat`, `name`, `nation` FROM `cyclist`
SELECT MAX(weight), MIN(weight) FROM `bike`
SELECT avg(Price) FROM bike WHERE Material = 'Carbon CC'
SELECT `name`, `result` FROM cyclist WHERE nation != 'Russia'
SELECT DISTINCT `bike`.`id`, `bike`.`product_name` FROM `bike` JOIN `cyclists_own_bikes` ON `bike`.`id` = `cyclists_own_bikes`.`bike_id` WHERE `cyclists_own_bikes`.`purchase_year` > 2015
SELECT `b`.`id`, `b`.`product_name` FROM `bike` AS `b` JOIN `cyclists_own_bikes` AS `cb` ON `b`.`id` = `cb`.`bike_id` GROUP BY `b`.`id` HAVING COUNT(DISTINCT `cb`.`cyclist_id`) >= 4
SELECT `cyclist_id`, T1.`name` FROM cyclists_own_bikes AS T LEFT JOIN cyclist AS T1 ON T.cyclist_id  =  T1.id GROUP BY `cyclist_id` ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT T1.`product_name` FROM `bike` AS T1 JOIN `cyclists_own_bikes` AS T2 ON T1.id = T2.bike_id JOIN `cyclist` AS T3 ON T2.cyclist_id = T3.id WHERE T3.nation = 'Russia' OR T3.nation = 'Great Britain'
SELECT count(DISTINCT `heat`) FROM cyclist
SELECT count(*) FROM cyclist WHERE id NOT IN (SELECT cyclist_id FROM cyclists_own_bikes WHERE purchase_year > 2015)
SELECT DISTINCT T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id JOIN cyclist AS T3 ON T2.cyclist_id  =  T3.id WHERE T3.result < '4:21.558'
SELECT T1.product_name, T1.price FROM bike AS T1 INNER JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id INNER JOIN cyclist AS T3 ON T2.cyclist_id = T3.id WHERE T3.name = 'Bradley Wiggins' UNION SELECT T1.product_name, T1.price FROM bike AS T1 INNER JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id INNER JOIN cyclist AS T3 ON T2.cyclist_id = T3.id WHERE T3.name = 'Antonio Tauler'
SELECT `name`, `nation`, `result` FROM `cyclist` WHERE NOT EXISTS (SELECT 1 FROM `cyclists_own_bikes` WHERE `cyclist`.`id` = `cyclists_own_bikes`.`cyclist_id`)
SELECT `product_name` FROM `bike` WHERE `material` LIKE '%fiber%'
SELECT `cyclist_id`, count(DISTINCT `bike_id`) FROM `cyclists_own_bikes` GROUP BY `cyclist_id` ORDER BY `cyclist_id`
SELECT `Flavor` FROM `goods` WHERE `Food` = 'Cake' ORDER BY `Price` DESC LIMIT 1
SELECT `Id`, `Flavor` FROM `goods` WHERE `Food` = 'Cake' ORDER BY `Price` DESC LIMIT 1
SELECT `Flavor`, `Food` FROM `goods` WHERE `Food` = 'Cookie' ORDER BY `Price` ASC LIMIT 1
SELECT `Id`, `Flavor` FROM `goods` WHERE `Food` = 'Cookie' ORDER BY `Price` ASC LIMIT 1
SELECT `Id` FROM `goods` WHERE `Flavor` LIKE 'Apple'
SELECT `Id` FROM `goods` WHERE `Flavor` LIKE 'apple'
SELECT Id FROM goods WHERE Price < 3
SELECT Id FROM goods WHERE Price < 3
SELECT DISTINCT T1.CustomerId FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber  =  T2.Receipt INNER JOIN goods AS T3 ON T2.Item  =  T3.Id WHERE T3.Food  =  'Cake' AND T3.Flavor  =  'Lemon'
SELECT DISTINCT T1.CustomerId FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id WHERE T3.Flavor = 'Lemon' AND T3.Food = 'Cake'
SELECT count(DISTINCT T1.CustomerId),  T2.Food FROM receipts AS T1 INNER JOIN items AS T3 ON T1.ReceiptNumber  =  T3.Receipt INNER JOIN goods AS T2 ON T3.Item  =  T2.Id GROUP BY T2.Food
SELECT count(DISTINCT T1.CustomerId), T3.Food FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt JOIN goods AS T3 ON T2.Item = T3.Id GROUP BY T3.Food
SELECT `CustomerId` FROM `receipts` GROUP BY `CustomerId` HAVING count(*)  >=  15
SELECT `CustomerId` FROM `receipts` GROUP BY `CustomerId` HAVING count(*)  >=  15
SELECT DISTINCT T1.LastName FROM customers AS T1 INNER JOIN receipts AS T2 ON T1.Id = T2.CustomerId GROUP BY T1.Id HAVING count(*)  >  10
SELECT DISTINCT T1.LastName FROM customers AS T1 INNER JOIN receipts AS T2 ON T1.Id = T2.CustomerId GROUP BY T1.Id HAVING count(*)  >  10
SELECT count(DISTINCT `Flavor`) FROM `goods` WHERE `Food` = 'Cake'
SELECT count(DISTINCT `Flavor`) FROM `goods` WHERE `Food` = 'Cake'
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Croissant'
SELECT `Flavor` FROM `goods` WHERE `Food` LIKE 'Croissant'
SELECT DISTINCT `T2`.`Item` FROM `receipts` AS T1 JOIN `items` AS T2 ON T1.ReceiptNumber = T2.Receipt WHERE T1.CustomerId = 15
SELECT DISTINCT `Item` FROM `items` WHERE `Receipt` IN (SELECT `ReceiptNumber` FROM `receipts` WHERE `CustomerId` = 15)
SELECT `Food`, avg(`Price`), max(`Price`), min(`Price`) FROM `goods` GROUP BY `Food`
SELECT `Food`, AVG(`Price`), MIN(`Price`), MAX(`Price`) FROM `goods` GROUP BY `Food`
SELECT T1.ReceiptNumber FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id WHERE T3.Food = 'Cake' INTERSECT SELECT T1.ReceiptNumber FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id WHERE T3.Food = 'Cookie'
SELECT T1.Receipt FROM items AS T1 INNER JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Food = 'Cake' INTERSECT SELECT T1.Receipt FROM items AS T1 INNER JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Food = 'Cookie'
SELECT DISTINCT `Receipt` FROM `items` AS t1 JOIN `goods` AS t2 ON t1.Item = t2.Id JOIN `receipts` AS t3 ON t1.Receipt = t3.ReceiptNumber JOIN `customers` AS t4 ON t3.CustomerId = t4.Id WHERE t4.LastName = 'LOGAN' AND t2.Food = 'Croissant'
SELECT DISTINCT `r`.`ReceiptNumber` FROM `receipts` AS `r` JOIN `customers` AS `c` ON `r`.`CustomerId` = `c`.`Id` JOIN `items` AS `i` ON `r`.`ReceiptNumber` = `i`.`Receipt` JOIN `goods` AS `g` ON `i`.`Item` = `g`.`Id` WHERE `c`.`LastName` = 'LOGAN' AND `g`.`Food` = 'Croissant'
SELECT DISTINCT `ReceiptNumber`, `Date` FROM `receipts` AS T1 JOIN `items` AS T2 ON T1.`ReceiptNumber` = T2.`Receipt` JOIN `goods` AS T3 ON T2.`Item` = T3.`Id` ORDER BY `Price` DESC LIMIT 1
SELECT `ReceiptNumber`, `Date` FROM `receipts` WHERE `ReceiptNumber` IN (SELECT `Receipt` FROM `items` WHERE `Item` = (SELECT `Id` FROM `goods` ORDER BY `Price` DESC LIMIT 1))
SELECT `Item` FROM `items` GROUP BY `Item` ORDER BY count(*) ASC LIMIT 1
SELECT `Item` FROM `items` GROUP BY `Item` ORDER BY count(*) ASC LIMIT 1
SELECT Food, count(DISTINCT Id) FROM goods GROUP BY Food
SELECT Food, count(*) FROM `goods` GROUP BY Food
SELECT AVG(Price), Food FROM `goods` GROUP BY Food
SELECT AVG(Price), Food FROM `goods` GROUP BY Food
SELECT `Id` FROM `goods` WHERE `Flavor` = 'Apricot' AND `Price` < 5
SELECT `Id` FROM `goods` WHERE `Flavor` = 'Apricot' AND `Price` < 5
SELECT Flavor FROM goods WHERE Price > 10
SELECT Flavor FROM goods WHERE Price > 10 AND Food = 'Cake'
SELECT DISTINCT `Id`, `Price` FROM `goods` WHERE `Price` < (SELECT avg(`Price`) FROM `goods`)
SELECT DISTINCT `Id`, `Price` FROM `goods` WHERE `Price` < (SELECT avg(`Price`) FROM `goods`)
SELECT DISTINCT `Id` FROM `goods` WHERE `Price` < (SELECT MAX(`Price`) FROM `goods` WHERE `Food` = 'Tart')
SELECT DISTINCT `Id` FROM `goods` WHERE `Price` < (SELECT min(`Price`) FROM `goods` WHERE `Food` = 'Tart')
SELECT DISTINCT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Price` > 13)
SELECT DISTINCT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Price` > 13)
SELECT DISTINCT `Date` FROM `receipts` AS T1 INNER JOIN `items` AS T2 ON T1.`ReceiptNumber`  =  T2.`Receipt` INNER JOIN `goods` AS T3 ON T2.`Item`  =  T3.`Id` WHERE T3.`Price`  >  15
SELECT DISTINCT T1.Date FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id WHERE T3.Price > 15
SELECT `Id` FROM `goods` WHERE `Id` LIKE '%APP%'
SELECT `Id` FROM `goods` WHERE `Id` LIKE '%APP%'
SELECT `Id`, `Price` FROM `goods` WHERE `Id` LIKE '%70%'
SELECT `Id`, `Price` FROM `goods` WHERE `Id` LIKE '%70%'
SELECT `LastName` FROM `customers` ORDER BY `LastName`
SELECT `LastName` FROM `customers` ORDER BY `LastName`
SELECT `Id` FROM `goods` ORDER BY `Id`
SELECT DISTINCT `Item` FROM `items` ORDER BY `Item`
SELECT `Receipt` FROM `items` WHERE `Item` = '90-APIE-10' UNION SELECT `ReceiptNumber` FROM `receipts` WHERE `CustomerId` = 12
SELECT `Receipt` FROM `items` WHERE `Item` = '90-APIE-10' UNION SELECT `ReceiptNumber` FROM `receipts` WHERE `CustomerId` = 12
SELECT `ReceiptNumber`, `date` FROM `receipts` WHERE `date` = (SELECT `date` FROM `receipts` ORDER BY `date` DESC LIMIT 1);
SELECT `ReceiptNumber`, `Date` FROM `receipts` ORDER BY `Date` DESC LIMIT 1
SELECT `ReceiptNumber` FROM `receipts` WHERE `Date` = (SELECT min(`Date`) FROM `receipts`) UNION ALL SELECT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Price` > 10)
SELECT DISTINCT `ReceiptNumber` FROM `receipts` WHERE `Date` = (SELECT min(`Date`) FROM `receipts`) UNION ALL SELECT DISTINCT T1.`ReceiptNumber` FROM `receipts` AS T1 INNER JOIN `items` AS T2 ON T1.`ReceiptNumber` = T2.`Receipt` INNER JOIN `goods` AS T3 ON T2.`Item` = T3.`Id` WHERE T3.`Price` > 10
SELECT `Id` FROM `goods` WHERE `Food` LIKE '%Cake%' OR `Food` LIKE '%Cookie%' AND `Price` BETWEEN 3 AND 7
SELECT `Id` FROM `goods` WHERE `Food` = 'Cake' AND `Price` BETWEEN 3 AND 7
SELECT T1.FirstName, T1.LastName FROM customers AS T1 INNER JOIN receipts AS T2 ON T1.Id = T2.CustomerId ORDER BY T2.Date ASC LIMIT 1
SELECT T1.FirstName, T1.LastName FROM customers AS T1 INNER JOIN receipts AS T2 ON T1.Id = T2.CustomerId ORDER BY T2.Date ASC LIMIT 1
SELECT avg(Price) FROM `goods` WHERE Flavor = 'Blackberry' OR Flavor = 'Blueberry'
SELECT avg(Price) FROM `goods` WHERE Flavor = 'Blackberry' OR Flavor = 'Blueberry'
SELECT min(Price) FROM `goods` WHERE Flavor = 'Casino'
SELECT `Id` FROM `goods` WHERE `Flavor` = 'Casino' ORDER BY `Price` ASC LIMIT 1
SELECT MAX(Price), MIN(Price), AVG(Price), Flavor FROM `goods` GROUP BY Flavor ORDER BY Flavor
SELECT Flavor, MAX(Price), MIN(Price), AVG(Price) FROM `goods` GROUP BY Flavor ORDER BY Flavor
SELECT min(Price), max(Price), Food FROM goods GROUP BY Food ORDER BY Food
SELECT MIN(Price), MAX(Price), Food FROM `goods` GROUP BY Food ORDER BY Food
SELECT `Date` FROM `receipts` GROUP BY `Date` ORDER BY count(*) DESC LIMIT 3
SELECT `Date` FROM receipts GROUP BY `Date` ORDER BY COUNT(*) DESC LIMIT 3
SELECT `FirstName`, `LastName`, count(*) FROM `customers` AS T1 INNER JOIN `receipts` AS T2 ON T1.Id = T2.CustomerId GROUP BY T1.Id ORDER BY count(*) DESC LIMIT 1
SELECT `CustomerId`, count(*) FROM `receipts` GROUP BY `CustomerId` ORDER BY count(*) DESC LIMIT 1
SELECT `Date`, COUNT(DISTINCT `CustomerId`) FROM `receipts` GROUP BY `Date`
SELECT `Date`, count(DISTINCT `CustomerId`) FROM receipts GROUP BY `Date`
SELECT T1.FirstName, T1.LastName FROM `customers` AS T1 INNER JOIN `receipts` AS T2 ON T1.Id = T2.CustomerId INNER JOIN `items` AS T3 ON T2.ReceiptNumber = T3.Receipt INNER JOIN `goods` AS T4 ON T3.Item = T4.Id WHERE T4.Flavor = 'Apple' AND T4.Food = 'Tart'
SELECT DISTINCT T1.FirstName, T1.LastName FROM customers AS T1 INNER JOIN receipts AS T2 ON T1.Id = T2.CustomerId INNER JOIN items AS T3 ON T2.ReceiptNumber = T3.Receipt INNER JOIN goods AS T4 ON T3.Item = T4.Id WHERE T4.Flavor = 'Apple' AND T4.Food = 'Tart'
SELECT `Id` FROM `goods` WHERE `Food` = 'Cookie' AND `Price` < (SELECT MIN(`Price`) FROM `goods` WHERE `Food` = 'Croissant')
SELECT `Id` FROM `goods` WHERE `Food` = 'Cookie' AND `Price` < (SELECT min(`Price`) FROM `goods` WHERE `Food` = 'Croissant')
SELECT Id FROM goods WHERE Food = 'Cake' AND Price >= (SELECT avg(Price) FROM goods WHERE Food = 'Tart')
SELECT Id FROM goods WHERE Food = 'Cake' AND Price >= (SELECT avg(Price) FROM goods WHERE Food = 'Tart')
SELECT `Id` FROM `goods` WHERE `Price` > (2 * (SELECT avg(`Price`) FROM `goods`))
SELECT `Id` FROM `goods` WHERE `Price` > (SELECT 2 * avg(`Price`) FROM `goods`)
SELECT `Id`, `Flavor`, `Food` FROM `goods` ORDER BY `Price`
SELECT `Id`, `Flavor`, `Food` FROM `goods` ORDER BY `Price`
SELECT `Id`, `Flavor` FROM `goods` WHERE `Food` = 'Cake' ORDER BY `Flavor`
SELECT `Id`, `Flavor` FROM `goods` WHERE `Food` = 'Cake' ORDER BY `Flavor`
SELECT `Id` FROM `goods` WHERE `Flavor` = 'Chocolate' EXCEPT SELECT `Item` FROM `items` GROUP BY `Item` HAVING count(*)  >  10
SELECT `Item` FROM `items` INNER JOIN `goods` ON `items`.`Item` = `goods`.`Id` WHERE `Flavor` = 'Chocolate' GROUP BY `Item` HAVING count(*) <= 10
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Cake' EXCEPT SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Tart'
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Cake' EXCEPT SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Tart'
SELECT `Item` FROM `items` GROUP BY `Item` ORDER BY count(*) DESC LIMIT 3
SELECT `Item` FROM `items` GROUP BY `Item` ORDER BY count(*) DESC LIMIT 3
SELECT T1.CustomerId FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber  =  T2.Receipt INNER JOIN goods AS T3 ON T2.Item  =  T3.Id GROUP BY T1.CustomerId HAVING sum(T3.Price) > 150
SELECT `CustomerId` FROM `receipts` AS T1 INNER JOIN `items` AS T2 ON T1.`ReceiptNumber` = T2.`Receipt` INNER JOIN `goods` AS T3 ON T2.`Item` = T3.`Id` GROUP BY `CustomerId` HAVING SUM(T3.`Price`)  >  150
SELECT DISTINCT T1.CustomerId FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id GROUP BY T1.CustomerId, T2.Item HAVING avg(T3.Price) > 5
SELECT T1.CustomerId FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id GROUP BY T1.CustomerId HAVING AVG(T3.Price) > 5
SELECT `Date` FROM receipts AS t1 INNER JOIN items AS t2 ON t1.ReceiptNumber = t2.Receipt INNER JOIN goods AS t3 ON t2.Item = t3.Id GROUP BY `Date` HAVING SUM(Price) > 100
SELECT T1.Date FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id GROUP BY T1.Date HAVING SUM(T3.Price) > 100
SELECT count(DISTINCT Driver) FROM driver
SELECT COUNT(DISTINCT Driver) FROM driver
SELECT Make, count(*) FROM driver WHERE Points  >  150 GROUP BY Make
SELECT `Make`, count(*) FROM driver WHERE Points  >  150 GROUP BY `Make`
SELECT `Make`, AVG(Age) FROM driver GROUP BY `Make`
SELECT AVG(Age), Make FROM driver GROUP BY Make
SELECT AVG(Laps) FROM `driver` WHERE Age  <  20
SELECT avg(`Laps`) FROM driver WHERE Age < 20
SELECT Manager, Sponsor FROM team ORDER BY Car_Owner
SELECT `Manager`, `Sponsor` FROM `team` ORDER BY `Car_Owner`
SELECT `Make` FROM `team` GROUP BY `Make` HAVING COUNT(*)  >  1
SELECT `Make` FROM `team` GROUP BY `Make` HAVING COUNT(*)  >  1
SELECT Make FROM team WHERE Car_Owner = 'Buddy Arrington'
SELECT Make FROM team WHERE Car_Owner = 'Buddy Arrington'
SELECT MAX(Points), MIN(Points) FROM `driver`
SELECT MAX(Points), MIN(Points) FROM `driver`
SELECT count(*) FROM `driver` WHERE Points < 150
SELECT count(*) FROM `driver` WHERE Points < 150
SELECT `Driver` FROM `driver` ORDER BY `Age` ASC
SELECT `Driver` FROM driver ORDER BY Age ASC
SELECT `Driver` FROM `driver` ORDER BY `Points` DESC
SELECT Driver FROM driver ORDER BY Points DESC
SELECT `Driver`, T1.`Country` FROM `driver` AS T1 JOIN `country` AS T2 ON T1.Country = T2.Country_Id
SELECT `Driver`, T1.`Country` FROM `driver` AS T1 JOIN `country` AS T2 ON T1.Country = T2.Country_Id
SELECT max(T1.Points) FROM driver AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Country_Id WHERE T2.Capital = 'Dublin'
SELECT max(T1.Points) FROM `driver` AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Country_Id WHERE T2.Capital = 'Dublin'
SELECT avg(T1.Age) FROM driver AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Country_Id WHERE T2.Official_native_language = 'English'
SELECT avg(T1.Age) FROM `driver` AS T1 JOIN country AS T2 ON T1.Country = T2.Country_Id WHERE T2.Official_native_language = 'English'
SELECT DISTINCT T1.Country FROM driver AS T1 JOIN country AS T2 ON T1.Country = T2.Country_Id WHERE T1.Points > 150
SELECT DISTINCT T1.Country FROM driver AS T1 INNER JOIN country AS T2 ON T1.Country = T2.Country_Id WHERE T1.Points > 150
SELECT T2.Capital FROM `driver` AS T1 JOIN `country` AS T2 ON T1.Country = T2.Country_Id ORDER BY T1.Points DESC LIMIT 1
SELECT T2.Capital FROM `driver` AS T1 JOIN `country` AS T2 ON T1.Country = T2.Country_Id ORDER BY T1.Points DESC LIMIT 1
SELECT `Make`, count(*) FROM `driver` GROUP BY `Make`
SELECT `Make`, count(DISTINCT `Driver_ID`) FROM `driver` GROUP BY `Make`
SELECT `Make` FROM `driver` GROUP BY `Make` ORDER BY count(*) DESC LIMIT 1
SELECT `Make` FROM `driver` GROUP BY `Make` ORDER BY count(*) DESC LIMIT 1
SELECT `Make` FROM `driver` GROUP BY `Make` HAVING COUNT(*)  >=  3
SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3
SELECT `Team` FROM `team` EXCEPT SELECT t.`Team` FROM `team` AS t JOIN `team_driver` AS td ON t.`Team_ID` = td.`Team_ID`
SELECT `Team` FROM `team` EXCEPT SELECT t.`Team` FROM `team` AS t JOIN `team_driver` AS td ON t.`Team_ID` = td.`Team_ID`
SELECT T1.Country FROM driver AS T1 WHERE T1.Make = 'Dodge' INTERSECT SELECT T1.Country FROM driver AS T1 WHERE T1.Make = 'Chevrolet'
SELECT T1.Country FROM driver AS T1 WHERE T1.Make = 'Dodge' INTERSECT SELECT T1.Country FROM driver AS T1 WHERE T1.Make = 'Chevrolet'
SELECT SUM(Points), AVG(Points) FROM `driver`
SELECT SUM(Points), AVG(Points) FROM `driver`
SELECT `Country` FROM `country` EXCEPT SELECT T1.`Country` FROM `driver` AS T1 INNER JOIN `country` AS T2 ON T1.`Country`  =  T2.`Country_Id`
SELECT `Country` FROM `country` EXCEPT SELECT T1.`Country` FROM `country` AS T1 JOIN `driver` AS T2 ON T1.`Country_Id`  =  T2.`Country`
SELECT `Manager`, `Sponsor` FROM `team` WHERE `Team_ID` IN (SELECT `Team_ID` FROM `team_driver` GROUP BY `Team_ID` ORDER BY count(*) DESC LIMIT 1)
SELECT `Manager`, `Sponsor` FROM `team` WHERE `Team_ID` IN (SELECT `Team_ID` FROM `team_driver` GROUP BY `Team_ID` ORDER BY count(*) DESC LIMIT 1)
SELECT Manager, Car_Owner FROM team WHERE Team_ID IN (SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING COUNT(*) >= 2)
SELECT `Manager`, `Car_Owner` FROM `team` WHERE `Team_ID` IN (SELECT `Team_ID` FROM `team_driver` GROUP BY `Team_ID` HAVING COUNT(*) >= 2)
SELECT COUNT(*) FROM `institution`
SELECT COUNT(*) FROM `institution`
SELECT `Name` FROM `institution` ORDER BY `Name` ASC
SELECT `Name` FROM `institution` ORDER BY `Name`
SELECT `Name` FROM `institution` ORDER BY `Founded` ASC
SELECT `Name` FROM `institution` ORDER BY `Founded`
SELECT DISTINCT `City`, `Province` FROM `institution`
SELECT DISTINCT `City`, `Province` FROM institution
SELECT MAX(Enrollment), MIN(Enrollment) FROM `institution`
SELECT MAX(Enrollment), MIN(Enrollment) FROM `institution`
SELECT Affiliation FROM institution WHERE City != 'Vancouver'
SELECT Affiliation FROM institution WHERE City NOT LIKE 'Vancouver'
SELECT `Stadium` FROM `institution` ORDER BY `Capacity` DESC
SELECT `Stadium` FROM `institution` ORDER BY `Capacity` DESC
SELECT `Stadium` FROM `institution` ORDER BY `Enrollment` DESC LIMIT 1
SELECT `Stadium` FROM `institution` WHERE `Enrollment` = (SELECT MAX(`Enrollment`) FROM `institution`)
SELECT `institution`.`Name`, `Championship`.`Nickname` FROM `institution` JOIN `Championship` ON `institution`.`Institution_ID` = `Championship`.`Institution_ID`
SELECT `institution`.Name, `Championship`.Nickname FROM `institution` JOIN `Championship` ON `institution`.Institution_ID  =  `Championship`.Institution_ID
SELECT T2.Nickname FROM institution AS T1 INNER JOIN Championship AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Enrollment ASC LIMIT 1
SELECT `Nickname` FROM `institution` AS T1 JOIN `Championship` AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY Enrollment ASC LIMIT 1
SELECT T1.Name FROM institution AS T1 INNER JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Number_of_Championships DESC
SELECT T1.Name FROM institution AS T1 INNER JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Number_of_Championships DESC
SELECT DISTINCT `Name` FROM `institution` AS T1 JOIN `Championship` AS T2 ON T1.`Institution_ID`  =  T2.`Institution_ID` WHERE T2.`Number_of_Championships`  >=  1
SELECT DISTINCT `Name` FROM `institution` AS T1 JOIN `Championship` AS T2 ON T1.`Institution_ID`  =  T2.`Institution_ID` WHERE T2.`Number_of_Championships`  >=  1
SELECT sum(T1.Number_of_Championships) FROM Championship AS T1 INNER JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  'Public'
SELECT sum(`Number_of_Championships`) FROM `institution` AS T1 JOIN `Championship` AS T2 ON T1.`Institution_ID`  =  T2.`Institution_ID` WHERE T1.`Affiliation`  =  'Public'
SELECT DISTINCT Affiliation FROM institution
SELECT Affiliation, count(DISTINCT Institution_ID) FROM institution GROUP BY Affiliation
SELECT Affiliation FROM `institution` GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
SELECT Affiliation FROM `institution` GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Founded` FROM institution GROUP BY `Founded` HAVING COUNT(*)  >  1
SELECT DISTINCT Founded, count(*) FROM institution GROUP BY Founded HAVING count(*)  >  1
SELECT `Nickname` FROM `institution` AS T1 JOIN `Championship` AS T2 ON T1.`Institution_ID`  =  T2.`Institution_ID` ORDER BY T1.`Capacity` DESC
SELECT T2.Nickname FROM institution AS T1 INNER JOIN Championship AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Capacity DESC
SELECT sum(Enrollment) FROM institution WHERE City = 'Vancouver' UNION SELECT sum(Enrollment) FROM institution WHERE City = 'Calgary'
SELECT Enrollment FROM institution WHERE City = 'Vancouver' UNION SELECT Enrollment FROM institution WHERE City = 'Calgary'
SELECT Province FROM institution WHERE Founded < 1920 INTERSECT SELECT Province FROM institution WHERE Founded > 1950
SELECT `Province` FROM `institution` WHERE `Founded` < 1920 INTERSECT SELECT `Province` FROM `institution` WHERE `Founded` > 1950
SELECT count(DISTINCT `Province`) FROM institution
SELECT count(DISTINCT `Province`) FROM institution
SELECT * FROM `Warehouses`
SELECT * FROM `Warehouses`
SELECT DISTINCT `Contents` FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.`Warehouse`  =  T2.`Code` WHERE T2.`Location`  =  'New York'
SELECT DISTINCT `Contents` FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.`Warehouse`  =  T2.`Code` WHERE T2.`Location`  =  'New York'
SELECT `Contents` FROM `Boxes` WHERE `Value` > 150
SELECT `Contents` FROM `Boxes` WHERE `Value` > 150
SELECT `Warehouse`, AVG(`Value`) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, AVG(`Value`) FROM `Boxes` GROUP BY `Warehouse`
SELECT avg(Value), sum(Value) FROM `Boxes`
SELECT AVG(`Value`), SUM(`Value`) FROM `Boxes`
SELECT AVG(`Capacity`), SUM(`Capacity`) FROM `Warehouses`
SELECT AVG(Capacity), SUM(Capacity) FROM `Warehouses`
SELECT avg(Value), max(Value), Contents FROM `Boxes` GROUP BY Contents
SELECT AVG(`Value`), MAX(`Value`), `Contents` FROM `Boxes` GROUP BY `Contents`
SELECT `Contents` FROM `Boxes` GROUP BY `Contents` ORDER BY SUM(`Value`) DESC LIMIT 1
SELECT `Contents` FROM `Boxes` ORDER BY `Value` DESC LIMIT 1
SELECT avg(Value) FROM `Boxes`
SELECT avg(Value) FROM `Boxes`
SELECT DISTINCT `Contents` FROM `Boxes`
SELECT DISTINCT `Contents` FROM `Boxes`
SELECT count(DISTINCT `Contents`) FROM `Boxes`
SELECT count(DISTINCT `Contents`) FROM `Boxes`
SELECT `Location` FROM `Warehouses`
SELECT `Location` FROM `Warehouses`
SELECT `Code` FROM `Boxes` WHERE `Warehouse` IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'Chicago' OR `Location` = 'New York')
SELECT `Code` FROM `Boxes` WHERE `Warehouse` IN (SELECT `Code` FROM `Warehouses` WHERE `Location` LIKE 'Chicago' UNION SELECT `Code` FROM `Warehouses` WHERE `Location` LIKE 'New York')
SELECT SUM(T1.Value) FROM `Boxes` AS T1 INNER JOIN `Warehouses` AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location = 'Chicago' UNION SELECT SUM(T1.Value) FROM `Boxes` AS T1 INNER JOIN `Warehouses` AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location = 'New York'
SELECT sum(T1.Value) FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.Warehouse  =  T2.Code WHERE T2.Location  =  'Chicago' UNION SELECT sum(T1.Value) FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.Warehouse  =  T2.Code WHERE T2.Location  =  'New York'
SELECT DISTINCT `Contents` FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.`Warehouse`  =  T2.`Code` WHERE T2.`Location`  =  'Chicago' UNION SELECT DISTINCT `Contents` FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.`Warehouse`  =  T2.`Code` WHERE T2.`Location`  =  'New York'
SELECT DISTINCT `Contents` FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.`Warehouse`  =  T2.`Code` WHERE T2.`Location`  =  'Chicago' INTERSECT SELECT DISTINCT `Contents` FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.`Warehouse`  =  T2.`Code` WHERE T2.`Location`  =  'New York'
SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Warehouse` NOT IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'New York')
SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Contents` NOT IN (SELECT `Contents` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code` WHERE `Warehouses`.`Location` = 'New York')
SELECT DISTINCT T1.Location FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' EXCEPT SELECT DISTINCT T1.Location FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Scissors'
SELECT DISTINCT T1.Location FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' EXCEPT SELECT DISTINCT T1.Location FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Scissors'
SELECT DISTINCT `w`.`Code` FROM `Warehouses` AS `w` JOIN `Boxes` AS `b` ON `w`.`Code` = `b`.`Warehouse` WHERE `b`.`Contents` = 'Rocks' UNION SELECT DISTINCT `w`.`Code` FROM `Warehouses` AS `w` JOIN `Boxes` AS `b` ON `w`.`Code` = `b`.`Warehouse` WHERE `b`.`Contents` = 'Scissors'
SELECT DISTINCT `Warehouse` FROM `Boxes` WHERE `Contents` = 'Rocks' OR `Contents` = 'Scissors'
SELECT T1.Location FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' INTERSECT SELECT T1.Location FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Scissors'
SELECT T1.Location FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' INTERSECT SELECT T1.Location FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Scissors'
SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value`
SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value`
SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value` ASC LIMIT 1
SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value` ASC LIMIT 1
SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Value` > (SELECT AVG(`Value`) FROM `Boxes`)
SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Value` > (SELECT avg(`Value`) FROM `Boxes`)
SELECT DISTINCT `Contents` FROM `Boxes` ORDER BY `Contents`
SELECT DISTINCT `Contents` FROM `Boxes` ORDER BY `Contents`
SELECT `Code` FROM `Boxes` WHERE `Value` > COALESCE((SELECT MAX(`Value`) FROM `Boxes` WHERE `Contents` = 'Rocks'), 0)
SELECT `Code` FROM `Boxes` WHERE `Value` > COALESCE((SELECT MAX(`Value`) FROM `Boxes` WHERE `Contents` = 'Rocks'), 0)
SELECT `Code`, `Contents` FROM `Boxes` WHERE `Value` > (SELECT MAX(`Value`) FROM `Boxes` WHERE `Contents` = 'Scissors')
SELECT `Code`, `Contents` FROM `Boxes` WHERE `Value` > (SELECT max(`Value`) FROM `Boxes` WHERE `Contents` = 'Scissors')
SELECT SUM(T1.Value) FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.Warehouse = T2.Code WHERE T2.Code = (SELECT Code FROM Warehouses ORDER BY Capacity DESC LIMIT 1)
SELECT sum(T1.Value) FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.Warehouse  =  T2.Code WHERE T2.Code  =  (SELECT Code FROM Warehouses ORDER BY Capacity DESC LIMIT 1)
SELECT `Warehouse`, AVG(`Value`) FROM `Boxes` GROUP BY `Warehouse` HAVING AVG(`Value`) > 150
SELECT AVG(`Value`) FROM `Boxes` GROUP BY `Warehouse` HAVING AVG(`Value`) > 150
SELECT SUM(`Value`), COUNT(*) FROM `Boxes` GROUP BY `Contents`
SELECT `Contents`, SUM(`Value`), COUNT(*) FROM `Boxes` GROUP BY `Contents`
SELECT SUM(Capacity), AVG(Capacity), MAX(Capacity) FROM `Warehouses`
SELECT `Location`, SUM(`Capacity`), AVG(`Capacity`), MAX(`Capacity`) FROM `Warehouses` GROUP BY `Location`
SELECT SUM(`Capacity`) FROM `Warehouses`
SELECT SUM(Capacity) FROM `Warehouses`
SELECT MAX(T1.Value) FROM `Boxes` AS T1 INNER JOIN `Warehouses` AS T2 ON T1.Warehouse = T2.Code GROUP BY T2.Location
SELECT `w`.`Location`, MAX(`b`.`Value`) FROM `Warehouses` AS `w` JOIN `Boxes` AS `b` ON `w`.`Code` = `b`.`Warehouse` GROUP BY `w`.`Location`
SELECT `Warehouse`, COUNT(*) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, COUNT(*) FROM `Boxes` GROUP BY `Warehouse`
SELECT count(DISTINCT T1.Location) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code  =  T2.Warehouse WHERE T2.Contents  =  'Rocks'
SELECT count(DISTINCT `Warehouse`) FROM `Boxes` WHERE `Contents` = 'Rocks'
SELECT `Boxes`.`Code`, `Warehouses`.`Location` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code`
SELECT `Boxes`.`Code`, `Warehouses`.`Location` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code`
SELECT `Code` FROM `Boxes` WHERE `Warehouse` IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'Chicago')
SELECT `Code` FROM `Boxes` WHERE `Warehouse` IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'Chicago')
SELECT `Warehouse`, COUNT(*) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, COUNT(*) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, COUNT(DISTINCT `Contents`) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, COUNT(DISTINCT `Contents`) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Code` FROM `Warehouses`
SELECT `Code` FROM `Warehouses` WHERE (SELECT count(*) FROM `Boxes` WHERE `Boxes`.`Warehouse` = `Warehouses`.`Code`) > `Capacity`
SELECT sum(Value) FROM `Boxes` WHERE `Warehouse` NOT IN ( SELECT `Code` FROM `Warehouses` WHERE `Location` = 'Chicago')
SELECT sum(b.`Value`) FROM `Boxes` AS b JOIN `Warehouses` AS w ON b.`Warehouse` = w.`Code` WHERE w.`Location` != 'Chicago'
SELECT `University_Name`, `City`, `State` FROM `university` ORDER BY `University_Name`
SELECT `University_Name`, `City`, `State` FROM `university` ORDER BY `University_Name`
SELECT count(*) FROM `university` WHERE State = 'Illinois' UNION SELECT count(*) FROM `university` WHERE State = 'Ohio'
SELECT count(*) FROM university WHERE State = 'Illinois' UNION SELECT count(*) FROM university WHERE State = 'Ohio'
SELECT max(Enrollment), avg(Enrollment), min(Enrollment) FROM `university`
SELECT MAX(Enrollment), AVG(Enrollment), MIN(Enrollment) FROM `university`
SELECT DISTINCT `Team_Name` FROM `university` WHERE `Enrollment` > (SELECT avg(`Enrollment`) FROM `university`)
SELECT DISTINCT `Team_Name` FROM `university` WHERE `Enrollment` > (SELECT avg(`Enrollment`) FROM `university`)
SELECT DISTINCT `Home_Conference` FROM `university`
SELECT DISTINCT `Home_Conference` FROM `university`
SELECT `Home_Conference`, count(*) FROM `university` GROUP BY `Home_Conference`
SELECT `Home_Conference`, count(DISTINCT `University_ID`) FROM `university` GROUP BY `Home_Conference`
SELECT `State` FROM `university` GROUP BY `State` ORDER BY count(*) DESC LIMIT 1
SELECT `State` FROM `university` GROUP BY `State` ORDER BY count(*) DESC LIMIT 1
SELECT DISTINCT `Home_Conference` FROM `university` WHERE `Enrollment`  >  2000
SELECT DISTINCT `Home_Conference` FROM `university` GROUP BY `Home_Conference` HAVING avg(`Enrollment`)  >  2000
SELECT `Home_Conference` FROM `university` GROUP BY `Home_Conference` ORDER BY sum(`Enrollment`) ASC LIMIT 1
SELECT `Home_Conference` FROM `university` ORDER BY `Enrollment` ASC LIMIT 1
SELECT `Major_Name`, `Major_Code` FROM `major` ORDER BY `Major_Code`
SELECT `Major_Name`, `Major_Code` FROM `major` ORDER BY `Major_Code`
SELECT T1.Major_Name, T2.Rank FROM `major` AS T1 JOIN `major_ranking` AS T2 ON T1.Major_ID  =  T2.Major_ID JOIN `university` AS T3 ON T2.University_ID  =  T3.University_ID WHERE T3.University_Name  =  'Augustana College'
SELECT T1.Rank, T2.Major_Name FROM `major_ranking` AS T1 JOIN `major` AS T2 ON T1.Major_ID  =  T2.Major_ID JOIN `university` AS T3 ON T1.University_ID  =  T3.University_ID WHERE T3.University_Name  =  'Augustana College'
SELECT T1.`University_Name`, T1.City, T1.State FROM `university` AS T1 JOIN `major_ranking` AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN `major` AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T2.Rank = 1 AND T3.`Major_Name` = 'Accounting'
SELECT T1.University_Name, T1.City, T1.State FROM `university` AS T1 JOIN `major_ranking` AS T2 ON T1.University_ID  =  T2.University_ID JOIN `major` AS T3 ON T2.Major_ID  =  T3.Major_ID WHERE T3.Major_Name  =  'Accounting' AND T2.Rank  =  1
SELECT T1.University_Name FROM university AS T1 JOIN major_ranking AS T2 ON T1.University_ID  =  T2.University_ID WHERE T2.Rank  =  1 GROUP BY T1.University_Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.University_Name FROM university AS T1 JOIN major_ranking AS T2 ON T1.University_ID  =  T2.University_ID WHERE T2.Rank  =  1 GROUP BY T1.University_Name ORDER BY count(*) DESC LIMIT 1
SELECT `University_Name` FROM `university` WHERE `University_ID` NOT IN (SELECT `University_ID` FROM `major_ranking` WHERE `Rank` = 1)
SELECT `University_Name` FROM `university` EXCEPT SELECT T1.`University_Name` FROM `university` AS T1 JOIN `major_ranking` AS T2 ON T1.`University_ID` = T2.`University_ID` WHERE T2.`Rank` = 1
SELECT T1.University_Name FROM university AS T1 INNER JOIN major_ranking AS T2 ON T1.University_ID = T2.University_ID INNER JOIN major AS T3 ON T2.Major_ID = T3.Major_ID WHERE T3.Major_Name = 'Accounting' INTERSECT SELECT T1.University_Name FROM university AS T1 INNER JOIN major_ranking AS T2 ON T1.University_ID = T2.University_ID INNER JOIN major AS T3 ON T2.Major_ID = T3.Major_ID WHERE T3.Major_Name = 'Urban Education'
SELECT T1.University_Name FROM university AS T1 INNER JOIN major_ranking AS T2 ON T1.University_ID  =  T2.University_ID INNER JOIN major AS T3 ON T2.Major_ID  =  T3.Major_ID WHERE T3.Major_Name  =  'Accounting' INTERSECT SELECT T1.University_Name FROM university AS T1 INNER JOIN major_ranking AS T2 ON T1.University_ID  =  T2.University_ID INNER JOIN major AS T3 ON T2.Major_ID  =  T3.Major_ID WHERE T3.Major_Name  =  'Urban Education'
SELECT T1.University_Name, T2.Rank FROM `university` AS T1 JOIN `overall_ranking` AS T2 ON T1.University_ID  =  T2.University_ID WHERE T1.State  =  'Wisconsin'
SELECT T1.University_Name, T2.Rank FROM `university` AS T1 JOIN `overall_ranking` AS T2 ON T1.University_ID  =  T2.University_ID WHERE T1.State  =  'Wisconsin'
SELECT T1.`University_Name` FROM `university` AS T1 JOIN `overall_ranking` AS T2 ON T1.`University_ID` = T2.`University_ID` ORDER BY T2.`Research_point` DESC LIMIT 1
SELECT T1.`University_Name` FROM `university` AS T1 JOIN `overall_ranking` AS T2 ON T1.`University_ID` = T2.`University_ID` ORDER BY T2.`Research_point` DESC LIMIT 1
SELECT T1.University_Name FROM `university` AS T1 INNER JOIN `overall_ranking` AS T2 ON T1.University_ID  =  T2.University_ID ORDER BY T2.Reputation_point ASC
SELECT T1.University_Name FROM `university` AS T1 INNER JOIN `overall_ranking` AS T2 ON T1.University_ID  =  T2.University_ID ORDER BY T2.Reputation_point ASC
SELECT T1.`University_Name` FROM `university` AS T1 JOIN `major_ranking` AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN `major` AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Accounting' AND T2.`Rank` <= 3
SELECT T1.`University_Name` FROM `university` AS T1 JOIN `major_ranking` AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN `major` AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Accounting' AND T2.`Rank` <= 3
SELECT sum(T1.Enrollment) FROM `university` AS T1 JOIN `overall_ranking` AS T2 ON T1.University_ID  =  T2.University_ID WHERE T2.Rank <= 5
SELECT sum(T1.Enrollment) FROM `university` AS T1 JOIN `overall_ranking` AS T2 ON T1.University_ID  =  T2.University_ID WHERE T2.Rank <= 5
SELECT T1.University_Name, T2.Citation_point FROM `university` AS T1 JOIN `overall_ranking` AS T2 ON T1.University_ID  =  T2.University_ID WHERE T2.Reputation_point  >=  3
SELECT DISTINCT T1.`University_Name`, T2.`Citation_point` FROM `university` AS T1 JOIN `overall_ranking` AS T2 ON T1.`University_ID` = T2.`University_ID` ORDER BY T2.`Reputation_point` DESC LIMIT 3
SELECT DISTINCT `State` FROM `university` WHERE `Enrollment`  <  3000 GROUP BY `State` HAVING count(*)  >  2
SELECT DISTINCT `State` FROM `university` WHERE `Enrollment`  <  3000 GROUP BY `State` HAVING count(*)  >  2
SELECT `Title` FROM `Movies` WHERE `Rating` = 'null'
SELECT `Title` FROM `Movies` WHERE `Rating` = 'null'
SELECT `Title` FROM `Movies` WHERE `Rating` = 'G'
SELECT `Title` FROM `Movies` WHERE `Rating` = 'G'
SELECT T1.Title FROM `Movies` AS T1 JOIN `MovieTheaters` AS T2 ON T1.Code  =  T2.Movie WHERE T2.Name  =  'Odeon'
SELECT T1.Title FROM `Movies` AS T1 JOIN `MovieTheaters` AS T2 ON T1.Code  =  T2.Movie WHERE T2.Name  =  'Odeon'
SELECT T1.Title, T2.Name FROM `Movies` AS T1 INNER JOIN `MovieTheaters` AS T2 ON T1.Code = T2.Movie
SELECT T1.Title, T2.Name FROM `Movies` AS T1 JOIN `MovieTheaters` AS T2 ON T1.Code  =  T2.Movie
SELECT count(*) FROM `Movies` WHERE Rating = 'G'
SELECT count(*) FROM `Movies` WHERE Rating = 'G'
SELECT count(DISTINCT `Movie`) FROM `MovieTheaters`
SELECT count(DISTINCT Movie) FROM MovieTheaters WHERE Movie IS NOT NULL
SELECT count(DISTINCT `Movie`) FROM `MovieTheaters`
SELECT count(DISTINCT `Movie`) FROM `MovieTheaters`
SELECT count(DISTINCT `Code`) FROM MovieTheaters
SELECT count(DISTINCT `Code`) FROM `MovieTheaters`
SELECT T1.Rating FROM `Movies` AS T1 WHERE T1.Title LIKE '%Citizen%'
SELECT T1.Rating FROM `Movies` AS T1 INNER JOIN `MovieTheaters` AS T2 ON T1.Code = T2.Movie WHERE T1.Title LIKE '%Citizen%'
SELECT T1.Name FROM MovieTheaters AS T1 INNER JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'G' UNION SELECT T1.Name FROM MovieTheaters AS T1 INNER JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'PG'
SELECT DISTINCT T1.Name FROM MovieTheaters AS T1 INNER JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'G' OR T2.Rating = 'PG'
SELECT T1.Title FROM `Movies` AS T1 JOIN `MovieTheaters` AS T2 ON T1.Code  =  T2.Movie WHERE T2.Name  =  'Odeon' OR T2.Name  =  'Imperial'
SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'Odeon' UNION SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'Imperial'
SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code  =  T2.Movie WHERE T2.Name  =  'Odeon' UNION SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code  =  T2.Movie WHERE T2.Name  =  'Imperial'
SELECT T1.`Movie` FROM `MovieTheaters` AS T1 INNER JOIN `MovieTheaters` AS T2 ON T1.`Movie`  =  T2.`Movie` WHERE T1.`Name`  =  'Odeon' AND T2.`Name`  =  'Imperial'
SELECT `Title` FROM `Movies` WHERE NOT EXISTS (SELECT 1 FROM `MovieTheaters` WHERE `MovieTheaters`.`Movie` = `Movies`.`Code` AND `MovieTheaters`.`Name` = 'Odeon')
SELECT `Title` FROM `Movies` WHERE `Code` NOT IN (SELECT `Movie` FROM `MovieTheaters` WHERE `Name` = 'Odeon')
SELECT `Title` FROM `Movies` ORDER BY `Title`
SELECT `Title` FROM `Movies` ORDER BY `Title`
SELECT `Title` FROM `Movies` ORDER BY `Rating`
SELECT `Title` FROM `Movies` ORDER BY `Rating`
SELECT `Name` FROM `MovieTheaters` GROUP BY `Name` ORDER BY count(*) DESC LIMIT 1
SELECT `Name` FROM `MovieTheaters` GROUP BY `Name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Title FROM `Movies` AS T1 JOIN `MovieTheaters` AS T2 ON T1.Code = T2.Movie GROUP BY T1.Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T1.Code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Rating, count(DISTINCT Code) FROM Movies GROUP BY Rating
SELECT Rating, count(DISTINCT Code) FROM `Movies` GROUP BY Rating
SELECT COUNT(*) FROM `Movies` WHERE `Rating` IS NOT NULL
SELECT COUNT(*) FROM `Movies` WHERE `Rating` IS NOT NULL
SELECT DISTINCT `Name` FROM `MovieTheaters` WHERE `Movie` IS NOT NULL
SELECT DISTINCT `Name` FROM `MovieTheaters` WHERE `Movie` IS NOT NULL
SELECT `Name` FROM `MovieTheaters` WHERE `Movie` = 'null'
SELECT `Name` FROM `MovieTheaters` WHERE `Movie` = 'null'
SELECT T1.Name FROM `MovieTheaters` AS T1 INNER JOIN `Movies` AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'G'
SELECT DISTINCT T1.Name FROM MovieTheaters AS T1 INNER JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'G'
SELECT DISTINCT `Title` FROM `Movies`
SELECT DISTINCT `Title` FROM `Movies`
SELECT DISTINCT `Rating` FROM `Movies`
SELECT DISTINCT `Rating` FROM `Movies`
SELECT * FROM `Movies` WHERE `Rating` = 'null'
SELECT * FROM `Movies` WHERE `Rating` = 'null'
SELECT `Title` FROM `Movies` WHERE NOT EXISTS (SELECT 1 FROM `MovieTheaters` WHERE `MovieTheaters`.`Movie` = `Movies`.`Code`)
SELECT `Title` FROM `Movies` EXCEPT SELECT T1.`Title` FROM `Movies` AS T1 JOIN `MovieTheaters` AS T2 ON T1.Code  =  T2.Movie
SELECT T1.Name FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Recipient ORDER BY T2.Weight DESC LIMIT 1
SELECT T1.Name FROM Client AS T1 INNER JOIN Package AS T2 ON T1.AccountNumber = T2.Recipient ORDER BY T2.Weight DESC LIMIT 1
SELECT sum(T1.Weight) FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.Sender = T2.AccountNumber WHERE T2.Name = 'Leo Wong'
SELECT sum(Weight) FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.Sender = T2.AccountNumber WHERE T2.Name = 'Leo Wong'
SELECT `Position` FROM `Employee` WHERE `Name` = 'Turanga Leela'
SELECT `Position` FROM `Employee` WHERE `Name` = 'Amy Wong'
SELECT `Salary`, `Position` FROM `Employee` WHERE `Name` = 'Turanga Leela'
SELECT `Salary`, `Position` FROM `Employee` WHERE `Name` = 'Turanga Leela'
SELECT avg(Salary) FROM `Employee` WHERE Position = 'Intern'
SELECT avg(Salary) FROM `Employee` WHERE Position = 'Intern'
SELECT T1.`Level` FROM `Has_Clearance` AS T1 JOIN `Employee` AS T2 ON T1.`Employee` = T2.`EmployeeID` WHERE T2.`position` = "Physician"
SELECT T2.Level FROM Employee AS T1 INNER JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee WHERE T1.Position = 'Physician'
SELECT `PackageNumber` FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT count(*) FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.Sender = T2.AccountNumber WHERE T2.Name = 'Leo Wong'
SELECT `PackageNumber` FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.`Recipient` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT `PackageNumber` FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Recipient` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT `PackageNumber` FROM `Client` AS T1 JOIN `Package` AS T2 ON T1.`AccountNumber` = T2.`Sender` WHERE T1.`Name` = 'Leo Wong' UNION SELECT `PackageNumber` FROM `Client` AS T1 JOIN `Package` AS T2 ON T1.`AccountNumber` = T2.`Recipient` WHERE T1.`Name` = 'Leo Wong'
SELECT DISTINCT `PackageNumber` FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong' UNION SELECT DISTINCT `PackageNumber` FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Recipient` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT count(*) FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.Sender = T2.AccountNumber INNER JOIN `Client` AS T3 ON T1.Recipient = T3.AccountNumber WHERE T2.Name = 'Ogden Wernstrom' AND T3.Name = 'Leo Wong'
SELECT count(*) FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.Sender = T2.AccountNumber INNER JOIN `Client` AS T3 ON T1.Recipient = T3.AccountNumber WHERE T2.Name = 'Ogden Wernstrom' AND T3.Name = 'Leo Wong'
SELECT `Contents` FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` = 'John Zoidfarb'
SELECT `Contents` FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` = 'John Zoidfarb'
SELECT `PackageNumber`, `Weight` FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` LIKE '%John%' ORDER BY `Weight` DESC LIMIT 1
SELECT `PackageNumber`, `Weight` FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` LIKE 'John%' ORDER BY `Weight` DESC LIMIT 1
SELECT `PackageNumber`, `Weight` FROM `Package` ORDER BY `Weight` ASC LIMIT 3
SELECT `PackageNumber`, `Weight` FROM `Package` ORDER BY `Weight` ASC LIMIT 3
SELECT T1.Name, count(*) FROM `Client` AS T1 JOIN `Package` AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T2.Sender ORDER BY count(*) DESC LIMIT 1
SELECT T1.Name, count(*) FROM `Client` AS T1 JOIN `Package` AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T1.AccountNumber ORDER BY count(*) DESC LIMIT 1
SELECT T1.Name, count(*) FROM `Client` AS T1 JOIN `Package` AS T2 ON T1.AccountNumber  =  T2.Recipient GROUP BY T2.Recipient ORDER BY count(*) ASC LIMIT 1
SELECT count(*), `Name` FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.Recipient = T2.AccountNumber GROUP BY T1.Recipient ORDER BY count(*) LIMIT 1
SELECT DISTINCT T1.Name FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber  =  T2.Sender GROUP BY T2.Sender HAVING COUNT(*)  >  1
SELECT DISTINCT T1.Name FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T2.Sender HAVING COUNT(*)  >  1
SELECT Coordinates FROM `Planet` WHERE Name = 'Mars'
SELECT `Coordinates` FROM `Planet` WHERE `Name` = 'Mars'
SELECT `Name`, `Coordinates` FROM `Planet` ORDER BY `Name`
SELECT `Name`, `Coordinates` FROM `Planet` ORDER BY `Name`
SELECT `ShipmentID` FROM `Shipment` AS T1 JOIN `Employee` AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = 'Phillip J. Fry'
SELECT `ShipmentID` FROM `Shipment` AS T1 JOIN `Employee` AS T2 ON T1.`Manager` = T2.`EmployeeID` WHERE T2.`Name` = 'Phillip J. Fry'
SELECT `Date` FROM `Shipment`
SELECT `Date` FROM `Shipment`
SELECT `ShipmentID` FROM `Shipment` WHERE `Planet` = (SELECT `PlanetID` FROM `Planet` WHERE `Name` = 'Mars')
SELECT `ShipmentID` FROM `Shipment` WHERE `Planet` = (SELECT `PlanetID` FROM `Planet` WHERE `Name` = 'Mars')
SELECT `ShipmentID` FROM `Shipment` AS T1 JOIN `Planet` AS T2 ON T1.`Planet` = T2.`PlanetID` JOIN `Employee` AS T3 ON T1.`Manager` = T3.`EmployeeID` WHERE T2.`Name` = 'Mars' AND T3.`Name` = 'Turanga Leela'
SELECT `ShipmentID` FROM `Shipment` AS T1 JOIN `Planet` AS T2 ON T1.`Planet` = T2.`PlanetID` JOIN `Employee` AS T3 ON T1.`Manager` = T3.`EmployeeID` WHERE T2.`Name` = 'Mars' AND T3.`Name` = 'Turanga Leela'
SELECT `ShipmentID` FROM `Shipment` AS T1 JOIN `Planet` AS T2 ON T1.`Planet` = T2.`PlanetID` WHERE T2.`Name` = 'Mars' UNION SELECT `ShipmentID` FROM `Shipment` AS T1 JOIN `Employee` AS T2 ON T1.`Manager` = T2.`EmployeeID` WHERE T2.`Name` = 'Turanga Leela'
SELECT `ShipmentID` FROM `Shipment` AS T1 JOIN `Planet` AS T2 ON T1.`Planet` = T2.`PlanetID` JOIN `Employee` AS T3 ON T1.`Manager` = T3.`EmployeeID` WHERE T2.`Name` = 'Mars' AND T3.`Name` = 'Turanga Leela'
SELECT T1.Name, count(T2.ShipmentID) FROM `Planet` AS T1 JOIN `Shipment` AS T2 ON T1.PlanetID  =  T2.Planet GROUP BY T1.Name
SELECT count(*), T1.Name FROM Planet AS T1 JOIN Shipment AS T2 ON T1.PlanetID  =  T2.Planet GROUP BY T1.Name
SELECT T1.Name FROM `Planet` AS T1 JOIN `Shipment` AS T2 ON T1.PlanetID  =  T2.Planet GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Name FROM `Planet` AS T1 JOIN `Shipment` AS T2 ON T1.PlanetID  =  T2.Planet GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Name, count(*) FROM `Employee` AS T1 JOIN `Shipment` AS T2 ON T1.EmployeeID  =  T2.Manager GROUP BY T1.Name
SELECT count(DISTINCT `ShipmentID`), `Name` FROM `Shipment` AS T1 JOIN `Employee` AS T2 ON T1.`Manager`  =  T2.`EmployeeID` GROUP BY T1.`Manager`
SELECT sum(T1.Weight) FROM `Package` AS T1 INNER JOIN `Shipment` AS T2 ON T1.Shipment = T2.ShipmentID INNER JOIN `Planet` AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = 'Mars'
SELECT sum(T1.Weight) FROM `Package` AS T1 INNER JOIN `Shipment` AS T2 ON T1.Shipment = T2.ShipmentID INNER JOIN `Planet` AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = 'Mars'
SELECT T1.Name, sum(T2.Weight) FROM Planet AS T1 JOIN Shipment AS T3 ON T1.PlanetID  =  T3.Planet JOIN Package AS T2 ON T3.ShipmentID  =  T2.Shipment GROUP BY T1.Name
SELECT T1.Name, sum(T2.Weight) FROM `Planet` AS T1 JOIN `Shipment` AS T3 ON T1.PlanetID  =  T3.Planet JOIN `Package` AS T2 ON T3.ShipmentID  =  T2.Shipment GROUP BY T1.Name
SELECT T1.Name FROM `Planet` AS T1 INNER JOIN `Shipment` AS T2 ON T1.PlanetID  =  T2.Planet INNER JOIN `Package` AS T3 ON T2.ShipmentID  =  T3.Shipment GROUP BY T1.Name HAVING sum(T3.Weight) > 30
SELECT T1.Name FROM `Planet` AS T1 INNER JOIN `Shipment` AS T2 ON T1.PlanetID  =  T2.Planet INNER JOIN `Package` AS T3 ON T2.ShipmentID  =  T3.Shipment GROUP BY T1.Name HAVING sum(T3.Weight)  >  30
SELECT `PackageNumber` FROM `Package` AS T1 JOIN `Shipment` AS T2 ON T1.`Shipment` = T2.`ShipmentID` JOIN `Planet` AS T3 ON T2.`Planet` = T3.`PlanetID` JOIN `Client` AS T4 ON T1.`Sender` = T4.`AccountNumber` WHERE T3.`Name` = 'Omicron Persei 8' AND T4.`Name` = 'Zapp Brannigan'
SELECT count(*) FROM `Package` AS T1 INNER JOIN `Shipment` AS T2 ON T1.Shipment = T2.ShipmentID INNER JOIN `Client` AS T3 ON T1.Sender = T3.AccountNumber INNER JOIN `Planet` AS T4 ON T2.Planet = T4.PlanetID WHERE T3.Name = 'Zapp Brannigan' AND T4.Name = 'Omicron Persei 8'
SELECT `PackageNumber` FROM `Package` AS T1 JOIN `Shipment` AS T2 ON T1.`Shipment` = T2.`ShipmentID` JOIN `Planet` AS T3 ON T2.`Planet` = T3.`PlanetID` JOIN `Client` AS T4 ON T1.`Sender` = T4.`AccountNumber` WHERE T3.`Name` = 'Omicron Persei 8' UNION SELECT `PackageNumber` FROM `Package` AS T1 JOIN `Client` AS T4 ON T1.`Sender` = T4.`AccountNumber` WHERE T4.`Name` = 'Zapp Brannigan'
SELECT count(*) FROM `Package` AS T1 INNER JOIN `Shipment` AS T2 ON T1.Shipment = T2.ShipmentID INNER JOIN `Planet` AS T3 ON T2.Planet = T3.PlanetID INNER JOIN `Client` AS T4 ON T1.Sender = T4.AccountNumber WHERE T3.Name = 'Omicron Persei 8' UNION SELECT count(*) FROM `Package` AS T1 INNER JOIN `Client` AS T4 ON T1.Sender = T4.AccountNumber WHERE T4.Name = 'Zapp Brannigan'
SELECT `PackageNumber`, `Weight` FROM `Package` WHERE `Weight` BETWEEN 10 AND 30
SELECT `PackageNumber`, `Weight` FROM `Package` WHERE `Weight` BETWEEN 10 AND 30
SELECT `Name` FROM `Employee` WHERE `EmployeeID` NOT IN (SELECT `Employee` FROM `Has_Clearance` WHERE `Planet` = (SELECT `PlanetID` FROM `Planet` WHERE `Name` = 'Mars'))
SELECT `Name` FROM `Employee` WHERE `EmployeeID` NOT IN (SELECT `Employee` FROM `Has_Clearance` WHERE `Planet` = (SELECT `PlanetID` FROM `Planet` WHERE `Name` = 'Mars'))
SELECT T1.Name FROM `Employee` AS T1 INNER JOIN `Has_Clearance` AS T2 ON T1.EmployeeID = T2.Employee INNER JOIN `Planet` AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = 'Omega III'
SELECT T1.Name FROM `Employee` AS T1 INNER JOIN `Has_Clearance` AS T2 ON T1.EmployeeID = T2.Employee INNER JOIN `Planet` AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = 'Omega III'
SELECT T1.Name FROM `Planet` AS T1 INNER JOIN `Has_Clearance` AS T2 ON T1.PlanetID  =  T2.Planet GROUP BY T1.PlanetID HAVING count(*)  =  1
SELECT DISTINCT T1.Name FROM Planet AS T1 INNER JOIN Has_Clearance AS T2 ON T1.PlanetID = T2.Planet GROUP BY T1.PlanetID HAVING count(T2.Employee) = 1
SELECT `Name` FROM `Employee` WHERE `Salary` BETWEEN 5000 AND 10000
SELECT `Name` FROM `Employee` WHERE `Salary` BETWEEN 5000 AND 10000
SELECT `Name` FROM `Employee` WHERE `Salary` > (SELECT avg(`Salary`) FROM `Employee`) OR `Salary` > 5000
SELECT `Name` FROM `Employee` WHERE `Salary` > (SELECT avg(`Salary`) FROM `Employee`) OR `Salary` > 5000
SELECT count(*) FROM `Employee` WHERE NOT EXISTS (SELECT * FROM `Has_Clearance` WHERE `Has_Clearance`.`Employee` = `Employee`.`EmployeeID` AND `Planet` = (SELECT `PlanetID` FROM `Planet` WHERE `Name` = 'Mars'))
SELECT count(*) FROM `Employee` WHERE EmployeeID NOT IN (SELECT Employee FROM Has_Clearance WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars'))
SELECT COUNT(*) FROM `game`
SELECT COUNT(*) FROM `game`
SELECT `Title`, `Developers` FROM `game` ORDER BY `Units_sold_Millions` DESC
SELECT `Title`, `Developers` FROM `game` ORDER BY `Units_sold_Millions` DESC
SELECT avg(Units_sold_Millions) FROM `game` WHERE Developers != 'Nintendo'
SELECT avg(Units_sold_Millions) FROM `game` WHERE Developers != 'Nintendo'
SELECT DISTINCT `Platform_name`, `Market_district` FROM `platform`
SELECT `Platform_name`, `Market_district` FROM `platform`
SELECT `Platform_name`, `Platform_ID` FROM platform WHERE `Download_rank` = 1
SELECT `Platform_name`, `Platform_ID` FROM platform WHERE `Download_rank` = 1
SELECT MAX(Rank_of_the_year), MIN(Rank_of_the_year) FROM player
SELECT MAX(Rank_of_the_year), MIN(Rank_of_the_year) FROM player
SELECT count(*) FROM `player` WHERE Rank_of_the_year  <  3
SELECT count(*) FROM `player` WHERE Rank_of_the_year <= 3
SELECT `Player_name` FROM player ORDER BY `Player_name` ASC
SELECT `Player_name` FROM player ORDER BY `Player_name`
SELECT `Player_name`, `College` FROM `player` ORDER BY `Rank_of_the_year` DESC
SELECT `Player_name`, `College` FROM `player` ORDER BY `Rank_of_the_year` DESC
SELECT T1.Player_name, T1.Rank_of_the_year FROM player AS T1 INNER JOIN game_player AS T2 ON T1.Player_ID  =  T2.Player_ID INNER JOIN game AS T3 ON T2.Game_ID  =  T3.Game_ID WHERE T3.Title  =  'Super Mario World'
SELECT T1.Player_name, T1.Rank_of_the_year FROM player AS T1 INNER JOIN game_player AS T2 ON T1.Player_ID  =  T2.Player_ID INNER JOIN game AS T3 ON T2.Game_ID  =  T3.Game_ID WHERE T3.Title  =  'Super Mario World'
SELECT DISTINCT `Developers` FROM `game` AS T1 JOIN `game_player` AS T2 ON T1.`Game_ID` = T2.`Game_ID` JOIN `player` AS T3 ON T2.`Player_ID` = T3.`Player_ID` WHERE T3.`College` = 'Auburn'
SELECT DISTINCT `Developers` FROM `game` AS T1 JOIN `game_player` AS T2 ON T1.`Game_ID`  =  T2.`Game_ID` JOIN `player` AS T3 ON T2.`Player_ID`  =  T3.`Player_ID` WHERE T3.`College`  =  'Auburn'
SELECT avg(T1.`Units_sold_Millions`) FROM `game` AS T1 JOIN `game_player` AS T2 ON T1.`Game_ID` = T2.`Game_ID` JOIN `player` AS T3 ON T2.`Player_ID` = T3.`Player_ID` WHERE T3.`Position` = 'Guard'
SELECT avg(T1.`Units_sold_Millions`) FROM `game` AS T1 JOIN game_player AS T2 ON T1.`Game_ID`  =  T2.`Game_ID` JOIN player AS T3 ON T2.`Player_ID`  =  T3.`Player_ID` WHERE T3.Position = 'Guard'
SELECT `Title`, T2.`Platform_name` FROM `game` AS T1 JOIN `platform` AS T2 ON T1.`Platform_ID`  =  T2.`Platform_ID`
SELECT `Title`, T2.`Platform_name` FROM `game` AS T1 JOIN `platform` AS T2 ON T1.`Platform_ID`  =  T2.`Platform_ID`
SELECT DISTINCT `Title` FROM `game` AS T1 JOIN `platform` AS T2 ON T1.`Platform_ID`  =  T2.`Platform_ID` WHERE T2.`Market_district`  =  'Asia' UNION SELECT DISTINCT `Title` FROM `game` AS T1 JOIN `platform` AS T2 ON T1.`Platform_ID`  =  T2.`Platform_ID` WHERE T2.`Market_district`  =  'USA'
SELECT DISTINCT `Title` FROM `game` AS T1 JOIN `platform` AS T2 ON T1.`Platform_ID`  =  T2.`Platform_ID` WHERE T2.`Market_district`  =  'Asia' UNION SELECT DISTINCT `Title` FROM `game` AS T1 JOIN `platform` AS T2 ON T1.`Platform_ID`  =  T2.`Platform_ID` WHERE T2.`Market_district`  =  'USA'
SELECT `Franchise`, COUNT(DISTINCT `Game_ID`) FROM `game` GROUP BY `Franchise`
SELECT Franchise, count(DISTINCT Game_ID) FROM game GROUP BY Franchise
SELECT `Franchise` FROM `game` GROUP BY `Franchise` ORDER BY count(*) DESC LIMIT 1
SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Franchise` FROM `game` GROUP BY `Franchise` HAVING COUNT(*)  >=  2
SELECT DISTINCT `Franchise` FROM `game` GROUP BY `Franchise` HAVING COUNT(*)  >=  2
SELECT `Player_name` FROM player WHERE NOT EXISTS (SELECT 1 FROM game_player WHERE player.Player_ID = game_player.Player_ID)
SELECT `Player_name` FROM player WHERE NOT EXISTS (SELECT 1 FROM game_player WHERE player.Player_ID = game_player.Player_ID)
SELECT DISTINCT `Title` FROM `game` AS T1 INNER JOIN `game_player` AS T2 ON T1.`Game_ID` = T2.`Game_ID` INNER JOIN `player` AS T3 ON T2.`Player_ID` = T3.`Player_ID` WHERE T3.`College` = 'Oklahoma' INTERSECT SELECT DISTINCT `Title` FROM `game` AS T1 INNER JOIN `game_player` AS T2 ON T1.`Game_ID` = T2.`Game_ID` INNER JOIN `player` AS T3 ON T2.`Player_ID` = T3.`Player_ID` WHERE T3.`College` = 'Auburn'
SELECT T1.Title FROM `game` AS T1 INNER JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID INNER JOIN `player` AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College = 'Oklahoma' UNION SELECT DISTINCT T1.Title FROM `game` AS T1 INNER JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID INNER JOIN `player` AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College = 'Auburn'
SELECT DISTINCT `Franchise` FROM `game`
SELECT DISTINCT `Franchise` FROM `game`
SELECT `Title` FROM `game` WHERE NOT EXISTS (SELECT 1 FROM `game_player` AS T1 JOIN `player` AS T2 ON T1.`Player_ID` = T2.`Player_ID` WHERE T1.`Game_ID` = `game`.`Game_ID` AND T2.`Position` = 'Guard')
SELECT `Title` FROM `game` WHERE NOT EXISTS (SELECT 1 FROM `game_player` AS T1 JOIN `player` AS T2 ON T1.`Player_ID` = T2.`Player_ID` WHERE T1.`Game_ID` = `game`.`Game_ID` AND T2.`Position` = 'Guard')
SELECT Name FROM press ORDER BY Year_Profits_billion DESC
SELECT Name FROM press ORDER BY Year_Profits_billion DESC
SELECT Name FROM press WHERE Year_Profits_billion  >  15 UNION SELECT Name FROM press WHERE Month_Profits_billion  >  1
SELECT `Name` FROM press WHERE Year_Profits_billion  >  15 UNION SELECT `Name` FROM press WHERE Month_Profits_billion  >  1
SELECT AVG(Year_Profits_billion), MAX(Year_Profits_billion) FROM `press`
SELECT AVG(Year_Profits_billion), MAX(Year_Profits_billion) FROM `press`
SELECT Name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1
SELECT Name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1
SELECT Name FROM press WHERE Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press) UNION SELECT Name FROM press WHERE Month_Profits_billion = (SELECT MIN(Month_Profits_billion) FROM press)
SELECT `Name` FROM (SELECT `Name` FROM `press` ORDER BY `Month_Profits_billion` DESC LIMIT 1 UNION ALL SELECT `Name` FROM `press` ORDER BY `Month_Profits_billion` ASC LIMIT 1)
SELECT count(*) FROM `author` WHERE Age < 30
SELECT COUNT(*) FROM `author` WHERE Age < 30
SELECT Gender, AVG(Age) FROM author GROUP BY Gender
SELECT `Gender`, avg(`Age`) FROM `author` GROUP BY `Gender`
SELECT Gender, count(*) FROM author WHERE Age  >  30 GROUP BY Gender
SELECT Gender, count(*) FROM author WHERE Age  >  30 GROUP BY Gender
SELECT `Title` FROM `book` ORDER BY `Release_date` DESC
SELECT `Title` FROM `book` ORDER BY `Release_date` DESC
SELECT Book_Series, COUNT(*) FROM `book` GROUP BY Book_Series
SELECT Book_Series, COUNT(*) FROM `book` GROUP BY Book_Series
SELECT `Title`, `Release_date` FROM `book` ORDER BY `Sale_Amount` DESC LIMIT 5
SELECT `Title`, `Release_date` FROM `book` ORDER BY `Sale_Amount` DESC LIMIT 5
SELECT `Book_Series` FROM `book` WHERE `Sale_Amount` > 1000 INTERSECT SELECT `Book_Series` FROM `book` WHERE `Sale_Amount` < 500
SELECT `Book_Series` FROM `book` WHERE `Sale_Amount` > 1000 INTERSECT SELECT `Book_Series` FROM `book` WHERE `Sale_Amount` < 500
SELECT T1.Name FROM author AS T1 INNER JOIN book AS T2 ON T1.Author_ID  =  T2.Author_ID WHERE T2.Book_Series  =  'MM' INTERSECT SELECT T1.Name FROM author AS T1 INNER JOIN book AS T2 ON T1.Author_ID  =  T2.Author_ID WHERE T2.Book_Series  =  'LT'
SELECT T1.Name FROM author AS T1 INNER JOIN book AS T2 ON T1.Author_ID  =  T2.Author_ID WHERE T2.Book_Series  =  'MM' INTERSECT SELECT T1.Name FROM author AS T1 INNER JOIN book AS T2 ON T1.Author_ID  =  T2.Author_ID WHERE T2.Book_Series  =  'LT'
SELECT `Name`, `Age` FROM `author` WHERE NOT EXISTS (SELECT 1 FROM `book` WHERE `book`.`Author_ID` = `author`.`Author_ID`)
SELECT `Name` FROM `author` EXCEPT SELECT T1.`Name` FROM `author` AS T1 JOIN `book` AS T2 ON T1.`Author_ID`  =  T2.`Author_ID`
SELECT DISTINCT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID  =  T2.Author_ID GROUP BY T1.Author_ID HAVING count(*)  >  1
SELECT DISTINCT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T1.Author_ID HAVING count(*)  >  1
SELECT `Title`, T1.`Name`, T2.`Name` FROM `book` AS T0 INNER JOIN `author` AS T1 ON T0.`Author_ID` = T1.`Author_ID` INNER JOIN `press` AS T2 ON T0.`Press_ID` = T2.`Press_ID` ORDER BY `Sale_Amount` DESC LIMIT 3
SELECT `Title`, T1.`Name`, T2.`Name` FROM `book` AS T0 INNER JOIN `author` AS T1 ON T0.`Author_ID` = T1.`Author_ID` INNER JOIN `press` AS T2 ON T0.`Press_ID` = T2.`Press_ID` ORDER BY `Sale_Amount` DESC LIMIT 3
SELECT T1.Name, sum(T2.Sale_Amount) FROM `press` AS T1 JOIN `book` AS T2 ON T1.Press_ID  =  T2.Press_ID GROUP BY T1.Name
SELECT T1.Name, sum(T2.Sale_Amount) FROM `press` AS T1 JOIN `book` AS T2 ON T1.Press_ID  =  T2.Press_ID GROUP BY T1.Name
SELECT t1.Name FROM press AS t1 JOIN book AS t2 ON t1.Press_ID  =  t2.Press_ID WHERE t2.Sale_Amount  >  1000 GROUP BY t1.Name
SELECT `p`.`Name`, count(*) FROM `press` AS `p` JOIN `book` AS `b` ON `p`.`Press_ID` = `b`.`Press_ID` WHERE `b`.`Sale_Amount` > 1000 GROUP BY `p`.`Name`
SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID  =  T2.Author_ID ORDER BY T2.Sale_Amount DESC LIMIT 1
SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID  =  T2.Author_ID ORDER BY T2.Sale_Amount DESC LIMIT 1
SELECT `Name`, `Gender` FROM author WHERE Author_ID IN (SELECT Author_ID FROM book GROUP BY Author_ID ORDER BY count(*) DESC LIMIT 1)
SELECT `Name`, `Gender` FROM author WHERE Author_ID IN (SELECT Author_ID FROM book GROUP BY Author_ID ORDER BY count(*) DESC LIMIT 1)
SELECT `Name` FROM `author` WHERE NOT EXISTS (SELECT 1 FROM `book` AS T1 JOIN `press` AS T2 ON T1.`Press_ID` = T2.`Press_ID` WHERE T1.`Author_ID` = `author`.`Author_ID` AND T2.`Name` = 'Accor')
SELECT `Name` FROM `author` WHERE NOT EXISTS (SELECT 1 FROM `book` AS T1 JOIN `press` AS T2 ON T1.`Press_ID` = T2.`Press_ID` WHERE T1.`Author_ID` = `author`.`Author_ID` AND T2.`Name` = 'Accor')
SELECT T1.Name, T1.Year_Profits_billion FROM `press` AS T1 JOIN `book` AS T2 ON T1.Press_ID  =  T2.Press_ID GROUP BY T1.Press_ID HAVING count(*)  >  2
SELECT `p`.`Name`, `p`.`Year_Profits_billion` FROM `press` AS `p` JOIN `book` AS `b` ON `p`.`Press_ID` = `b`.`Press_ID` GROUP BY `p`.`Press_ID` HAVING COUNT(*)  >  2
SELECT COUNT(DISTINCT `author_name`) FROM `Authors`
SELECT DISTINCT `author_name` FROM `Authors`
SELECT `author_name`, `other_details` FROM `Authors`
SELECT `other_details` FROM `Authors` WHERE `author_name` = 'Addison Denesik'
SELECT COUNT(*) FROM `Documents`
SELECT `author_name` FROM `Documents` WHERE `document_id` = 4
SELECT `author_name` FROM `Documents` WHERE `document_name` = 'Travel to Brazil'
SELECT count(*) FROM `Documents` WHERE author_name = 'Era Kerluke'
SELECT `document_name`, `document_description` FROM `Documents`
SELECT `document_id`, `document_name` FROM `Documents` WHERE `author_name` = 'Bianka Cummings'
SELECT `T1`.`author_name`, `T1`.`other_details` FROM `Authors` AS `T1` JOIN `Documents` AS `T2` ON `T1`.`author_name` = `T2`.`author_name` WHERE `T2`.`document_name` = 'Travel to China'
SELECT `author_name`, count(*) FROM `Documents` GROUP BY `author_name`
SELECT `author_name` FROM `Documents` GROUP BY `author_name` ORDER BY count(*) DESC LIMIT 1
SELECT `author_name` FROM `Documents` GROUP BY `author_name` HAVING count(*)  >=  2
SELECT COUNT(*) FROM `Business_Processes`
SELECT `next_process_id`, `process_name`, `process_description` FROM `Business_Processes` WHERE `process_id` = 9
SELECT `process_name` FROM `Business_Processes` WHERE `process_id` = (SELECT `next_process_id` FROM `Business_Processes` WHERE `process_id` = 9)
SELECT COUNT(*) FROM `Process_Outcomes`
SELECT DISTINCT `process_outcome_code`, `process_outcome_description` FROM `Process_Outcomes`
SELECT `process_outcome_description` FROM `Process_Outcomes` WHERE `process_outcome_code` = 'working'
SELECT COUNT(*) FROM `Process_Status`
SELECT DISTINCT `process_status_code`, `process_status_description` FROM `Process_Status`
SELECT process_status_description FROM Process_Status WHERE process_status_code = 'ct'
SELECT COUNT(*) FROM `Staff`
SELECT `staff_id`, `staff_details` FROM `Staff`
SELECT `staff_details` FROM `Staff` WHERE `staff_id` = 100
SELECT count(DISTINCT `staff_role_code`) FROM Ref_Staff_Roles
SELECT DISTINCT `staff_role_code`, `staff_role_description` FROM `Ref_Staff_Roles`
SELECT `staff_role_description` FROM `Ref_Staff_Roles` WHERE `staff_role_code` = 'HR'
SELECT count(DISTINCT `document_id`) FROM `Documents_Processes`
SELECT DISTINCT `process_id` FROM `Documents_Processes`
SELECT `document_id` FROM `Documents` EXCEPT SELECT `document_id` FROM `Documents_Processes`
SELECT T1.process_id FROM Business_Processes AS T1 LEFT JOIN Documents_Processes AS T2 ON T1.process_id  =  T2.process_id WHERE T2.document_id IS NULL
SELECT T2.`process_outcome_description`, T3.`process_status_description` FROM `Documents_Processes` AS T1 JOIN `Process_Outcomes` AS T2 ON T1.`process_outcome_code` = T2.`process_outcome_code` JOIN `Process_Status` AS T3 ON T1.`process_status_code` = T3.`process_status_code` WHERE T1.`document_id` = 0
SELECT T1.`process_name` FROM `Business_Processes` AS T1 JOIN `Documents_Processes` AS T2 ON T1.`process_id` = T2.`process_id` JOIN `Documents` AS T3 ON T2.`document_id` = T3.`document_id` WHERE T3.`document_name` = 'Travel to Brazil'
SELECT `process_id`, count(*) FROM `Documents_Processes` GROUP BY `process_id`
SELECT count(*) FROM `Staff_in_Processes` WHERE `document_id` = 0 AND `process_id` = 9
SELECT DISTINCT `staff_id`, count(*) FROM `Staff_in_Processes` GROUP BY `staff_id`
SELECT `staff_role_code`, count(DISTINCT `document_id`) FROM `Staff_in_Processes` GROUP BY `staff_role_code`
SELECT count(DISTINCT `staff_role_code`) FROM `Staff_in_Processes` WHERE `staff_id` = 3
SELECT COUNT(*) FROM `Agencies`
SELECT COUNT(*) FROM `Agencies`
SELECT `agency_id`, `agency_details` FROM `Agencies`
SELECT DISTINCT `agency_id`, `agency_details` FROM `Agencies`
SELECT COUNT(*) FROM `Clients`
SELECT COUNT(*) FROM `Clients`
SELECT `client_id`, `client_details` FROM `Clients`
SELECT DISTINCT `client_id`, `client_details` FROM `Clients`
SELECT `agency_id`, count(*) FROM `Clients` GROUP BY `agency_id`
SELECT `agency_id`, count(*) FROM `Clients` GROUP BY `agency_id`
SELECT `T1`.`agency_id`, `T1`.`agency_details` FROM `Agencies` AS `T1` JOIN `Clients` AS `T2` ON `T1`.`agency_id` = `T2`.`agency_id` GROUP BY `T1`.`agency_id` ORDER BY count(*) DESC LIMIT 1
SELECT `T1`.`agency_id`, `T1`.`agency_details` FROM `Agencies` AS `T1` JOIN `Clients` AS `T2` ON `T1`.`agency_id` = `T2`.`agency_id` GROUP BY `T1`.`agency_id` ORDER BY count(*) DESC LIMIT 1
SELECT T1.agency_id, T1.agency_details FROM `Agencies` AS T1 INNER JOIN `Clients` AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2
SELECT `T1`.`agency_id`, `T1`.`agency_details` FROM `Agencies` AS `T1` JOIN `Clients` AS `T2` ON `T1`.`agency_id` = `T2`.`agency_id` GROUP BY `T1`.`agency_id` HAVING count(*)  >=  2
SELECT T1.agency_details FROM `Agencies` AS T1 JOIN `Clients` AS T2 ON T1.agency_id  =  T2.agency_id WHERE T2.client_details  =  'Mac'
SELECT T1.agency_details FROM `Agencies` AS T1 JOIN `Clients` AS T2 ON T1.agency_id  =  T2.agency_id WHERE T2.client_details  =  'Mac'
SELECT `Clients`.`client_details`, `Agencies`.`agency_details` FROM `Clients` JOIN `Agencies` ON `Clients`.`agency_id` = `Agencies`.`agency_id`
SELECT `Clients`.`client_details`, `Agencies`.`agency_details` FROM `Clients` JOIN `Agencies` ON `Clients`.`agency_id` = `Agencies`.`agency_id`
SELECT `sic_code`, count(*) FROM `Clients` GROUP BY `sic_code`
SELECT `sic_code`, count(*) FROM `Clients` GROUP BY `sic_code`
SELECT `client_id`, `client_details` FROM `Clients` WHERE `sic_code` = 'Bad'
SELECT `client_id`, `client_details` FROM `Clients` WHERE `sic_code` = 'Bad'
SELECT T1.agency_id, T1.agency_details FROM `Agencies` AS T1 INNER JOIN `Clients` AS T2 ON T1.agency_id  =  T2.agency_id
SELECT T1.`agency_id`, T1.`agency_details` FROM `Agencies` AS T1 JOIN `Clients` AS T2 ON T1.`agency_id`  =  T2.`agency_id`
SELECT `agency_id` FROM `Agencies` EXCEPT SELECT `agency_id` FROM `Clients`
SELECT `agency_id` FROM `Agencies` EXCEPT SELECT `agency_id` FROM `Clients`
SELECT COUNT(*) FROM `Invoices`
SELECT count(*) FROM `Invoices`
SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices`
SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices`
SELECT `client_id`, count(*) FROM `Invoices` GROUP BY `client_id`
SELECT `client_id`, count(*) FROM `Invoices` GROUP BY `client_id`
SELECT `client_id`, `client_details` FROM `Clients` WHERE `client_id` IN (SELECT `client_id` FROM `Invoices` GROUP BY `client_id` ORDER BY count(*) DESC LIMIT 1)
SELECT `client_id`, `client_details` FROM `Clients` WHERE `client_id` = (SELECT `client_id` FROM `Invoices` GROUP BY `client_id` ORDER BY count(*) DESC LIMIT 1)
SELECT DISTINCT `client_id` FROM `Invoices` GROUP BY `client_id` HAVING COUNT(*)  >=  2
SELECT DISTINCT `client_id` FROM `Invoices` GROUP BY `client_id` HAVING COUNT(*) >= 2
SELECT `invoice_status`, COUNT(*) FROM `Invoices` GROUP BY `invoice_status`
SELECT `invoice_status`, count(*) FROM `Invoices` GROUP BY `invoice_status`
SELECT `invoice_status` FROM `Invoices` GROUP BY `invoice_status` ORDER BY count(*) DESC LIMIT 1
SELECT `invoice_status` FROM `Invoices` GROUP BY `invoice_status` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `I`.`invoice_status`, `I`.`invoice_details`, `C`.`client_id`, `C`.`client_details`, `A`.`agency_id`, `A`.`agency_details` FROM `Invoices` AS `I` JOIN `Clients` AS `C` ON `I`.`client_id` = `C`.`client_id` JOIN `Agencies` AS `A` ON `C`.`agency_id` = `A`.`agency_id`
SELECT `I`.`invoice_status`, `I`.`invoice_details`, `C`.`client_id`, `C`.`client_details`, `A`.`agency_id`, `A`.`agency_details` FROM `Invoices` AS `I` JOIN `Clients` AS `C` ON `I`.`client_id` = `C`.`client_id` JOIN `Agencies` AS `A` ON `C`.`agency_id` = `A`.`agency_id`
SELECT `meeting_type` FROM `Meetings`
SELECT `meeting_type`, `other_details` FROM `Meetings`
SELECT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`
SELECT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`
SELECT T2.payment_id, T2.payment_details FROM `Invoices` AS T1 JOIN `Payments` AS T2 ON T1.invoice_id = T2.invoice_id WHERE T1.invoice_status = 'Working'
SELECT T2.payment_id, T2.payment_details FROM `Invoices` AS T1 JOIN `Payments` AS T2 ON T1.invoice_id = T2.invoice_id WHERE T1.invoice_status = 'Working'
SELECT `invoice_id`, `invoice_status` FROM `Invoices` WHERE NOT EXISTS (SELECT 1 FROM `Payments` WHERE `Payments`.`invoice_id` = `Invoices`.`invoice_id`)
SELECT `invoice_id`, `invoice_status` FROM `Invoices` EXCEPT SELECT T1.`invoice_id`, T1.`invoice_status` FROM `Invoices` AS T1 JOIN `Payments` AS T2 ON T1.`invoice_id` = T2.`invoice_id`
SELECT COUNT(*) FROM `Payments`
SELECT COUNT(*) FROM `Payments`
SELECT `payment_id`, `invoice_id`, `payment_details` FROM `Payments`
SELECT `payment_id`, `invoice_id`, `payment_details` FROM `Payments`
SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id
SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id
SELECT `invoice_id`, COUNT(*) AS num_payments FROM `Payments` GROUP BY `invoice_id`
SELECT `invoice_id`, count(*) FROM `Payments` GROUP BY `invoice_id`
SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices` WHERE `invoice_id` IN (SELECT `invoice_id` FROM `Payments` GROUP BY `invoice_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices` WHERE `invoice_id` IN (SELECT `invoice_id` FROM `Payments` GROUP BY `invoice_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT COUNT(*) FROM `Staff`
SELECT COUNT(*) FROM `Staff`
SELECT `agency_id`, count(*) FROM `Staff` GROUP BY `agency_id`
SELECT `agency_id`, count(DISTINCT `staff_id`) FROM `Staff` GROUP BY `agency_id`
SELECT `agency_id`, `agency_details` FROM `Agencies` WHERE `agency_id` IN (SELECT `agency_id` FROM `Staff` GROUP BY `agency_id` ORDER BY count(*) DESC LIMIT 1)
SELECT `agency_id`, `agency_details` FROM `Agencies` WHERE `agency_id` = (SELECT `agency_id` FROM `Staff` GROUP BY `agency_id` ORDER BY count(*) DESC LIMIT 1)
SELECT `meeting_outcome`, count(*) FROM `Meetings` GROUP BY `meeting_outcome`
SELECT meeting_outcome, count(*) FROM `Meetings` GROUP BY meeting_outcome
SELECT `client_id`, count(*) FROM `Meetings` GROUP BY `client_id`
SELECT `client_id`, count(*) FROM `Meetings` GROUP BY `client_id`
SELECT `meeting_type`, count(*) FROM `Meetings` GROUP BY `meeting_type`
SELECT meeting_type, count(*) FROM `Meetings` GROUP BY meeting_type
SELECT `Meetings`.`meeting_id`, `Meetings`.`meeting_outcome`, `Meetings`.`meeting_type`, `Clients`.`client_details` FROM `Meetings` JOIN `Clients` ON `Meetings`.`client_id` = `Clients`.`client_id`
SELECT `Meetings`.`meeting_id`, `Meetings`.`meeting_outcome`, `Meetings`.`meeting_type`, `Clients`.`client_details` FROM `Meetings` JOIN `Clients` ON `Meetings`.`client_id` = `Clients`.`client_id`
SELECT `meeting_id`, count(*) FROM `Staff_in_Meetings` GROUP BY `meeting_id`
SELECT `meeting_id`, count(DISTINCT `staff_id`) FROM `Staff_in_Meetings` GROUP BY `meeting_id`
SELECT `staff_id`, count(*) FROM `Staff_in_Meetings` GROUP BY `staff_id` ORDER BY count(*) ASC LIMIT 1
SELECT DISTINCT `staff_id` FROM `Staff_in_Meetings` GROUP BY `staff_id` ORDER BY count(*) ASC LIMIT 1
SELECT count(DISTINCT `staff_id`) FROM `Staff_in_Meetings`
SELECT count(DISTINCT `staff_id`) FROM Staff_in_Meetings
SELECT count(DISTINCT `staff_id`) FROM `Staff` WHERE `staff_id` NOT IN (SELECT `staff_id` FROM `Staff_in_Meetings`)
SELECT count(DISTINCT `staff_id`) FROM `Staff` WHERE `staff_id` NOT IN (SELECT `staff_id` FROM `Staff_in_Meetings`)
SELECT `client_id`, `client_details` FROM `Clients` WHERE `client_id` IN (SELECT `client_id` FROM `Meetings` UNION SELECT `client_id` FROM `Invoices`)
SELECT `client_id`, `client_details` FROM `Clients` WHERE `client_id` IN (SELECT `client_id` FROM `Meetings` UNION SELECT `client_id` FROM `Invoices`)
SELECT DISTINCT `Staff`.`staff_id`, `Staff`.`staff_details` FROM `Staff` JOIN `Staff_in_Meetings` ON `Staff`.`staff_id` = `Staff_in_Meetings`.`staff_id` WHERE `Staff`.`staff_details` LIKE '%s%'
SELECT T1.staff_id, T1.staff_details FROM Staff AS T1 INNER JOIN Staff_in_Meetings AS T2 ON T1.staff_id  =  T2.staff_id WHERE T1.staff_details LIKE '%s%'
SELECT T1.`client_id`, T1.`sic_code`, T1.`agency_id` FROM `clients` AS T1 JOIN `meetings` AS T2 ON T1.`client_id` = T2.`client_id` GROUP BY T1.`client_id` HAVING COUNT(*) = 1 INTERSECT SELECT T1.`client_id`, T1.`sic_code`, T1.`agency_id` FROM `clients` AS T1 JOIN `invoices` AS T2 ON T1.`client_id` = T2.`client_id`
SELECT T1.`client_id`, T1.`sic_code`, T1.`agency_id` FROM `clients` AS T1 JOIN `meetings` AS T2 ON T1.`client_id` = T2.`client_id` GROUP BY T1.`client_id` HAVING COUNT(*) = 1 INTERSECT SELECT T1.`client_id`, T1.`sic_code`, T1.`agency_id` FROM `clients` AS T1 JOIN `invoices` AS T2 ON T1.`client_id` = T2.`client_id`
SELECT `Meetings`.`start_date_time`, `Meetings`.`end_date_time`, `Clients`.`client_details`, `Staff`.`staff_details` FROM `Meetings` JOIN `Clients` ON `Meetings`.`client_id` = `Clients`.`client_id` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` JOIN `Staff` ON `Staff_in_Meetings`.`staff_id` = `Staff`.`staff_id`
SELECT `Meetings`.`start_date_time`, `Meetings`.`end_date_time`, `Clients`.`client_details`, `Staff`.`staff_details` FROM `Meetings` JOIN `Clients` ON `Meetings`.`client_id` = `Clients`.`client_id` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` JOIN `Staff` ON `Staff_in_Meetings`.`staff_id` = `Staff`.`staff_id`
