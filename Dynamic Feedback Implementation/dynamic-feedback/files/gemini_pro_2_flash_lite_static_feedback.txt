SELECT COUNT(*) FROM `club`
SELECT count(*) FROM `club`
SELECT `Name` FROM `club` ORDER BY `Name`
SELECT `Name` FROM `club` ORDER BY `Name`
SELECT `Manager`, `Captain` FROM `club`
SELECT `Manager`, `Captain` FROM `club`
SELECT `Name` FROM `club` WHERE `Manufacturer` != 'Nike'
SELECT `Name` FROM `club` WHERE `Manufacturer` NOT LIKE 'Nike'
SELECT `Name` FROM `player` ORDER BY `Wins_count` ASC
SELECT `Name` FROM `player` ORDER BY `Wins_count` ASC
SELECT `Name` FROM `player` ORDER BY `Earnings` DESC LIMIT 1
SELECT `Name` FROM `player` ORDER BY `Earnings` DESC LIMIT 1
SELECT DISTINCT `Country` FROM `player` WHERE `Earnings` > 1200000
SELECT DISTINCT `Country` FROM `player` WHERE `Earnings` > 1200000
SELECT T1.`Country` FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Wins_count > 2 ORDER BY T1.Earnings DESC LIMIT 1
SELECT T1.`Country` FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Wins_count > 2 ORDER BY T1.Earnings DESC LIMIT 1
SELECT T1.`Name`, T2.`Name` FROM player AS T1 JOIN club AS T2 ON T1.`Club_ID` = T2.`Club_ID`
SELECT T1.`Name`, T2.`Name` FROM player AS T1 JOIN club AS T2 ON T1.`Club_ID` = T2.`Club_ID`
SELECT T1.`Name` FROM club AS T1 JOIN player AS T2 ON T1.`Club_ID` = T2.`Club_ID` WHERE T2.`Wins_count` > 2
SELECT T1.`Name` FROM club AS T1 JOIN player AS T2 ON T1.`Club_ID` = T2.`Club_ID` WHERE T2.`Wins_count` > 2
SELECT T1.`Name` FROM player AS T1 JOIN club AS T2 ON T1.`Club_ID` = T2.`Club_ID` WHERE T2.`Manager` = "Sam Allardyce"
SELECT T1.`Name` FROM player AS T1 JOIN club AS T2 ON T1.`Club_ID` = T2.`Club_ID` WHERE T2.`Manager` = 'Sam Allardyce'
SELECT T1.`Name` FROM club AS T1 JOIN player AS T2 ON T1.`Club_ID` = T2.`Club_ID` GROUP BY T1.`Club_ID` ORDER BY AVG(T2.`Earnings`) DESC
SELECT T1.`Name` FROM club AS T1 JOIN player AS T2 ON T1.`Club_ID` = T2.`Club_ID` GROUP BY T1.`Club_ID` ORDER BY AVG(T2.`Earnings`) DESC
SELECT `Manufacturer`, COUNT(DISTINCT `Club_ID`) FROM `club` GROUP BY `Manufacturer`
SELECT `Manufacturer`, count(DISTINCT `Club_ID`) FROM club GROUP BY `Manufacturer`
SELECT Manufacturer FROM `club` GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Manufacturer` FROM `club` GROUP BY `Manufacturer` ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Manufacturer` FROM `club` GROUP BY `Manufacturer` HAVING COUNT(DISTINCT `Club_ID`) > 1
SELECT DISTINCT `Manufacturer` FROM `club` GROUP BY `Manufacturer` HAVING count(DISTINCT `Club_ID`)  >  1
SELECT DISTINCT `Country` FROM `player` GROUP BY `Country` HAVING COUNT(*) > 1
SELECT DISTINCT `Country` FROM `player` GROUP BY `Country` HAVING count(*)  >  1
SELECT `Name` FROM `club` EXCEPT SELECT T1.`Name` FROM `club` AS T1 INNER JOIN `player` AS T2 ON T1.`Club_ID` = T2.`Club_ID`
SELECT `Name` FROM `club` EXCEPT SELECT T1.`Name` FROM `club` AS T1 JOIN `player` AS T2 ON T1.`Club_ID` = T2.`Club_ID`
SELECT `Country` FROM player WHERE `Earnings` > 1400000 UNION SELECT `Country` FROM player WHERE `Earnings` < 1100000
SELECT Country FROM player WHERE Earnings > 1400000 INTERSECT SELECT Country FROM player WHERE Earnings < 1100000
SELECT count(DISTINCT `Country`) FROM `player`
SELECT count(DISTINCT `Country`) FROM `player`
SELECT `Earnings` FROM `player` WHERE `Country` = 'Australia' OR `Country` = 'Zimbabwe'
SELECT `Earnings` FROM `player` WHERE `Country` = 'Australia' OR `Country` = 'Zimbabwe'
SELECT T1.`customer_id`, T1.`customer_first_name`, T1.`customer_last_name` FROM `Customers` AS T1 JOIN `Orders` AS T2 ON T1.`customer_id` = T2.`customer_id` JOIN `Order_Items` AS T3 ON T2.`order_id` = T3.`order_id` GROUP BY T1.`customer_id` HAVING COUNT(DISTINCT T2.`order_id`) > 2 AND COUNT(T3.`order_item_id`) >= 3
SELECT DISTINCT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T1.order_id = T3.order_id GROUP BY T1.customer_id HAVING COUNT(T1.order_id) > 2 AND COUNT(T3.order_item_id) >= 3
SELECT `O`.`order_id`, `O`.`order_status_code`, COUNT(`OI`.`product_id`) FROM `Orders` AS `O` JOIN `Order_Items` AS `OI` ON `O`.`order_id` = `OI`.`order_id` GROUP BY `O`.`order_id`, `O`.`order_status_code`
SELECT `O`.`order_id`, `O`.`order_status_code`, COUNT(`OI`.`product_id`) FROM `Orders` AS `O` JOIN `Order_Items` AS `OI` ON `O`.`order_id` = `OI`.`order_id` GROUP BY `O`.`order_id`, `O`.`order_status_code`
SELECT DISTINCT `T1`.`date_order_placed` FROM `Orders` AS `T1` JOIN `Order_Items` AS `T2` ON `T1`.`order_id` = `T2`.`order_id` GROUP BY `T1`.`order_id` HAVING COUNT(*) > 1 UNION SELECT `date_order_placed` FROM `Orders` ORDER BY `date_order_placed` LIMIT 1
SELECT DISTINCT T1.`date_order_placed` FROM `Orders` AS T1 INNER JOIN `Order_Items` AS T2 ON T1.`order_id` = T2.`order_id` GROUP BY T1.`order_id` HAVING COUNT(T2.`order_item_id`) > 1 UNION SELECT MIN(T1.`date_order_placed`) FROM `Orders` AS T1
SELECT `customer_first_name`, `customer_middle_initial`, `customer_last_name` FROM `Customers` WHERE NOT EXISTS (SELECT 1 FROM `Orders` WHERE `Customers`.`customer_id` = `Orders`.`customer_id`)
SELECT `customer_first_name`, `customer_last_name`, `customer_middle_initial` FROM `Customers` EXCEPT SELECT T1.customer_first_name, T1.customer_last_name, T1.customer_middle_initial FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id
SELECT DISTINCT `product_id`, `product_name`, `product_price`, `product_color` FROM `Products` WHERE `product_id` NOT IN (SELECT `product_id` FROM `Order_Items` GROUP BY `product_id` HAVING COUNT(*) >= 2)
SELECT DISTINCT `p`.`product_id`, `p`.`product_name`, `p`.`product_price`, `p`.`product_color` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` GROUP BY `p`.`product_id` HAVING COUNT(DISTINCT `oi`.`order_id`) < 2
SELECT DISTINCT `O`.`order_id`, `O`.`date_order_placed` FROM `Orders` AS `O` JOIN `Order_Items` AS `OI` ON `O`.`order_id` = `OI`.`order_id` GROUP BY `O`.`order_id` HAVING COUNT(DISTINCT `OI`.`product_id`) >= 2
SELECT `T1`.`order_id`, `T1`.`date_order_placed` FROM `Orders` AS `T1` JOIN `Order_Items` AS `T2` ON `T1`.`order_id` = `T2`.`order_id` GROUP BY `T1`.`order_id` HAVING count(T2.product_id)  >=  2
SELECT T1.`product_id`, T1.`product_name`, T1.`product_price` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id` GROUP BY T1.`product_id` ORDER BY COUNT(T2.`order_id`) DESC LIMIT 1
SELECT T1.`product_id`, T1.`product_name`, T1.`product_price` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id` GROUP BY T1.`product_id` ORDER BY COUNT(T2.`product_id`) DESC
SELECT `Orders`.`order_id`, SUM(`Products`.`product_price`) FROM `Order_Items` JOIN `Products` ON `Order_Items`.`product_id` = `Products`.`product_id` JOIN `Orders` ON `Order_Items`.`order_id` = `Orders`.`order_id` GROUP BY `Orders`.`order_id` ORDER BY SUM(`Products`.`product_price`) ASC LIMIT 1
SELECT `Orders`.`order_id`, SUM(`Products`.`product_price`) FROM `Order_Items` JOIN `Products` ON `Order_Items`.`product_id` = `Products`.`product_id` JOIN `Orders` ON `Order_Items`.`order_id` = `Orders`.`order_id` GROUP BY `Orders`.`order_id` ORDER BY SUM(`Products`.`product_price`) LIMIT 1
SELECT `payment_method_code` FROM `Customer_Payment_Methods` GROUP BY `payment_method_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `payment_method_code` FROM `Customer_Payment_Methods` GROUP BY `payment_method_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.`gender_code`, COUNT(T2.`product_id`) FROM `Customers` AS T1 JOIN `Orders` AS T3 ON T1.`customer_id` = T3.`customer_id` JOIN `Order_Items` AS T2 ON T3.`order_id` = T2.`order_id` GROUP BY T1.`gender_code`
SELECT T2.`gender_code`, COUNT(DISTINCT T1.`product_id`) FROM `Order_Items` AS T1 JOIN `Orders` AS T3 ON T1.`order_id` = T3.`order_id` JOIN `Customers` AS T2 ON T3.`customer_id` = T2.`customer_id` GROUP BY T2.`gender_code`
SELECT T1.gender_code, COUNT(T2.order_id) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.gender_code
SELECT T1.gender_code, COUNT(T2.order_id) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.gender_code
SELECT T1.`customer_first_name`, T1.`customer_middle_initial`, T1.`customer_last_name`, T2.`payment_method_code` FROM `Customers` AS T1 JOIN `Customer_Payment_Methods` AS T2 ON T1.`customer_id` = T2.`customer_id`
SELECT T1.`customer_first_name`, T1.`customer_middle_initial`, T1.`customer_last_name`, T2.`payment_method_code` FROM `Customers` AS T1 JOIN `Customer_Payment_Methods` AS T2 ON T1.`customer_id` = T2.`customer_id`
SELECT T1.`invoice_status_code`, T1.`invoice_date`, T2.`shipment_date` FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.`invoice_number` = T2.`invoice_number`
SELECT DISTINCT `i`.`invoice_status_code`, `i`.`invoice_date`, `s`.`shipment_date` FROM `Invoices` AS `i` JOIN `Shipments` AS `s` ON `i`.`invoice_number` = `s`.`invoice_number`
SELECT T1.`product_name`, T2.`shipment_date` FROM `Products` AS T1 JOIN `Order_Items` AS T3 ON T1.`product_id` = T3.`product_id` JOIN `Shipment_Items` AS T4 ON T3.`order_item_id` = T4.`order_item_id` JOIN `Shipments` AS T2 ON T4.`shipment_id` = T2.`shipment_id`
SELECT DISTINCT `p`.`product_name`, `s`.`shipment_date` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` JOIN `Shipment_Items` AS `si` ON `oi`.`order_item_id` = `si`.`order_item_id` JOIN `Shipments` AS `s` ON `si`.`shipment_id` = `s`.`shipment_id`
SELECT T1.`order_item_status_code`, T2.`shipment_tracking_number` FROM `Order_Items` AS T1 JOIN `Shipment_Items` AS T3 ON T1.`order_item_id` = T3.`order_item_id` JOIN `Shipments` AS T2 ON T3.`shipment_id` = T2.`shipment_id`
SELECT T1.`order_item_status_code`, T2.`shipment_tracking_number` FROM `Order_Items` AS T1 JOIN `Shipment_Items` AS T3 ON T1.`order_item_id` = T3.`order_item_id` JOIN `Shipments` AS T2 ON T3.`shipment_id` = T2.`shipment_id`
SELECT T1.`product_name`, T1.`product_color` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id` JOIN `Shipment_Items` AS T3 ON T2.`order_item_id` = T3.`order_item_id` JOIN `Shipments` AS T4 ON T3.`shipment_id` = T4.`shipment_id`
SELECT T1.`product_name`, T1.`product_color` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id` JOIN `Shipment_Items` AS T3 ON T2.`order_item_id` = T3.`order_item_id` JOIN `Shipments` AS T4 ON T3.`shipment_id` = T4.`shipment_id`
SELECT DISTINCT `p`.`product_name`, `p`.`product_price`, `p`.`product_description` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` JOIN `Orders` AS `o` ON `oi`.`order_id` = `o`.`order_id` JOIN `Customers` AS `c` ON `o`.`customer_id` = `c`.`customer_id` WHERE `c`.`gender_code` = 'Female'
SELECT DISTINCT `p`.`product_name`, `p`.`product_price`, `p`.`product_description` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` JOIN `Orders` AS `o` ON `oi`.`order_id` = `o`.`order_id` JOIN `Customers` AS `c` ON `o`.`customer_id` = `c`.`customer_id` WHERE `c`.`gender_code` = 'Female'
SELECT DISTINCT `i`.`invoice_status_code` FROM `Invoices` AS `i` JOIN `Shipments` AS `s` ON `i`.`invoice_number` = `s`.`invoice_number` EXCEPT SELECT DISTINCT `i`.`invoice_status_code` FROM `Invoices` AS `i` JOIN `Shipments` AS `s` ON `i`.`invoice_number` = `s`.`invoice_number` JOIN `Orders` AS `o` ON `s`.`order_id` = `o`.`order_id` WHERE `o`.`order_status_code` = 'Shipped'
SELECT DISTINCT `i`.`invoice_status_code` FROM `Invoices` AS `i` LEFT JOIN `Shipments` AS `s` ON `i`.`invoice_number` = `s`.`invoice_number` WHERE `s`.`shipment_date` IS NULL
SELECT `O`.`order_id`, `O`.`date_order_placed`, SUM(`P`.`product_price`) FROM `Orders` AS `O` JOIN `Order_Items` AS `OI` ON `O`.`order_id` = `OI`.`order_id` JOIN `Products` AS `P` ON `OI`.`product_id` = `P`.`product_id` GROUP BY `O`.`order_id`
SELECT DISTINCT `O`.`order_id`, `O`.`date_order_placed`, SUM(`P`.`product_price`) FROM `Orders` AS `O` JOIN `Order_Items` AS `OI` ON `O`.`order_id` = `OI`.`order_id` JOIN `Products` AS `P` ON `OI`.`product_id` = `P`.`product_id` GROUP BY `O`.`order_id`, `O`.`date_order_placed`
SELECT COUNT(DISTINCT `customer_id`) FROM `Orders`
SELECT COUNT(DISTINCT `customer_id`) FROM `Orders`
SELECT COUNT(DISTINCT `order_status_code`) FROM `Orders`
SELECT DISTINCT `order_item_status_code` FROM `Order_Items`
SELECT COUNT(DISTINCT `payment_method_code`) FROM `Customer_Payment_Methods`
SELECT COUNT(DISTINCT `payment_method_code`) FROM `Customer_Payment_Methods`
SELECT `login_name`, `login_password` FROM `Customers` WHERE `phone_number` LIKE '+12%'
SELECT `login_name`, `login_password` FROM `Customers` WHERE `phone_number` LIKE '+12%'
SELECT `product_size` FROM `Products` WHERE `product_name` LIKE '%Dell%'
SELECT `product_size` FROM `Products` WHERE `product_name` LIKE '%Dell%'
SELECT `product_price`, `product_size` FROM `Products` WHERE `product_price` > (SELECT AVG(`product_price`) FROM `Products`)
SELECT `product_price`, `product_size` FROM `Products` WHERE `product_price` > (SELECT AVG(`product_price`) FROM `Products`)
SELECT count(DISTINCT `product_id`) FROM `Products` WHERE `product_id` NOT IN (SELECT `product_id` FROM `Order_Items`)
SELECT COUNT(DISTINCT `product_id`) FROM `Products` WHERE `product_id` NOT IN (SELECT DISTINCT `product_id` FROM `Order_Items`)
SELECT count(T1.`customer_id`) FROM `Customers` AS T1 LEFT JOIN `Customer_Payment_Methods` AS T2 ON T1.`customer_id` = T2.`customer_id` WHERE T2.`customer_id` IS NULL
SELECT count(T1.`customer_id`) FROM `Customers` AS T1 LEFT JOIN `Customer_Payment_Methods` AS T2 ON T1.`customer_id` = T2.`customer_id` WHERE T2.`customer_id` IS NULL
SELECT DISTINCT `order_status_code`, `date_order_placed` FROM `Orders`
SELECT `order_status_code`, `date_order_placed` FROM `Orders`
SELECT `address_line_1`, `town_city`, `county` FROM `Customers` WHERE `country` = 'USA'
SELECT `address_line_1`, `town_city`, `county` FROM `Customers` WHERE `country` = 'USA'
SELECT DISTINCT T1.customer_first_name, T2.product_name FROM Customers AS T1 JOIN Orders AS T3 ON T1.customer_id = T3.customer_id JOIN Order_Items AS T4 ON T3.order_id = T4.order_id JOIN Products AS T2 ON T4.product_id = T2.product_id
SELECT DISTINCT T1.customer_first_name, T3.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T4 ON T2.order_id = T4.order_id JOIN Products AS T3 ON T4.product_id = T3.product_id
SELECT COUNT(DISTINCT `shipment_id`) FROM `Shipments`
SELECT COUNT(DISTINCT `product_id`) FROM `Order_Items` AS T1 JOIN `Shipment_Items` AS T2 ON T1.`order_item_id` = T2.`order_item_id`
SELECT avg(`product_price`) FROM `Products`
SELECT avg(`product_price`) FROM `Products`
SELECT AVG(`product_price`) FROM `Products` JOIN `Order_Items` ON `Products`.`product_id` = `Order_Items`.`product_id`
SELECT AVG(`product_price`) FROM `Products` JOIN `Order_Items` ON `Products`.`product_id` = `Order_Items`.`product_id`
SELECT DISTINCT `email_address`, `town_city`, `county` FROM `Customers` WHERE `gender_code` = (SELECT `gender_code` FROM `Customers` GROUP BY `gender_code` ORDER BY COUNT(*) ASC LIMIT 1)
SELECT DISTINCT T1.email_address, T1.town_city, T1.county FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(T2.order_id) ASC
SELECT T1.`date_order_placed` FROM `Orders` AS T1 JOIN `Customers` AS T2 ON T1.`customer_id` = T2.`customer_id` JOIN `Customer_Payment_Methods` AS T3 ON T2.`customer_id` = T3.`customer_id` GROUP BY T1.`order_id` HAVING COUNT(T3.`payment_method_code`) >= 2
SELECT T1.`date_order_placed` FROM `Orders` AS T1 JOIN `Customer_Payment_Methods` AS T2 ON T1.`customer_id` = T2.`customer_id` GROUP BY T1.`order_id` HAVING COUNT(T2.`customer_id`) >= 2
SELECT DISTINCT `order_status_code` FROM `Orders`
SELECT `order_status_code` FROM `Orders` GROUP BY `order_status_code` ORDER BY COUNT(*) ASC LIMIT 1
SELECT T1.`product_id`, T1.`product_description` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id` GROUP BY T1.`product_id` HAVING COUNT(T2.`product_id`) > 3
SELECT DISTINCT `p`.`product_id`, `p`.`product_description` FROM `Products` AS `p` JOIN `Order_Items` AS `oi` ON `p`.`product_id` = `oi`.`product_id` GROUP BY `p`.`product_id` HAVING COUNT(*) > 3
SELECT T1.`invoice_date`, T1.`invoice_number` FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.`invoice_number` = T2.`invoice_number` GROUP BY T1.`invoice_number` HAVING COUNT(T2.`shipment_id`) >= 2
SELECT `invoice_date`, `invoice_number` FROM `Invoices` WHERE `invoice_number` IN (SELECT `invoice_number` FROM `Shipments` GROUP BY `invoice_number` HAVING COUNT(*) >= 2)
SELECT DISTINCT `shipment_tracking_number`, `shipment_date` FROM `Shipments`
SELECT `shipment_tracking_number`, `shipment_date` FROM `Shipments`
SELECT `product_color`, `product_description`, `product_size` FROM `Products` WHERE `product_price` < (SELECT MAX(`product_price`) FROM `Products`)
SELECT `product_color`, `product_description`, `product_size` FROM `Products` WHERE `product_price` != (SELECT MAX(`product_price`) FROM `Products`)
SELECT Name FROM director WHERE Age > (SELECT AVG(Age) FROM director)
SELECT `Name` FROM `director` ORDER BY `Age` DESC LIMIT 1
SELECT count(*) FROM `channel` WHERE `Internet` LIKE '%bbc%'
SELECT COUNT(DISTINCT `Digital_terrestrial_channel`) FROM `channel`
SELECT `Title` FROM `program` ORDER BY `Start_Year` DESC
SELECT T1.Name FROM director AS T1 JOIN program AS T2 ON T1.Director_ID = T2.Director_ID GROUP BY T1.Director_ID ORDER BY COUNT(T2.Program_ID) DESC LIMIT 1
SELECT T1.Name, T1.Age FROM director AS T1 JOIN program AS T2 ON T1.Director_ID = T2.Director_ID GROUP BY T1.Director_ID ORDER BY COUNT(T2.Program_ID) DESC LIMIT 1
SELECT `Title` FROM `program` ORDER BY `Start_Year` DESC LIMIT 1
SELECT T1.`Name`, T1.`Internet` FROM channel AS T1 JOIN program AS T2 ON T1.`Channel_ID` = T2.`Channel_ID` GROUP BY T1.`Channel_ID` HAVING COUNT(T2.`Program_ID`) > 1
SELECT T1.`Name`, COUNT(T2.`Program_ID`) FROM channel AS T1 JOIN program AS T2 ON T1.`Channel_ID` = T2.`Channel_ID` GROUP BY T1.`Channel_ID`
SELECT count(T1.`Channel_ID`) FROM channel AS T1 LEFT JOIN program AS T2 ON T1.`Channel_ID` = T2.`Channel_ID` WHERE T2.`Channel_ID` IS NULL
SELECT T1.Name FROM director AS T1 JOIN program AS T2 ON T1.Director_ID = T2.Director_ID WHERE T2.Title = 'Dracula'
SELECT T1.`Name`, T1.`Internet` FROM channel AS T1 JOIN program AS T2 ON T1.`Channel_ID` = T2.`Channel_ID` GROUP BY T1.`Channel_ID` ORDER BY COUNT(T2.`Director_ID`) DESC LIMIT 1
SELECT `Name` FROM `director` WHERE `Age` BETWEEN 30 AND 60
SELECT T1.`Name` FROM `channel` AS T1 JOIN `director_admin` AS T2 ON T1.`Channel_ID` = T2.`Channel_ID` JOIN `director` AS T3 ON T2.`Director_ID` = T3.`Director_ID` WHERE T3.`Age` < 40 INTERSECT SELECT T1.`Name` FROM `channel` AS T1 JOIN `director_admin` AS T2 ON T1.`Channel_ID` = T2.`Channel_ID` JOIN `director` AS T3 ON T2.`Director_ID` = T3.`Director_ID` WHERE T3.`Age` > 60
SELECT DISTINCT T1.`Channel_ID`, T1.`Name` FROM channel AS T1 JOIN program AS T2 ON T1.`Channel_ID` = T2.`Channel_ID` JOIN director AS T3 ON T2.`Director_ID` = T3.`Director_ID` WHERE T3.`Name` != 'Hank Baskett'
SELECT COUNT(*) FROM `radio`
SELECT `Transmitter` FROM `radio` ORDER BY `ERP_kW` ASC
SELECT `tv_show_name`, `Original_Airdate` FROM `tv_show`
SELECT `Station_name` FROM `city_channel` WHERE `Affiliation` != 'ABC'
SELECT `Transmitter` FROM `radio` WHERE `ERP_kW` > 150 OR `ERP_kW` < 30
SELECT T1.Transmitter FROM radio AS T1 JOIN radio AS T2 ON T1.Radio_ID = T2.Radio_ID ORDER BY T2.ERP_kW DESC LIMIT 1
SELECT AVG(`ERP_kW`) FROM `radio`
SELECT `Affiliation`, COUNT(*) FROM `city_channel` GROUP BY `Affiliation`
SELECT Affiliation FROM `city_channel` GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Affiliation` FROM `city_channel` GROUP BY `Affiliation` HAVING COUNT(*) > 3
SELECT `City`, `Station_name` FROM `city_channel` ORDER BY `Station_name` ASC
SELECT T1.Transmitter, T3.City FROM radio AS T1 JOIN city_channel_radio AS T2 ON T1.Radio_ID = T2.Radio_ID JOIN city_channel AS T3 ON T2.City_channel_ID = T3.ID
SELECT T1.`Transmitter`, T2.`Station_name` FROM radio AS T1 JOIN city_channel_radio AS T3 ON T1.`Radio_ID` = T3.`Radio_ID` JOIN city_channel AS T2 ON T3.`City_channel_ID` = T2.`ID` ORDER BY T1.`ERP_kW` DESC
SELECT T1.Transmitter, COUNT(T2.City_channel_ID) FROM radio AS T1 JOIN city_channel_radio AS T2 ON T1.Radio_ID = T2.Radio_ID GROUP BY T1.Transmitter
SELECT DISTINCT `Transmitter` FROM `radio` EXCEPT SELECT T1.`Transmitter` FROM `radio` AS T1 INNER JOIN `city_channel_radio` AS T2 ON T1.`Radio_ID` = T2.`Radio_ID`
SELECT Model FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle WHERE Power > 6000)
SELECT `Model` FROM `vehicle` WHERE `Power` > 6000 ORDER BY `Top_Speed` DESC LIMIT 1
SELECT Name FROM driver WHERE Citizenship = 'United States'
SELECT Name FROM driver WHERE Citizenship = 'United States'
SELECT COUNT(T1.Vehicle_ID), T1.Driver_ID FROM vehicle_driver AS T1 GROUP BY T1.Driver_ID ORDER BY COUNT(T1.Vehicle_ID) DESC LIMIT 1
SELECT Driver_ID, count(*) FROM vehicle_driver GROUP BY Driver_ID ORDER BY count(*) DESC LIMIT 1
SELECT max(`Power`), avg(`Power`) FROM `vehicle` WHERE `Builder` = 'Zhuzhou'
SELECT max(`Power`), avg(`Power`) FROM `vehicle` WHERE `Builder` = 'Zhuzhou'
SELECT `Vehicle_ID` FROM `vehicle_driver` GROUP BY `Vehicle_ID` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `Vehicle_ID` FROM `vehicle_driver` GROUP BY `Vehicle_ID` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `Top_Speed`, `Power` FROM `vehicle` WHERE `Build_Year` = 1996
SELECT `Top_Speed`, `Power` FROM `vehicle` WHERE `Build_Year` = 1996
SELECT DISTINCT `Build_Year`, `Model`, `Builder` FROM `vehicle`
SELECT `Build_Year`, `Model`, `Builder` FROM `vehicle`
SELECT COUNT(DISTINCT T1.Driver_ID) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID WHERE T2.Build_Year = 2012
SELECT COUNT(DISTINCT T1.Driver_ID) FROM vehicle_driver AS T1 INNER JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID WHERE T2.Build_Year = 2012
SELECT count(DISTINCT `Driver_ID`) FROM driver WHERE Racing_Series = 'NASCAR'
SELECT count(DISTINCT Driver_ID) FROM driver WHERE Racing_Series = 'NASCAR'
SELECT avg(`Top_Speed`) FROM `vehicle`
SELECT avg(`Top_Speed`) FROM `vehicle`
SELECT DISTINCT T2.Name FROM vehicle AS T1 JOIN vehicle_driver AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID WHERE T1.Power > 5000
SELECT T2.Name FROM vehicle AS T1 JOIN vehicle_driver AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID WHERE T1.Power > 5000
SELECT Model FROM `vehicle` WHERE Total_Production > 100 OR Top_Speed > 150
SELECT Model FROM vehicle WHERE Total_Production > 100 OR Top_Speed > 150
SELECT `Model`, `Build_Year` FROM `vehicle` WHERE `Model` LIKE '%DJ%'
SELECT `Model`, `Build_Year` FROM `vehicle` WHERE `Model` LIKE '%DJ%'
SELECT Model FROM `vehicle` WHERE `Vehicle_ID` NOT IN (SELECT `Vehicle_ID` FROM `vehicle_driver`)
SELECT Model FROM vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver)
SELECT `Vehicle_ID`, `Model` FROM `vehicle` WHERE `Builder` = 'Ziyang' UNION SELECT T1.`Vehicle_ID`, T2.`Model` FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Vehicle_ID HAVING count(*)  =  2
SELECT `Vehicle_ID`, `Model` FROM `vehicle` WHERE `Builder` = 'Ziyang' UNION SELECT T1.`Vehicle_ID`, T2.`Model` FROM vehicle_driver AS T1 INNER JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Vehicle_ID HAVING count(*) = 2
SELECT `Vehicle_ID`, `Model` FROM `vehicle` WHERE `Vehicle_ID` IN (SELECT `Vehicle_ID` FROM `vehicle_driver` GROUP BY `Vehicle_ID` HAVING COUNT(*) > 2) UNION SELECT T1.`Vehicle_ID`, T2.`Model` FROM `vehicle_driver` AS T1 INNER JOIN `vehicle` AS T2 ON T1.`Vehicle_ID` = T2.`Vehicle_ID` INNER JOIN `driver` AS T3 ON T1.`Driver_ID` = T3.`Driver_ID` WHERE T3.`Name` = 'Jeff Gordon'
SELECT `Vehicle_ID`, `Model` FROM `vehicle` WHERE `Vehicle_ID` IN (SELECT `Vehicle_ID` FROM `vehicle_driver` GROUP BY `Vehicle_ID` HAVING COUNT(*) > 2) UNION SELECT T1.`Vehicle_ID`, T2.`Model` FROM `vehicle_driver` AS T1 INNER JOIN `vehicle` AS T2 ON T1.`Vehicle_ID` = T2.`Vehicle_ID` INNER JOIN `driver` AS T3 ON T1.`Driver_ID` = T3.`Driver_ID` WHERE T3.`Name` = 'Jeff Gordon'
SELECT count(DISTINCT `Vehicle_ID`) FROM vehicle WHERE `Top_Speed` = (SELECT max(`Top_Speed`) FROM vehicle)
SELECT count(*) FROM vehicle WHERE `Top_Speed` = (SELECT max(`Top_Speed`) FROM vehicle)
SELECT `Name` FROM `driver` ORDER BY `Name`
SELECT Name FROM `driver` ORDER BY Name
SELECT Racing_Series, count(DISTINCT Driver_ID) FROM driver GROUP BY Racing_Series
SELECT Racing_Series, count(Driver_ID) FROM driver GROUP BY Racing_Series
SELECT T1.Name, T1.Citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T3.Model = 'DJ1'
SELECT T2.Name, T2.Citizenship FROM vehicle AS T1 JOIN vehicle_driver AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID WHERE T1.Model = 'DJ1'
SELECT count(T1.Driver_ID) FROM driver AS T1 LEFT JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Vehicle_ID IS NULL
SELECT COUNT(T1.Driver_ID) FROM driver AS T1 LEFT JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Vehicle_ID IS NULL
SELECT COUNT(*) FROM `Exams`
SELECT COUNT(*) FROM `Exams`
SELECT DISTINCT `Subject_Code` FROM `Exams` ORDER BY `Subject_Code` ASC
SELECT DISTINCT `Subject_Code` FROM `Exams` ORDER BY `Subject_Code`
SELECT `Exam_Name`, `Exam_Date` FROM `Exams` WHERE `Subject_Code` != 'Database'
SELECT `Exam_Date`, `Exam_Name` FROM `Exams` WHERE `Subject_Code` NOT LIKE 'Database'
SELECT `Exam_Date` FROM `Exams` WHERE `Subject_Code` LIKE '%data%' ORDER BY `Exam_Date` DESC
SELECT `Exam_Date` FROM `Exams` WHERE `Subject_Code` LIKE '%data%' ORDER BY `Exam_Date` DESC
SELECT `Type_of_Question_Code`, COUNT(*) FROM `Questions` GROUP BY `Type_of_Question_Code`
SELECT `Type_of_Question_Code`, COUNT(*) FROM `Questions` GROUP BY `Type_of_Question_Code`
SELECT DISTINCT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal'
SELECT DISTINCT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal'
SELECT COUNT(DISTINCT `Comments`) FROM `Student_Answers`
SELECT COUNT(DISTINCT `Comments`) FROM `Student_Answers`
SELECT `Student_Answer_Text` FROM `Student_Answers` GROUP BY `Student_Answer_Text` ORDER BY COUNT(*) DESC
SELECT `Student_Answer_Text` FROM `Student_Answers` GROUP BY `Student_Answer_Text` ORDER BY COUNT(*) DESC
SELECT T1.`First_Name`, T2.`Date_of_Answer` FROM Students AS T1 JOIN Student_Answers AS T2 ON T1.`Student_ID` = T2.`Student_ID`
SELECT T1.`First_Name`, T2.`Date_of_Answer` FROM Students AS T1 JOIN Student_Answers AS T2 ON T1.`Student_ID` = T2.`Student_ID`
SELECT T1.`Email_Adress`, T2.`Date_of_Answer` FROM `Students` AS T1 JOIN `Student_Answers` AS T2 ON T1.`Student_ID` = T2.`Student_ID` ORDER BY T2.`Date_of_Answer` DESC
SELECT T1.`Email_Adress`, T2.`Date_of_Answer` FROM `Students` AS T1 JOIN `Student_Answers` AS T2 ON T1.`Student_ID` = T2.`Student_ID` ORDER BY T2.`Date_of_Answer` DESC
SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1
SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) LIMIT 1
SELECT DISTINCT T1.First_Name FROM Students AS T1 JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*) >= 2
SELECT DISTINCT `T1`.`First_Name` FROM `Students` AS `T1` JOIN `Student_Answers` AS `T2` ON `T1`.`Student_ID` = `T2`.`Student_ID` GROUP BY `T2`.`Student_ID` HAVING COUNT(*)  >=  2
SELECT `Valid_Answer_Text` FROM `Valid_Answers` GROUP BY `Valid_Answer_Text` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Valid_Answer_Text` FROM `Valid_Answers` GROUP BY `Valid_Answer_Text` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Last_Name` FROM `Students` WHERE `Gender_MFU` != 'M'
SELECT DISTINCT `Last_Name` FROM `Students` WHERE `Gender_MFU` != 'M'
SELECT `Gender_MFU`, COUNT(*) FROM `Students` GROUP BY `Gender_MFU`
SELECT `Gender_MFU`, COUNT(`Student_ID`) FROM `Students` GROUP BY `Gender_MFU`
SELECT `Last_Name` FROM `Students` WHERE `Gender_MFU` = 'F' UNION SELECT `Last_Name` FROM `Students` WHERE `Gender_MFU` = 'M'
SELECT `Last_Name` FROM `Students` WHERE `Gender_MFU` = 'F' OR `Gender_MFU` = 'M'
SELECT DISTINCT `First_Name` FROM `Students` WHERE `Student_ID` NOT IN (SELECT DISTINCT `Student_ID` FROM `Student_Answers`)
SELECT DISTINCT `First_Name` FROM `Students` EXCEPT SELECT T1.`First_Name` FROM `Students` AS T1 INNER JOIN `Student_Answers` AS T2 ON T1.`Student_ID` = T2.`Student_ID`
SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal' INTERSECT SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Absent'
SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal' INTERSECT SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Absent'
SELECT DISTINCT T1.Type_of_Question_Code FROM Questions AS T1 JOIN Questions_in_Exams AS T2 ON T1.Question_ID = T2.Question_ID GROUP BY T1.Type_of_Question_Code HAVING COUNT(T1.Question_ID) >= 3
SELECT `Type_of_Question_Code` FROM `Questions` GROUP BY `Type_of_Question_Code` HAVING COUNT(*) >= 3
SELECT * FROM `Students`
SELECT * FROM `Students`
SELECT COUNT(*) FROM `Addresses`
SELECT COUNT(*) FROM `Addresses`
SELECT `address_id`, `address_details` FROM `Addresses`
SELECT `address_id`, `address_details` FROM `Addresses`
SELECT COUNT(*) FROM `Products`
SELECT COUNT(*) FROM `Products`
SELECT `product_id`, `product_type_code`, `product_name` FROM `Products`
SELECT DISTINCT `product_id`, `product_type_code`, `product_name` FROM `Products`
SELECT `product_price` FROM `Products` WHERE `product_name` = 'Monitor'
SELECT `product_price` FROM `Products` WHERE `product_name` = 'Monitor'
SELECT MIN(`product_price`), AVG(`product_price`), MAX(`product_price`) FROM `Products`
SELECT MIN(`product_price`), AVG(`product_price`), MAX(`product_price`) FROM `Products`
SELECT avg(`product_price`) FROM `Products` WHERE `product_type_code` = 'Clothes'
SELECT avg(`product_price`) FROM `Products` WHERE `product_type_code` = 'Clothes'
SELECT count(*) FROM `Products` WHERE `product_type_code` = 'Hardware'
SELECT count(*) FROM `Products` WHERE `product_type_code` = 'Hardware'
SELECT `product_name` FROM `Products` WHERE `product_price` > (SELECT AVG(`product_price`) FROM `Products`)
SELECT `product_name` FROM `Products` WHERE `product_price` > (SELECT AVG(`product_price`) FROM `Products`)
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' AND `product_price` > (SELECT AVG(`product_price`) FROM `Products` WHERE `product_type_code` = 'Hardware')
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' AND `product_price` > (SELECT AVG(`product_price`) FROM `Products` WHERE `product_type_code` = 'Hardware')
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Clothes' ORDER BY `product_price` DESC LIMIT 1
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Clothes' ORDER BY `product_price` DESC LIMIT 1
SELECT `product_id`, `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC LIMIT 1
SELECT `product_id`, `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC LIMIT 1
SELECT `product_name` FROM `Products` ORDER BY `product_price` DESC
SELECT `product_name` FROM `Products` ORDER BY `product_price` DESC
SELECT `product_name`, `product_price` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC
SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC
SELECT `product_type_code`, COUNT(*) FROM `Products` GROUP BY `product_type_code`
SELECT `product_type_code`, COUNT(DISTINCT `product_id`) FROM `Products` GROUP BY `product_type_code`
SELECT `product_type_code`, AVG(`product_price`) FROM `Products` GROUP BY `product_type_code`
SELECT `product_type_code`, AVG(`product_price`) FROM `Products` GROUP BY `product_type_code`
SELECT DISTINCT `product_type_code` FROM `Products` GROUP BY `product_type_code` HAVING COUNT(*) >= 2
SELECT DISTINCT `product_type_code` FROM `Products` GROUP BY `product_type_code` HAVING COUNT(*) >= 2
SELECT product_type_code FROM `Products` GROUP BY product_type_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(*) FROM `Customers`
SELECT COUNT(*) FROM `Customers`
SELECT `customer_id`, `customer_name` FROM `Customers`
SELECT `customer_id`, `customer_name` FROM `Customers`
SELECT `customer_address`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_name` = 'Jeromy'
SELECT `customer_address`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_name` = 'Jeromy'
SELECT `payment_method_code`, COUNT(*) FROM `Customers` GROUP BY `payment_method_code`
SELECT `payment_method_code`, COUNT(DISTINCT `customer_id`) FROM `Customers` GROUP BY `payment_method_code`
SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT T1.`customer_name` FROM Customers AS T1 JOIN ( SELECT T1.`customer_id` FROM Customers AS T1 GROUP BY T1.`payment_method_code` ORDER BY COUNT(T1.`customer_id`) LIMIT 1 ) AS T2 ON T1.`customer_id` = T2.`customer_id`
SELECT T1.`customer_name` FROM Customers AS T1 JOIN ( SELECT `payment_method_code` FROM Customers GROUP BY `payment_method_code` ORDER BY COUNT(*) LIMIT 1 ) AS T2 ON T1.`payment_method_code` = T2.`payment_method_code`
SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy'
SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy'
SELECT DISTINCT `payment_method_code` FROM `Customers`
SELECT DISTINCT `payment_method_code` FROM `Customers`
SELECT `product_id`, `product_type_code` FROM `Products` ORDER BY `product_name`
SELECT `product_id`, `product_type_code` FROM `Products` ORDER BY `product_name`
SELECT product_type_code FROM `Products` GROUP BY product_type_code ORDER BY COUNT(product_id) ASC LIMIT 1
SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` ORDER BY COUNT(*) ASC LIMIT 1
SELECT COUNT(*) FROM `Customer_Orders`
SELECT COUNT(*) FROM `Customer_Orders`
SELECT T1.`order_id`, T1.`order_date`, T1.`order_status_code` FROM Customer_Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_name = 'Jeromy'
SELECT T1.`order_id`, T1.`order_date`, T1.`order_status_code` FROM Customer_Orders AS T1 INNER JOIN Customers AS T2 ON T1.`customer_id` = T2.`customer_id` WHERE T2.`customer_name` = 'Jeromy'
SELECT `c`.`customer_name`, `c`.`customer_id`, COUNT(`o`.`order_id`) FROM `Customers` AS `c` JOIN `Customer_Orders` AS `o` ON `c`.`customer_id` = `o`.`customer_id` GROUP BY `c`.`customer_id`
SELECT DISTINCT `c`.`customer_name`, `c`.`customer_id`, COUNT(`o`.`order_id`) FROM `Customers` AS `c` JOIN `Customer_Orders` AS `o` ON `c`.`customer_id` = `o`.`customer_id` GROUP BY `c`.`customer_id`
SELECT T1.`customer_id`, T1.`customer_name`, T1.`customer_phone`, T1.`customer_email` FROM `Customers` AS T1 JOIN `Customer_Orders` AS T2 ON T1.`customer_id` = T2.`customer_id` GROUP BY T1.`customer_id` ORDER BY COUNT(T2.`order_id`) DESC LIMIT 1
SELECT T1.`customer_id`, T1.`customer_name`, T1.`customer_phone`, T1.`customer_email` FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.`customer_id` = T2.`customer_id` GROUP BY T1.`customer_id` ORDER BY COUNT(T2.`order_id`) DESC LIMIT 1
SELECT `order_status_code`, COUNT(*) FROM `Customer_Orders` GROUP BY `order_status_code`
SELECT `order_status_code`, COUNT(*) FROM `Customer_Orders` GROUP BY `order_status_code`
SELECT `order_status_code` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `order_status_code` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(T1.`customer_id`) FROM `Customers` AS T1 LEFT JOIN `Customer_Orders` AS T2 ON T1.`customer_id` = T2.`customer_id` WHERE T2.`order_id` IS NULL
SELECT COUNT(T1.`customer_id`) FROM `Customers` AS T1 LEFT JOIN `Customer_Orders` AS T2 ON T1.`customer_id` = T2.`customer_id` WHERE T2.`order_id` IS NULL
SELECT DISTINCT `product_name` FROM `Products` WHERE `product_id` NOT IN (SELECT `product_id` FROM `Order_Items`)
SELECT `product_name` FROM `Products` EXCEPT SELECT T1.`product_name` FROM `Products` AS T1 JOIN `Order_Items` AS T2 ON T1.`product_id` = T2.`product_id`
SELECT SUM(`T1`.`order_quantity`) FROM `Order_Items` AS `T1` JOIN `Products` AS `T2` ON `T1`.`product_id` = `T2`.`product_id` WHERE `T2`.`product_name` = 'Monitor'
SELECT SUM(T2.order_quantity) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'Monitor'
SELECT COUNT(T1.`customer_id`) FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.`order_id` = T2.`order_id` JOIN Products AS T3 ON T2.`product_id` = T3.`product_id` WHERE T3.`product_name` = 'Monitor'
SELECT COUNT(DISTINCT T1.`customer_id`) FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.`order_id` = T2.`order_id` JOIN Products AS T3 ON T2.`product_id` = T3.`product_id` WHERE T3.`product_name` = 'Monitor'
SELECT COUNT(DISTINCT `customer_id`) FROM `Customer_Orders`
SELECT COUNT(DISTINCT `customer_id`) FROM `Customer_Orders`
SELECT `customer_id` FROM `Customers` EXCEPT SELECT `customer_id` FROM `Customer_Orders`
SELECT `customer_id` FROM `Customers` EXCEPT SELECT `customer_id` FROM `Customer_Orders`
SELECT `order_date`, `order_id` FROM `Customer_Orders` WHERE `order_id` IN (SELECT `order_id` FROM `Order_Items` WHERE `order_quantity` > 6 INTERSECT SELECT `order_id` FROM `Order_Items` GROUP BY `order_id` HAVING COUNT(*) > 3)
SELECT T1.`order_id`, T1.`order_date` FROM `Customer_Orders` AS T1 INNER JOIN `Order_Items` AS T2 ON T1.`order_id` = T2.`order_id` WHERE T2.`order_quantity` > 6 UNION SELECT T1.`order_id`, T1.`order_date` FROM `Customer_Orders` AS T1 INNER JOIN `Order_Items` AS T2 ON T1.`order_id` = T2.`order_id` GROUP BY T1.`order_id` HAVING COUNT(T2.`product_id`) > 3
SELECT count(*) FROM `building`
SELECT COUNT(*) FROM `building`
SELECT `Name` FROM `building` ORDER BY `Number_of_Stories` ASC
SELECT `Name` FROM `building` ORDER BY `Number_of_Stories` ASC
SELECT `Address` FROM `building` ORDER BY `Completed_Year` DESC
SELECT `Address` FROM `building` ORDER BY `Completed_Year` DESC
SELECT max(`Number_of_Stories`) FROM `building` WHERE `Completed_Year` != 1980
SELECT MAX(`Number_of_Stories`) FROM `building` WHERE `Completed_Year` != 1980
SELECT AVG(`Population`) FROM `region`
SELECT AVG(`Population`) FROM `region`
SELECT `Name` FROM `region` ORDER BY `Name` ASC
SELECT `Name` FROM `region` ORDER BY `Name`
SELECT `Capital` FROM `region` WHERE `Area` > 10000
SELECT `Capital` FROM `region` WHERE `Area` > 10000
SELECT T1.`Capital` FROM region AS T1 ORDER BY T1.`Population` DESC LIMIT 1
SELECT T1.`Capital` FROM region AS T1 JOIN building AS T2 ON T1.`Region_ID` = T2.`Region_ID` GROUP BY T1.`Region_ID` ORDER BY T1.`Population` DESC LIMIT 1
SELECT `Name` FROM `region` ORDER BY `Area` DESC LIMIT 5
SELECT `Name` FROM `region` ORDER BY `Area` DESC LIMIT 5
SELECT T1.`Name`, T2.`Name` FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID
SELECT T1.`Name`, T2.`Name` FROM building AS T1 JOIN region AS T2 ON T1.`Region_ID` = T2.`Region_ID`
SELECT T1.Name FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(T2.Building_ID) > 1
SELECT T1.`Name` FROM region AS T1 JOIN building AS T2 ON T1.`Region_ID` = T2.`Region_ID` GROUP BY T1.`Region_ID` HAVING COUNT(T2.`Building_ID`) > 1
SELECT T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(T1.Building_ID) DESC LIMIT 1
SELECT T2.`Capital` FROM building AS T1 JOIN region AS T2 ON T1.`Region_ID` = T2.`Region_ID` GROUP BY T1.`Region_ID` ORDER BY COUNT(T1.`Building_ID`) DESC LIMIT 1
SELECT T1.Address, T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID
SELECT T1.`Address`, T2.`Name` FROM building AS T1 JOIN region AS T2 ON T1.`Region_ID` = T2.`Region_ID`
SELECT T1.`Number_of_Stories` FROM building AS T1 JOIN region AS T2 ON T1.`Region_ID` = T2.`Region_ID` WHERE T2.`Name` = 'Abruzzo'
SELECT T1.`Number_of_Stories` FROM building AS T1 JOIN region AS T2 ON T1.`Region_ID` = T2.`Region_ID` WHERE T2.`Name` = 'Abruzzo'
SELECT `Completed_Year`, COUNT(*) FROM `building` GROUP BY `Completed_Year`
SELECT `Completed_Year`, COUNT(*) FROM `building` GROUP BY `Completed_Year`
SELECT `Completed_Year` FROM `building` GROUP BY `Completed_Year` ORDER BY COUNT(*) DESC LIMIT 1
SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Name FROM region AS T1 EXCEPT SELECT T2.Name FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID
SELECT Name FROM region EXCEPT SELECT T1.Name FROM region AS T1 INNER JOIN building AS T2 ON T1.Region_ID = T2.Region_ID
SELECT `Completed_Year` FROM `building` WHERE `Number_of_Stories` > 20 INTERSECT SELECT `Completed_Year` FROM `building` WHERE `Number_of_Stories` < 15
SELECT `Completed_Year` FROM `building` WHERE `Number_of_Stories` > 20 INTERSECT SELECT `Completed_Year` FROM `building` WHERE `Number_of_Stories` < 15
SELECT DISTINCT `Address` FROM `building`
SELECT DISTINCT `Address` FROM `building`
SELECT `Completed_Year` FROM `building` ORDER BY `Number_of_Stories` DESC
SELECT `Completed_Year` FROM `building` ORDER BY `Number_of_Stories` DESC
SELECT `Channel_Details` FROM `Channels` ORDER BY `Channel_Details`
SELECT `Channel_Details` FROM `Channels` ORDER BY `Channel_Details`
SELECT COUNT(*) FROM `Services`
SELECT COUNT(*) FROM `Services`
SELECT `Analytical_Layer_Type_Code` FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Analytical_Layer_Type_Code` FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code` ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `s`.`Service_Details` FROM `Services` AS `s` JOIN `Customer_Interactions` AS `ci` ON `s`.`Service_ID` = `ci`.`Service_ID` JOIN `Customers` AS `c` ON `ci`.`Customer_ID` = `c`.`Customer_ID` WHERE `c`.`Customer_Details` = "Hardy Kutch"
SELECT T2.`Service_Details` FROM `Customers` AS T1 JOIN `Customers_and_Services` AS T3 ON T1.`Customer_ID` = T3.`Customer_ID` JOIN `Services` AS T2 ON T3.`Service_ID` = T2.`Service_ID` WHERE T1.`Customer_Details` = 'Hardy Kutch'
SELECT `Service_Details` FROM `Services` WHERE `Service_ID` IN (SELECT `Service_ID` FROM `Customer_Interactions` GROUP BY `Service_ID` HAVING COUNT(*) > 3)
SELECT DISTINCT `T1`.`Service_Details` FROM `Services` AS `T1` JOIN `Customers_and_Services` AS `T2` ON `T1`.`Service_ID` = `T2`.`Service_ID` GROUP BY `T2`.`Service_ID` HAVING COUNT(*) > 3
SELECT T1.`Customer_Details` FROM `Customers` AS T1 JOIN `Customers_and_Services` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` GROUP BY T1.`Customer_ID` ORDER BY COUNT(T2.`Service_ID`) DESC LIMIT 1
SELECT T1.`Customer_Details` FROM `Customers` AS T1 JOIN `Customers_and_Services` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` GROUP BY T1.`Customer_ID` ORDER BY COUNT(T2.`Service_ID`) DESC LIMIT 1
SELECT T1.`Customer_Details` FROM Customers AS T1 JOIN Customers_and_Services AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` GROUP BY T1.`Customer_ID` ORDER BY COUNT(DISTINCT T2.`Service_ID`) DESC LIMIT 1
SELECT T1.`Customer_Details` FROM Customers AS T1 JOIN Customers_and_Services AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` GROUP BY T1.`Customer_ID` ORDER BY COUNT(DISTINCT T2.`Service_ID`) DESC LIMIT 1
SELECT `Customer_Details` FROM `Customers` EXCEPT SELECT T1.`Customer_Details` FROM `Customers` AS T1 INNER JOIN `Customers_and_Services` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID`
SELECT `Customer_Details` FROM `Customers` EXCEPT SELECT T1.`Customer_Details` FROM `Customers` AS T1 INNER JOIN `Customers_and_Services` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID`
SELECT T1.`Customer_Details` FROM `Customers` AS T1 JOIN `Customers_and_Services` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` JOIN `Services` AS T3 ON T2.`Service_ID` = T3.`Service_ID` GROUP BY T1.`Customer_ID` ORDER BY COUNT(T2.`Service_ID`) LIMIT 1
SELECT DISTINCT `T1`.`Customer_Details` FROM `Customers` AS `T1` JOIN `Customers_and_Services` AS `T2` ON `T1`.`Customer_ID` = `T2`.`Customer_ID` JOIN `Services` AS `T3` ON `T2`.`Service_ID` = `T3`.`Service_ID` GROUP BY `T3`.`Service_ID` ORDER BY COUNT(`T2`.`Service_ID`) LIMIT 1
SELECT COUNT(DISTINCT `Customers_and_Services_Details`) FROM `Customers_and_Services`
SELECT COUNT(*) FROM `Customers_and_Services`
SELECT `Customer_Details` FROM `Customers` WHERE `Customer_Details` LIKE '%Kutch%'
SELECT `Customer_Details` FROM `Customers` WHERE `Customer_Details` LIKE '%Kutch%'
SELECT T1.Service_Details FROM Services AS T1 JOIN Customers_and_Services AS T2 ON T1.Service_ID = T2.Service_ID JOIN Customers AS T3 ON T2.Customer_ID = T3.Customer_ID WHERE T3.Customer_Details = 'Hardy Kutch' UNION SELECT T1.Service_Details FROM Services AS T1 JOIN Customer_Interactions AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Services_and_Channels_Details = 'good'
SELECT T1.`Service_Details` FROM `Services` AS T1 JOIN `Customers_and_Services` AS T2 ON T1.`Service_ID` = T2.`Service_ID` JOIN `Customers` AS T3 ON T2.`Customer_ID` = T3.`Customer_ID` WHERE T3.`Customer_Details` = 'Hardy Kutch' UNION SELECT T1.`Service_Details` FROM `Services` AS T1 JOIN `Customer_Interactions` AS T2 ON T1.`Service_ID` = T2.`Service_ID` WHERE T2.`Services_and_Channels_Details` = 'good'
SELECT T1.`Service_Details` FROM `Services` AS T1 JOIN `Customers_and_Services` AS T2 ON T1.`Service_ID` = T2.`Service_ID` JOIN `Customers` AS T3 ON T2.`Customer_ID` = T3.`Customer_ID` JOIN `Customer_Interactions` AS T4 ON T1.`Service_ID` = T4.`Service_ID` WHERE T3.`Customer_Details` = 'Hardy Kutch' AND T4.`Services_and_Channels_Details` = 'bad' INTERSECT SELECT T1.`Service_Details` FROM `Services` AS T1 JOIN `Customers_and_Services` AS T2 ON T1.`Service_ID` = T2.`Service_ID` JOIN `Customers` AS T3 ON T2.`Customer_ID` = T3.`Customer_ID` JOIN `Customer_Interactions` AS T4 ON T1.`Service_ID` = T4.`Service_ID` WHERE T3.`Customer_Details` = 'Hardy Kutch'
SELECT T2.`Service_Details` FROM `Customers` AS T1 JOIN `Customers_and_Services` AS T3 ON T1.`Customer_ID` = T3.`Customer_ID` JOIN `Services` AS T2 ON T2.`Service_ID` = T3.`Service_ID` WHERE T1.`Customer_Details` = 'Hardy Kutch' INTERSECT SELECT T2.`Service_Details` FROM `Customer_Interactions` AS T1 JOIN `Services` AS T2 ON T1.`Service_ID` = T2.`Service_ID` WHERE T1.`Services_and_Channels_Details` = 'bad'
SELECT T2.Service_Details FROM Customer_Interactions AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID JOIN Channels AS T3 ON T1.Channel_ID = T3.Channel_ID WHERE T3.Channel_Details = '15 ij'
SELECT T2.Service_Details FROM Customer_Interactions AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID JOIN Channels AS T3 ON T1.Channel_ID = T3.Channel_ID WHERE T3.Channel_Details = '15 ij'
SELECT T1.`Customer_Details` FROM Customers AS T1 INNER JOIN Customer_Interactions AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T2.`Status_Code` = 'Stuck' AND T2.`Services_and_Channels_Details` = 'bad'
SELECT T1.`Customer_Details` FROM `Customers` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T2.`Status_Code` = 'Stuck' AND T2.`Services_and_Channels_Details` = 'bad'
SELECT COUNT(Integration_Platform_ID) FROM `Integration_Platform` WHERE `Integration_Platform_Details` = 'Success'
SELECT count(*) FROM `Integration_Platform` WHERE `Integration_Platform_Details` LIKE '%Success%'
SELECT T1.`Customer_Details` FROM `Customers` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` INNER JOIN `Integration_Platform` AS T3 ON T2.`Customer_Interaction_ID` = T3.`Customer_Interaction_ID` WHERE T3.`Integration_Platform_Details` = 'Failed'
SELECT T1.`Customer_Details` FROM `Customers` AS T1 INNER JOIN `Customer_Interactions` AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` INNER JOIN `Integration_Platform` AS T3 ON T2.`Customer_Interaction_ID` = T3.`Customer_Interaction_ID` WHERE T3.`Integration_Platform_Details` = 'Fail'
SELECT `Service_Details` FROM `Services` WHERE `Service_ID` NOT IN (SELECT `Service_ID` FROM `Customers_and_Services`)
SELECT `Service_Details` FROM `Services` EXCEPT SELECT T2.`Service_Details` FROM `Customers_and_Services` AS T1 JOIN `Services` AS T2 ON T1.`Service_ID` = T2.`Service_ID`
SELECT `Analytical_Layer_Type_Code`, COUNT(*) FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code`
SELECT `Analytical_Layer_Type_Code`, COUNT(*) FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code`
SELECT T1.Service_Details FROM Services AS T1 JOIN Customers_and_Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Customers_and_Services_Details LIKE 'unsatisfied'
SELECT T1.`Service_Details` FROM `Services` AS T1 JOIN `Customers_and_Services` AS T2 ON T1.`Service_ID` = T2.`Service_ID` WHERE T2.`Customers_and_Services_Details` = 'Satisfied'
SELECT COUNT(*) FROM `Vehicles`
SELECT COUNT(*) FROM `Vehicles`
SELECT `name` FROM `Vehicles` ORDER BY `Model_year` DESC
SELECT `name` FROM `Vehicles` ORDER BY `Model_year` DESC
SELECT DISTINCT `Type_of_powertrain` FROM `Vehicles`
SELECT DISTINCT `Type_of_powertrain` FROM `Vehicles`
SELECT `name`, `Type_of_powertrain`, `Annual_fuel_cost` FROM `Vehicles` WHERE `Model_year` = 2013 OR `Model_year` = 2014
SELECT `name`, `Type_of_powertrain`, `Annual_fuel_cost` FROM `Vehicles` WHERE `Model_year` IN (2013, 2014)
SELECT `Type_of_powertrain` FROM `Vehicles` WHERE `Model_year` = 2014 INTERSECT SELECT `Type_of_powertrain` FROM `Vehicles` WHERE `Model_year` = 2013
SELECT DISTINCT `Type_of_powertrain` FROM `Vehicles` WHERE `Model_year` = 2013 INTERSECT SELECT DISTINCT `Type_of_powertrain` FROM `Vehicles` WHERE `Model_year` = 2014
SELECT `Type_of_powertrain`, COUNT(*) FROM `Vehicles` GROUP BY `Type_of_powertrain`
SELECT `Type_of_powertrain`, COUNT(DISTINCT `id`) FROM `Vehicles` GROUP BY `Type_of_powertrain`
SELECT `Type_of_powertrain` FROM `Vehicles` GROUP BY `Type_of_powertrain` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Type_of_powertrain` FROM `Vehicles` GROUP BY `Type_of_powertrain` ORDER BY COUNT(*) DESC LIMIT 1
SELECT min(`Annual_fuel_cost`), max(`Annual_fuel_cost`), avg(`Annual_fuel_cost`) FROM `Vehicles`
SELECT MIN(`Annual_fuel_cost`), MAX(`Annual_fuel_cost`), AVG(`Annual_fuel_cost`) FROM `Vehicles`
SELECT `name`, `Model_year` FROM `Vehicles` WHERE `City_fuel_economy_rate` <= `Highway_fuel_economy_rate`
SELECT `name`, `Model_year` FROM `Vehicles` WHERE `City_fuel_economy_rate` <= `Highway_fuel_economy_rate`
SELECT `Type_of_powertrain`, AVG(`Annual_fuel_cost`) FROM `Vehicles` GROUP BY `Type_of_powertrain` HAVING COUNT(*) >= 2
SELECT `Type_of_powertrain`, AVG(`Annual_fuel_cost`) FROM `Vehicles` GROUP BY `Type_of_powertrain` HAVING COUNT(*) >= 2
SELECT `name`, `age`, `membership_credit` FROM `Customers`
SELECT `name`, `age`, `membership_credit` FROM `Customers`
SELECT `name`, `age` FROM `Customers` ORDER BY `membership_credit` DESC LIMIT 1
SELECT `name`, `age` FROM `Customers` ORDER BY `membership_credit` DESC LIMIT 1
SELECT AVG(`age`) FROM `Customers` WHERE `membership_credit` > (SELECT AVG(`membership_credit`) FROM `Customers`)
SELECT AVG(`age`) FROM `Customers` WHERE `membership_credit` > (SELECT AVG(`membership_credit`) FROM `Customers`)
SELECT * FROM `Discount`
SELECT * FROM `Discount`
SELECT V.`name`, RH.`total_hours` FROM Vehicles AS V JOIN Renting_history AS RH ON V.`id` = RH.`vehicles_id`
SELECT V.`name`, RH.`total_hours` FROM `Vehicles` AS V JOIN `Renting_history` AS RH ON V.`id` = RH.`vehicles_id`
SELECT `name` FROM `Vehicles` EXCEPT SELECT T1.`name` FROM `Vehicles` AS T1 JOIN `Renting_history` AS T2 ON T1.`id` = T2.`vehicles_id`
SELECT `name` FROM `Vehicles` EXCEPT SELECT T1.`name` FROM `Vehicles` AS T1 INNER JOIN `Renting_history` AS T2 ON T1.`id` = T2.`vehicles_id`
SELECT DISTINCT T1.name FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id GROUP BY T1.id HAVING COUNT(*) >= 2
SELECT DISTINCT T1.name FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id GROUP BY T1.id HAVING COUNT(*) >= 2
SELECT T1.name, T1.Model_year FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id GROUP BY T1.id ORDER BY COUNT(T2.id) DESC LIMIT 1
SELECT T1.name, T1.Model_year FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id GROUP BY T2.vehicles_id ORDER BY COUNT(T2.vehicles_id) DESC LIMIT 1
SELECT `V`.`name` FROM `Vehicles` AS `V` JOIN `Renting_history` AS `RH` ON `V`.`id` = `RH`.`vehicles_id` ORDER BY `RH`.`total_hours` DESC
SELECT `V`.`name` FROM `Vehicles` AS `V` JOIN `Renting_history` AS `RH` ON `V`.`id` = `RH`.`vehicles_id` ORDER BY `RH`.`total_hours` DESC
SELECT T2.name FROM Renting_history AS T1 JOIN Discount AS T2 ON T1.discount_id = T2.id GROUP BY T1.discount_id ORDER BY COUNT(T1.id) DESC LIMIT 1
SELECT T1.name FROM Discount AS T1 JOIN Renting_history AS T2 ON T1.id = T2.discount_id GROUP BY T1.id ORDER BY COUNT(T2.id) DESC LIMIT 1
SELECT DISTINCT `V`.`name`, `V`.`Type_of_powertrain` FROM `Vehicles` AS `V` JOIN `Renting_history` AS `RH` ON `V`.`id` = `RH`.`vehicles_id` WHERE `RH`.`total_hours` > 30
SELECT DISTINCT `T1`.`name`, `T1`.`Type_of_powertrain` FROM `Vehicles` AS `T1` JOIN `Renting_history` AS `T2` ON `T1`.`id` = `T2`.`vehicles_id` WHERE `T2`.`total_hours` > 30
SELECT AVG(`City_fuel_economy_rate`), AVG(`Highway_fuel_economy_rate`) FROM `Vehicles` GROUP BY `Type_of_powertrain`
SELECT `Type_of_powertrain`, AVG(`City_fuel_economy_rate`), AVG(`Highway_fuel_economy_rate`) FROM `Vehicles` GROUP BY `Type_of_powertrain`
SELECT avg(`amount_of_loan`) FROM `Student_Loans`
SELECT avg(`amount_of_loan`) FROM `Student_Loans`
SELECT DISTINCT `T1`.`bio_data`, `T1`.`student_id` FROM `Students` AS `T1` JOIN `Classes` AS `T2` ON `T1`.`student_id` = `T2`.`student_id` GROUP BY `T1`.`student_id` HAVING COUNT(DISTINCT `T2`.`class_id`) >= 2 INTERSECT SELECT DISTINCT `T1`.`bio_data`, `T1`.`student_id` FROM `Students` AS `T1` JOIN `Detention` AS `T2` ON `T1`.`student_id` = `T2`.`student_id` GROUP BY `T1`.`student_id` HAVING COUNT(DISTINCT `T2`.`detention_id`) < 2
SELECT T1.`bio_data`, T1.`student_id` FROM `Students` AS T1 INNER JOIN `Classes` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` HAVING COUNT(T2.`class_id`) >= 2 UNION SELECT T1.`bio_data`, T1.`student_id` FROM `Students` AS T1 INNER JOIN `Detention` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` HAVING COUNT(T2.`detention_id`) < 2
SELECT DISTINCT T.`teacher_details` FROM `Teachers` AS T JOIN `Classes` AS C ON T.`teacher_id` = C.`teacher_id` WHERE C.`class_details` LIKE '%data%' AND NOT EXISTS (SELECT 1 FROM `Classes` AS C2 WHERE T.`teacher_id` = C2.`teacher_id` AND C2.`class_details` LIKE 'net%')
SELECT DISTINCT   `T1`.`teacher_details` FROM `Teachers` AS `T1` INNER JOIN `Classes` AS `T2`   ON `T1`.`teacher_id` = `T2`.`teacher_id` WHERE   `T2`.`class_details` LIKE '%data%'   AND `T2`.`class_details` NOT LIKE 'net%';
SELECT DISTINCT T1.bio_data FROM Students AS T1 LEFT JOIN Detention AS T2 ON T1.student_id = T2.student_id LEFT JOIN Student_Loans AS T3 ON T1.student_id = T3.student_id WHERE T2.student_id IS NULL AND T3.student_id IS NULL
SELECT DISTINCT `T1`.`bio_data` FROM `Students` AS `T1` LEFT JOIN `Detention` AS `T2` ON `T1`.`student_id` = `T2`.`student_id` LEFT JOIN `Student_Loans` AS `T3` ON `T1`.`student_id` = `T3`.`student_id` WHERE `T2`.`detention_id` IS NULL AND `T3`.`student_loan_id` IS NULL
SELECT T1.`amount_of_loan`, T1.`date_of_loan` FROM Student_Loans AS T1 JOIN Achievements AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(T2.achievement_id) >= 2
SELECT T1.amount_of_loan, T1.date_of_loan FROM Student_Loans AS T1 JOIN Achievements AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(T2.achievement_id) >= 2
SELECT `T`.`teacher_details`, `T`.`teacher_id` FROM `Teachers` AS `T` JOIN `Classes` AS `C` ON `T`.`teacher_id` = `C`.`teacher_id` GROUP BY `T`.`teacher_id` ORDER BY COUNT(`C`.`class_id`) DESC LIMIT 1
SELECT `T`.`teacher_details`, `T`.`teacher_id` FROM `Teachers` AS `T` JOIN `Classes` AS `C` ON `T`.`teacher_id` = `C`.`teacher_id` GROUP BY `C`.`teacher_id` ORDER BY COUNT(`C`.`class_id`) DESC LIMIT 1
SELECT DISTINCT `detention_type_description` FROM `Ref_Detention_Type`
SELECT DISTINCT `detention_type_description` FROM `Ref_Detention_Type`
SELECT T1.student_details, T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code = T3.address_type_code
SELECT DISTINCT T1.bio_data, T1.student_details, T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code = T3.address_type_code
SELECT T1.`address_details`, T2.`bio_data` FROM `Addresses` AS T1 JOIN `Students_Addresses` AS T3 ON T1.`address_id` = T3.`address_id` JOIN `Students` AS T2 ON T2.`student_id` = T3.`student_id`
SELECT T1.`address_details`, T2.`bio_data` FROM `Addresses` AS T1 JOIN `Students_Addresses` AS T3 ON T1.`address_id` = T3.`address_id` JOIN `Students` AS T2 ON T2.`student_id` = T3.`student_id`
SELECT T1.`bio_data`, T2.`date_of_transcript` FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id
SELECT DISTINCT `s`.`bio_data`, `t`.`date_of_transcript` FROM `Students` AS `s` JOIN `Transcripts` AS `t` ON `s`.`student_id` = `t`.`student_id`
SELECT COUNT(`student_id`), `behaviour_monitoring_details` FROM `Behaviour_Monitoring` GROUP BY `behaviour_monitoring_details` ORDER BY COUNT(`student_id`) DESC LIMIT 1
SELECT `behaviour_monitoring_details`, COUNT(*) FROM `Behaviour_Monitoring` GROUP BY `behaviour_monitoring_details` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.bio_data, T1.student_details FROM Students AS T1 INNER JOIN Behaviour_Monitoring AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(T2.behaviour_monitoring_id) = (SELECT COUNT(*) FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY COUNT(*) DESC LIMIT 1) INTERSECT SELECT T3.bio_data, T3.student_details FROM Students AS T3 INNER JOIN Behaviour_Monitoring AS T4 ON T3.student_id = T4.student_id GROUP BY T3.student_id HAVING COUNT(T4.behaviour_monitoring_id) = 3
SELECT T1.`bio_data`, T1.`student_details` FROM `Students` AS T1 INNER JOIN `Behaviour_Monitoring` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` HAVING COUNT(T2.`behaviour_monitoring_details`) = (SELECT COUNT(T2.`behaviour_monitoring_details`) FROM `Behaviour_Monitoring` AS T2 GROUP BY T2.`student_id` ORDER BY COUNT(T2.`behaviour_monitoring_details`) DESC LIMIT 1) INTERSECT SELECT T1.`bio_data`, T1.`student_details` FROM `Students` AS T1 INNER JOIN `Behaviour_Monitoring` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` HAVING COUNT(T2.`behaviour_monitoring_details`) = 3
SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(DISTINCT T2.behaviour_monitoring_details) = (SELECT COUNT(*) FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY COUNT(*) DESC LIMIT 1)
SELECT T1.`bio_data` FROM `Students` AS T1 JOIN `Behaviour_Monitoring` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T2.`behaviour_monitoring_details` ORDER BY COUNT(T2.`behaviour_monitoring_details`) DESC LIMIT 1
SELECT DISTINCT `s`.`bio_data`, `se`.`event_date` FROM `Students` AS `s` JOIN `Student_Events` AS `se` ON `s`.`student_id` = `se`.`student_id`
SELECT T1.`bio_data`, T3.`event_date` FROM Students AS T1 JOIN Student_Events AS T3 ON T1.student_id = T3.student_id
SELECT COUNT(T1.`student_id`), T1.`event_type_code`, T2.`event_type_description` FROM `Student_Events` AS T1 JOIN `Ref_Event_Types` AS T2 ON T1.`event_type_code` = T2.`event_type_code` GROUP BY T1.`event_type_code` ORDER BY COUNT(T1.`student_id`) DESC LIMIT 1
SELECT T1.event_type_code, T2.event_type_description, COUNT(T1.student_id) FROM Student_Events AS T1 JOIN Ref_Event_Types AS T2 ON T1.event_type_code = T2.event_type_code GROUP BY T1.event_type_code ORDER BY COUNT(T1.student_id) DESC LIMIT 1
SELECT DISTINCT `Achievements`.`achievement_details`, `Ref_Achievement_Type`.`achievement_type_description` FROM `Achievements` JOIN `Ref_Achievement_Type` ON `Achievements`.`achievement_type_code` = `Ref_Achievement_Type`.`achievement_type_code`
SELECT T1.`achievement_details`, T2.`achievement_type_description` FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code = T2.achievement_type_code
SELECT COUNT(DISTINCT T1.`teacher_id`) FROM `Classes` AS T1 INNER JOIN `Students` AS T2 ON T1.`student_id` = T2.`student_id` LEFT JOIN `Achievements` AS T3 ON T2.`student_id` = T3.`student_id` WHERE T3.`achievement_id` IS NULL
SELECT COUNT(DISTINCT T1.`teacher_id`) FROM `Teachers` AS T1 JOIN `Classes` AS T2 ON T1.`teacher_id` = T2.`teacher_id` JOIN `Students` AS T3 ON T2.`student_id` = T3.`student_id` EXCEPT SELECT T1.`teacher_id` FROM `Teachers` AS T1 JOIN `Classes` AS T2 ON T1.`teacher_id` = T2.`teacher_id` JOIN `Students` AS T3 ON T2.`student_id` = T3.`student_id` JOIN `Achievements` AS T4 ON T3.`student_id` = T4.`student_id`
SELECT `date_of_transcript`, `transcript_details` FROM `Transcripts`
SELECT `date_of_transcript`, `transcript_details` FROM `Transcripts`
SELECT `achievement_type_code`, `achievement_details`, `date_achievement` FROM `Achievements`
SELECT `achievement_type_code`, `achievement_details`, `date_achievement` FROM `Achievements`
SELECT `datetime_detention_start`, `datetime_detention_end` FROM `Detention`
SELECT `datetime_detention_start`, `datetime_detention_end` FROM `Detention`
SELECT `bio_data` FROM `Students` WHERE `student_details` LIKE '%Suite%'
SELECT `bio_data` FROM `Students` WHERE `student_details` LIKE '%Suite%'
SELECT T.`teacher_details`, S.`bio_data` FROM `Classes` AS C JOIN `Teachers` AS T ON C.`teacher_id` = T.`teacher_id` JOIN `Students` AS S ON C.`student_id` = S.`student_id`
SELECT T.`teacher_details`, S.`bio_data` FROM `Classes` AS C JOIN `Teachers` AS T ON C.`teacher_id` = T.`teacher_id` JOIN `Students` AS S ON C.`student_id` = S.`student_id`
SELECT COUNT(DISTINCT `class_id`), `teacher_id` FROM `Classes` GROUP BY `teacher_id` ORDER BY COUNT(DISTINCT `class_id`) DESC LIMIT 1
SELECT `teacher_id`, COUNT(*) FROM `Classes` GROUP BY `teacher_id` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.`student_id`, COUNT(T1.`class_id`) FROM Classes AS T1 GROUP BY T1.`student_id` ORDER BY COUNT(T1.`class_id`) DESC LIMIT 1
SELECT `student_id`, COUNT(`class_id`) FROM `Classes` GROUP BY `student_id` ORDER BY COUNT(`class_id`) DESC LIMIT 1
SELECT T1.`student_id`, T1.`student_details` FROM `Students` AS T1 JOIN `Classes` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` HAVING COUNT(T2.`class_id`) = 2
SELECT T1.`student_id`, T1.`student_details` FROM `Students` AS T1 JOIN `Classes` AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id` HAVING COUNT(T2.`class_id`) = 2
SELECT T1.detention_type_code, T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY COUNT(T1.detention_type_code) LIMIT 1
SELECT `detention_type_code`, `detention_type_description` FROM `Ref_Detention_Type` WHERE `detention_type_code` IN (SELECT `detention_type_code` FROM `Detention` GROUP BY `detention_type_code` ORDER BY COUNT(*) LIMIT 1)
SELECT DISTINCT `s`.`bio_data`, `sl`.`other_details` FROM `Students` AS `s` JOIN `Student_Loans` AS `sl` ON `s`.`student_id` = `sl`.`student_id` WHERE `sl`.`amount_of_loan` > (SELECT AVG(`amount_of_loan`) FROM `Student_Loans`)
SELECT T1.`bio_data`, T1.`student_details` FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING AVG(T2.amount_of_loan) > (SELECT AVG(amount_of_loan) FROM Student_Loans)
SELECT MIN(`date_of_loan`) FROM `Student_Loans`
SELECT MIN(`date_of_loan`) FROM `Student_Loans`
SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id = T2.student_id ORDER BY T2.amount_of_loan LIMIT 1
SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id = T2.student_id ORDER BY T2.amount_of_loan LIMIT 1
SELECT T1.date_of_transcript FROM Transcripts AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id INNER JOIN Student_Loans AS T3 ON T2.student_id = T3.student_id ORDER BY T3.amount_of_loan DESC LIMIT 1
SELECT T1.date_of_transcript FROM Transcripts AS T1 INNER JOIN Students AS T2 ON T1.student_id = T2.student_id INNER JOIN Student_Loans AS T3 ON T2.student_id = T3.student_id ORDER BY T3.amount_of_loan DESC LIMIT 1
SELECT T.`teacher_details` FROM `Teachers` AS T JOIN `Classes` AS C ON T.`teacher_id` = C.`teacher_id` JOIN `Students` AS S ON C.`student_id` = S.`student_id` JOIN `Transcripts` AS TR ON S.`student_id` = TR.`student_id` WHERE TR.`transcript_id` = (SELECT MIN(transcript_id) FROM `Transcripts`)
SELECT T.`teacher_details` FROM `Teachers` AS T JOIN `Classes` AS C ON T.`teacher_id` = C.`teacher_id` JOIN `Students` AS S ON C.`student_id` = S.`student_id` JOIN `Transcripts` AS TR ON S.`student_id` = TR.`student_id` WHERE TR.`transcript_id` = (SELECT MIN(transcript_id) FROM Transcripts)
SELECT `student_id`, SUM(`amount_of_loan`) FROM `Student_Loans` GROUP BY `student_id`
SELECT `student_id`, SUM(`amount_of_loan`) FROM `Student_Loans` GROUP BY `student_id`
SELECT T1.`student_id`, T1.`bio_data`, COUNT(T2.`class_id`) FROM Students AS T1 JOIN Classes AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id`
SELECT T1.`student_id`, T1.`bio_data`, COUNT(T2.`class_id`) FROM Students AS T1 JOIN Classes AS T2 ON T1.`student_id` = T2.`student_id` GROUP BY T1.`student_id`
SELECT COUNT(DISTINCT `student_id`) FROM `Detention`
SELECT COUNT(DISTINCT `student_id`) FROM `Detention`
SELECT T1.address_type_code, T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 ON T1.address_type_code = T2.address_type_code GROUP BY T1.address_type_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.`address_type_code`, T2.`address_type_description` FROM `Students_Addresses` AS T1 JOIN `Ref_Address_Types` AS T2 ON T1.`address_type_code` = T2.`address_type_code` GROUP BY T1.`address_type_code` ORDER BY COUNT(T1.`address_type_code`) DESC LIMIT 1
SELECT T1.`bio_data` FROM `Students` AS T1 WHERE T1.`student_id` IN (SELECT T2.`student_id` FROM `Student_Events` AS T2) EXCEPT SELECT T3.`bio_data` FROM `Students` AS T3 INNER JOIN `Student_Loans` AS T4 ON T3.`student_id` = T4.`student_id`
SELECT T1.`bio_data` FROM `Students` AS T1 INNER JOIN `Student_Events` AS T2 ON T1.`student_id` = T2.`student_id` EXCEPT SELECT T1.`bio_data` FROM `Students` AS T1 INNER JOIN `Student_Loans` AS T3 ON T1.`student_id` = T3.`student_id`
SELECT T1.date_from, T1.date_to FROM Students_Addresses AS T1 INNER JOIN Transcripts AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(T2.transcript_id) = 2
SELECT T1.`date_from`, T1.`date_to` FROM `Students_Addresses` AS T1 JOIN `Students` AS T2 ON T1.`student_id` = T2.`student_id` JOIN `Transcripts` AS T3 ON T2.`student_id` = T3.`student_id` GROUP BY T2.`student_id` HAVING COUNT(T3.`transcript_id`) = 2
SELECT DISTINCT `datetime_detention_start` FROM `Detention`
SELECT `datetime_detention_start` FROM `Detention`
SELECT DISTINCT `Name` FROM `Author`
SELECT DISTINCT `Name` FROM `Author`
SELECT `Name`, `Address` FROM `Client`
SELECT `Name`, `Address` FROM `Client`
SELECT `Title`, `ISBN`, `SalePrice` FROM `Book`
SELECT `Title`, `ISBN`, `SalePrice` FROM `Book`
SELECT COUNT(*) FROM `Book`
SELECT COUNT(*) FROM `Book`
SELECT COUNT(DISTINCT `idAuthor`) FROM `Author`
SELECT COUNT(DISTINCT `idAuthor`) FROM `Author`
SELECT COUNT(*) FROM `Client`
SELECT COUNT(*) FROM `Client`
SELECT `Name`, `Address` FROM `Client` ORDER BY `Name`
SELECT `Name`, `Address` FROM `Client` ORDER BY `Name`
SELECT `b`.`Title`, `a`.`Name` FROM `Book` AS `b` JOIN `Author_Book` AS `ab` ON `b`.`ISBN` = `ab`.`ISBN` JOIN `Author` AS `a` ON `ab`.`Author` = `a`.`idAuthor`
SELECT T1.`Title`, T3.`Name` FROM `Book` AS T1 JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor`
SELECT `Orders`.`IdOrder`, `Client`.`Name` FROM `Orders` JOIN `Client` ON `Orders`.`IdClient` = `Client`.`IdClient`
SELECT `Orders`.`IdOrder`, `Client`.`Name` FROM `Orders` JOIN `Client` ON `Orders`.`IdClient` = `Client`.`IdClient`
SELECT T1.`Name`, COUNT(T2.`ISBN`) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.`idAuthor` = T2.`Author` GROUP BY T1.`Name`
SELECT T1.`Name`, COUNT(T2.`ISBN`) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.`idAuthor` = T2.`Author` GROUP BY T1.`Name`
SELECT `ISBN`, COUNT(`IdOrder`) FROM `Books_Order` GROUP BY `ISBN`
SELECT `ISBN`, COUNT(*) FROM `Books_Order` GROUP BY `ISBN`
SELECT `ISBN`, SUM(`amount`) FROM `Books_Order` GROUP BY `ISBN`
SELECT `ISBN`, SUM(`amount`) FROM `Books_Order` GROUP BY `ISBN`
SELECT T1.`Title` FROM `Book` AS T1 JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN` GROUP BY T1.`ISBN` ORDER BY sum(T2.`amount`) DESC LIMIT 1
SELECT T1.`Title` FROM `Book` AS T1 JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN` GROUP BY T1.`ISBN` ORDER BY sum(T2.`amount`) DESC LIMIT 1
SELECT T1.`Title`, T1.`PurchasePrice` FROM `Book` AS T1 JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN` GROUP BY T1.`ISBN` ORDER BY SUM(T2.`amount`) DESC LIMIT 1
SELECT T1.`Title`, T1.`PurchasePrice` FROM `Book` AS T1 JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN` GROUP BY T1.`ISBN` ORDER BY SUM(T2.`amount`) DESC LIMIT 1
SELECT DISTINCT `T1`.`Title` FROM `Book` AS `T1` JOIN `Books_Order` AS `T2` ON `T1`.`ISBN` = `T2`.`ISBN`
SELECT DISTINCT `T1`.`Title` FROM `Book` AS `T1` JOIN `Books_Order` AS `T2` ON `T1`.`ISBN` = `T2`.`ISBN`
SELECT DISTINCT `T1`.`Name` FROM `Client` AS `T1` JOIN `Orders` AS `T2` ON `T1`.`IdClient` = `T2`.`IdClient`
SELECT DISTINCT `T1`.`Name` FROM `Client` AS `T1` JOIN `Orders` AS `T2` ON `T1`.`IdClient` = `T2`.`IdClient`
SELECT `T1`.`Name`, COUNT(`T2`.`IdOrder`) FROM `Client` AS `T1` JOIN `Orders` AS `T2` ON `T1`.`IdClient` = `T2`.`IdClient` GROUP BY `T1`.`IdClient`
SELECT T1.`Name`, COUNT(T2.`IdOrder`) FROM Client AS T1 JOIN Orders AS T2 ON T1.`IdClient` = T2.`IdClient` GROUP BY T1.`IdClient`
SELECT T1.`Name` FROM `Client` AS T1 JOIN `Orders` AS T2 ON T1.`IdClient` = T2.`IdClient` GROUP BY T1.`IdClient` ORDER BY COUNT(T2.`IdOrder`) DESC LIMIT 1
SELECT T1.`Name` FROM `Client` AS T1 JOIN `Orders` AS T2 ON T1.`IdClient` = T2.`IdClient` GROUP BY T1.`IdClient` ORDER BY COUNT(T2.`IdOrder`) DESC LIMIT 1
SELECT T1.`Name`, SUM(T3.`amount`) FROM Client AS T1 JOIN Orders AS T2 ON T1.`IdClient` = T2.`IdClient` JOIN Books_Order AS T3 ON T2.`IdOrder` = T3.`IdOrder` GROUP BY T1.`IdClient`
SELECT T1.`Name`, SUM(T3.`amount`) FROM Client AS T1 JOIN Orders AS T2 ON T1.`IdClient` = T2.`IdClient` JOIN Books_Order AS T3 ON T2.`IdOrder` = T3.`IdOrder` GROUP BY T1.`IdClient`
SELECT T1.`Name` FROM `Client` AS T1 JOIN `Orders` AS T2 ON T1.`IdClient` = T2.`IdClient` JOIN `Books_Order` AS T3 ON T2.`IdOrder` = T3.`IdOrder` GROUP BY T1.`IdClient` ORDER BY sum(T3.`amount`) DESC LIMIT 1
SELECT T1.`Name` FROM `Client` AS T1 JOIN `Orders` AS T2 ON T1.`IdClient` = T2.`IdClient` JOIN `Books_Order` AS T3 ON T2.`IdOrder` = T3.`IdOrder` GROUP BY T1.`IdClient` ORDER BY SUM(T3.`amount`) DESC LIMIT 1
SELECT `Title` FROM `Book` EXCEPT SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN`
SELECT `Title` FROM `Book` WHERE `ISBN` NOT IN (SELECT `ISBN` FROM `Books_Order`)
SELECT `Name` FROM `Client` WHERE `IdClient` NOT IN (SELECT `IdClient` FROM `Orders`)
SELECT `Name` FROM `Client` EXCEPT SELECT T1.`Name` FROM `Client` AS T1 JOIN `Orders` AS T2 ON T1.`IdClient` = T2.`IdClient`
SELECT MAX(`SalePrice`), MIN(`SalePrice`) FROM `Book`
SELECT MAX(`SalePrice`), MIN(`SalePrice`) FROM `Book`
SELECT AVG(`PurchasePrice`), AVG(`SalePrice`) FROM `Book`
SELECT AVG(`PurchasePrice`), AVG(`SalePrice`) FROM `Book`
SELECT MAX(`SalePrice` - `PurchasePrice`) FROM `Book`
SELECT MAX(`SalePrice` - `PurchasePrice`) FROM `Book`
SELECT `Title` FROM `Book` WHERE `SalePrice` > (SELECT AVG(`SalePrice`) FROM `Book`)
SELECT `Title` FROM `Book` WHERE `SalePrice` > (SELECT AVG(`SalePrice`) FROM `Book`)
SELECT `Title` FROM `Book` WHERE `SalePrice` = (SELECT MIN(`SalePrice`) FROM `Book`)
SELECT `Title` FROM `Book` WHERE `SalePrice` = (SELECT MIN(`SalePrice`) FROM `Book`)
SELECT `Title` FROM `Book` WHERE `PurchasePrice` = (SELECT MAX(`PurchasePrice`) FROM `Book`)
SELECT `Title` FROM `Book` WHERE `PurchasePrice` = (SELECT MAX(`PurchasePrice`) FROM `Book`)
SELECT AVG(`SalePrice`) FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` = 'George Orwell'
SELECT AVG(`SalePrice`) FROM `Book` JOIN `Author_Book` ON `Book`.`ISBN` = `Author_Book`.`ISBN` JOIN `Author` ON `Author_Book`.`Author` = `Author`.`idAuthor` WHERE `Author`.`Name` = 'George Orwell'
SELECT T1.`SalePrice` FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` = 'Plato'
SELECT T1.`SalePrice` FROM `Book` AS T1 JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` = 'Plato'
SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` = 'George Orwell' ORDER BY T1.`SalePrice` LIMIT 1
SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` = 'George Orwell' ORDER BY T1.`SalePrice` LIMIT 1
SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` = 'Plato' AND T1.`SalePrice` < (SELECT AVG(`SalePrice`) FROM `Book`)
SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` = 'Plato' AND T1.`SalePrice` < (SELECT AVG(`SalePrice`) FROM `Book`)
SELECT T1.`Name` FROM Author AS T1 JOIN Author_Book AS T2 ON T1.`idAuthor` = T2.`Author` JOIN Book AS T3 ON T2.`ISBN` = T3.`ISBN` WHERE T3.`Title` = "Pride and Prejudice"
SELECT T2.`Name` FROM Book AS T1 JOIN Author_Book AS T3 ON T1.ISBN = T3.ISBN JOIN Author AS T2 ON T3.Author = T2.idAuthor WHERE T1.`Title` = 'Pride and Prejudice'
SELECT T1.`Title` FROM `Book` AS T1 JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` LIKE '%Plato%'
SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Author_Book` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Author` AS T3 ON T2.`Author` = T3.`idAuthor` WHERE T3.`Name` LIKE '%Plato%'
SELECT COUNT(T1.`IdOrder`) FROM `Books_Order` AS T1 JOIN `Book` AS T2 ON T1.`ISBN` = T2.`ISBN` WHERE T2.`Title` = 'Pride and Prejudice'
SELECT SUM(`T1`.`amount`) FROM `Books_Order` AS `T1` JOIN `Book` AS `T2` ON `T1`.`ISBN` = `T2`.`ISBN` WHERE `T2`.`Title` = 'Pride and Prejudice'
SELECT `IdOrder` FROM `Books_Order` WHERE `ISBN` IN (SELECT `ISBN` FROM `Book` WHERE `Title` = 'Pride and Prejudice') INTERSECT SELECT `IdOrder` FROM `Books_Order` WHERE `ISBN` IN (SELECT `ISBN` FROM `Book` WHERE `Title` = 'The Little Prince')
SELECT `IdOrder` FROM `Books_Order` WHERE `ISBN` IN (SELECT `ISBN` FROM `Book` WHERE `Title` = 'Pride and Prejudice') INTERSECT SELECT `IdOrder` FROM `Books_Order` WHERE `ISBN` IN (SELECT `ISBN` FROM `Book` WHERE `Title` = 'The Little Prince')
SELECT `ISBN` FROM `Books_Order` JOIN `Orders` ON `Books_Order`.`IdOrder` = `Orders`.`IdOrder` JOIN `Client` ON `Orders`.`IdClient` = `Client`.`IdClient` WHERE `Client`.`Name` = 'Peter Doe' INTERSECT SELECT `ISBN` FROM `Books_Order` JOIN `Orders` ON `Books_Order`.`IdOrder` = `Orders`.`IdOrder` JOIN `Client` ON `Orders`.`IdClient` = `Client`.`IdClient` WHERE `Client`.`Name` = 'James Smith'
SELECT `ISBN` FROM `Books_Order` JOIN `Orders` ON `Books_Order`.`IdOrder` = `Orders`.`IdOrder` JOIN `Client` ON `Orders`.`IdClient` = `Client`.`IdClient` WHERE `Client`.`Name` = 'Peter Doe' INTERSECT SELECT `ISBN` FROM `Books_Order` JOIN `Orders` ON `Books_Order`.`IdOrder` = `Orders`.`IdOrder` JOIN `Client` ON `Orders`.`IdClient` = `Client`.`IdClient` WHERE `Client`.`Name` = 'James Smith'
SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Orders` AS T3 ON T2.`IdOrder` = T3.`IdOrder` INNER JOIN `Client` AS T4 ON T3.`IdClient` = T4.`IdClient` WHERE T4.`Name` = 'Peter Doe' EXCEPT SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Orders` AS T3 ON T2.`IdOrder` = T3.`IdOrder` INNER JOIN `Client` AS T4 ON T3.`IdClient` = T4.`IdClient` WHERE T4.`Name` = 'James Smith'
SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Orders` AS T3 ON T2.`IdOrder` = T3.`IdOrder` INNER JOIN `Client` AS T4 ON T3.`IdClient` = T4.`IdClient` WHERE T4.`Name` = 'Peter Doe' EXCEPT SELECT T1.`Title` FROM `Book` AS T1 INNER JOIN `Books_Order` AS T2 ON T1.`ISBN` = T2.`ISBN` INNER JOIN `Orders` AS T3 ON T2.`IdOrder` = T3.`IdOrder` INNER JOIN `Client` AS T4 ON T3.`IdClient` = T4.`IdClient` WHERE T4.`Name` = 'James Smith'
SELECT DISTINCT `C`.`Name` FROM `Client` AS `C` JOIN `Orders` AS `O` ON `C`.`IdClient` = `O`.`IdClient` JOIN `Books_Order` AS `BO` ON `O`.`IdOrder` = `BO`.`IdOrder` JOIN `Book` AS `B` ON `BO`.`ISBN` = `B`.`ISBN` WHERE `B`.`Title` = 'Pride and Prejudice'
SELECT DISTINCT `T1`.`Name` FROM `Client` AS `T1` JOIN `Orders` AS `T2` ON `T1`.`IdClient` = `T2`.`IdClient` JOIN `Books_Order` AS `T3` ON `T2`.`IdOrder` = `T3`.`IdOrder` JOIN `Book` AS `T4` ON `T3`.`ISBN` = `T4`.`ISBN` WHERE `T4`.`Title` = 'Pride and Prejudice'
SELECT count(*) FROM `book`
SELECT `Title` FROM `book` ORDER BY `Title` ASC
SELECT `Title` FROM `book` ORDER BY `Pages` DESC
SELECT `Type`, `Release` FROM `book`
SELECT MAX(`Chapters`), MIN(`Chapters`) FROM `book`
SELECT `Title` FROM `book` WHERE `Title` != 'Poet'
SELECT avg(`Rating`) FROM `review`
SELECT T1.`Title`, T2.`Rating` FROM book AS T1 JOIN review AS T2 ON T1.`Book_ID` = T2.`Book_ID`
SELECT T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID ORDER BY T1.Chapters DESC LIMIT 1
SELECT T1.`Rank` FROM review AS T1 JOIN book AS T2 ON T1.`Book_ID` = T2.`Book_ID` ORDER BY T2.`Pages` LIMIT 1
SELECT T1.`Title` FROM book AS T1 JOIN review AS T2 ON T1.`Book_ID` = T2.`Book_ID` ORDER BY T2.`Rank` LIMIT 1
SELECT AVG(`Readers_in_Million`) FROM review AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Type = "Novel"
SELECT `Type`, COUNT(*) FROM `book` GROUP BY `Type`
SELECT Type FROM `book` GROUP BY Type ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Type` FROM `book` GROUP BY `Type` HAVING COUNT(*) >= 3
SELECT T1.`Title` FROM book AS T1 JOIN review AS T2 ON T1.`Book_ID` = T2.`Book_ID` ORDER BY T2.`Rating`
SELECT T1.`Title`, T1.`Audio` FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID ORDER BY T2.`Readers_in_Million` DESC
SELECT count(Book_ID) FROM `book` WHERE NOT EXISTS (SELECT 1 FROM `review` WHERE `book`.`Book_ID` = `review`.`Book_ID`)
SELECT `Type` FROM `book` WHERE `Chapters` > 75 INTERSECT SELECT `Type` FROM `book` WHERE `Chapters` < 50
SELECT COUNT(DISTINCT `Type`) FROM `book`
SELECT T1.`Type`, T1.`Title` FROM book AS T1 LEFT JOIN review AS T2 ON T1.`Book_ID` = T2.`Book_ID` WHERE T2.`Rating` IS NULL
SELECT COUNT(*) FROM `customer`
SELECT COUNT(*) FROM `customer`
SELECT `Name` FROM `customer` ORDER BY `Level_of_Membership` ASC
SELECT `Name` FROM `customer` ORDER BY `Level_of_Membership` ASC
SELECT DISTINCT `Nationality`, `Card_Credit` FROM `customer`
SELECT `Nationality`, `Card_Credit` FROM `customer`
SELECT `Name` FROM `customer` WHERE `Nationality` = 'England' OR `Nationality` = 'Australia'
SELECT `Name` FROM customer WHERE `Nationality` = 'England' UNION SELECT `Name` FROM customer WHERE `Nationality` = 'Australia'
SELECT avg(`Card_Credit`) FROM `customer` WHERE `Level_of_Membership` > 1
SELECT AVG(`Card_Credit`) FROM `customer` WHERE `Level_of_Membership` > 1
SELECT `Card_Credit` FROM `customer` ORDER BY `Level_of_Membership` DESC LIMIT 1
SELECT `Card_Credit` FROM `customer` ORDER BY `Level_of_Membership` DESC LIMIT 1
SELECT Nationality, COUNT(*) FROM customer GROUP BY Nationality
SELECT Nationality, COUNT(Customer_ID) FROM customer GROUP BY Nationality
SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM customer WHERE Card_Credit < 50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit > 75
SELECT `Nationality` FROM `customer` WHERE `Card_Credit` > 50 INTERSECT SELECT `Nationality` FROM `customer` WHERE `Card_Credit` < 75
SELECT T1.`Name`, T2.`Dish_Name` FROM customer AS T1 JOIN customer_order AS T2 ON T1.`Customer_ID` = T2.`Customer_ID`
SELECT T1.`Name`, T2.`Dish_Name` FROM customer AS T1 JOIN customer_order AS T2 ON T1.`Customer_ID` = T2.`Customer_ID`
SELECT T1.`Name`, T2.`Dish_Name` FROM customer AS T1 JOIN customer_order AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` ORDER BY T2.`Quantity` DESC
SELECT T1.`Name`, T3.`Dish_Name` FROM customer AS T1 JOIN customer_order AS T3 ON T1.`Customer_ID` = T3.`Customer_ID` ORDER BY T3.`Quantity` DESC
SELECT T1.`Name`, SUM(T2.`Quantity`) FROM customer AS T1 JOIN customer_order AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` GROUP BY T1.`Customer_ID`
SELECT T1.`Name`, SUM(T2.`Quantity`) FROM customer AS T1 JOIN customer_order AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` GROUP BY T1.`Customer_ID`
SELECT T1.`Customer_ID` FROM customer_order AS T1 JOIN customer AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_ID HAVING sum(T1.Quantity) > 1
SELECT T1.`Name` FROM customer AS T1 JOIN customer_order AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` GROUP BY T1.`Customer_ID` HAVING sum(T2.`Quantity`) > 1
SELECT DISTINCT `Manager` FROM `branch`
SELECT DISTINCT `Manager` FROM `branch`
SELECT T1.`Name` FROM customer AS T1 LEFT JOIN customer_order AS T2 ON T1.`Customer_ID` = T2.`Customer_ID` WHERE T2.`Customer_ID` IS NULL
SELECT T1.`Name` FROM customer AS T1 WHERE NOT EXISTS (SELECT 1 FROM customer_order AS T2 WHERE T1.`Customer_ID` = T2.`Customer_ID`)
SELECT count(*) FROM `member`
SELECT `Name` FROM `member` ORDER BY `Age` ASC
SELECT `Name`, `Nationality` FROM `member`
SELECT Name FROM member WHERE Nationality != 'England'
SELECT `Name` FROM `member` WHERE `Age` = 19 OR `Age` = 20
SELECT `Name` FROM `member` ORDER BY `Age` DESC LIMIT 1
SELECT Nationality, COUNT(DISTINCT Member_ID) FROM member GROUP BY Nationality
SELECT Nationality FROM member GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT Nationality FROM member GROUP BY Nationality HAVING count(*)  >=  2
SELECT T1.`Team_Leader`, T2.`Club_Name` FROM club AS T1 JOIN club_leader AS T3 ON T1.`Club_ID` = T3.`Club_ID` JOIN member AS T4 ON T3.`Member_ID` = T4.`Member_ID` JOIN club AS T2 ON T3.`Club_ID` = T2.`Club_ID`
SELECT T2.`Team_Leader` FROM club AS T2 JOIN club_leader AS T1 ON T1.`Club_ID` = T2.`Club_ID` WHERE T2.`Overall_Ranking` > 100
SELECT T1.Team_Leader FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Year_Join < 2018
SELECT T1.`Team_Leader` FROM club AS T1 WHERE T1.`Club_Name` = 'Houston'
SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM club_leader)
SELECT Nationality FROM member WHERE Age > 22 INTERSECT SELECT Nationality FROM member WHERE Age < 19
SELECT AVG(T1.Age) FROM member AS T1 JOIN club_leader AS T2 ON T1.Member_ID = T2.Member_ID
SELECT `Club_Name` FROM `club` WHERE `Club_Name` LIKE '%state%'
SELECT DISTINCT `Collection_Subset_Name` FROM `Collection_Subsets`
SELECT DISTINCT `Collection_Subset_Name` FROM `Collection_Subsets`
SELECT `Collecrtion_Subset_Details` FROM `Collection_Subsets` WHERE `Collection_Subset_Name` = 'Top collection'
SELECT T1.Collecrtion_Subset_Details FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID = T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID = T3.Collection_ID WHERE T1.Collection_Subset_Name = 'Top collection'
SELECT DISTINCT `T1`.`Document_Subset_Name` FROM `Document_Subsets` AS `T1` JOIN `Document_Subset_Members` AS `T2` ON `T1`.`Document_Subset_ID` = `T2`.`Document_Subset_ID`
SELECT DISTINCT `Document_Subset_Name` FROM `Document_Subsets`
SELECT `Document_Subset_Details` FROM `Document_Subsets` WHERE `Document_Subset_Name` = 'Best for 2000'
SELECT `Document_Subset_Details` FROM `Document_Subsets` WHERE `Document_Subset_Name` = 'Best for 2000'
SELECT DISTINCT `Document_Object_ID` FROM `Document_Objects`
SELECT DISTINCT `Document_Object_ID` FROM `Document_Objects`
SELECT T1.`Parent_Document_Object_ID` FROM `Document_Objects` AS T1 JOIN `Document_Objects` AS T2 ON T1.`Document_Object_ID` = T2.`Parent_Document_Object_ID` WHERE T2.`Owner` = 'Marlin'
SELECT `Document_Object_ID` FROM `Document_Objects` WHERE `Owner` = 'Marlin'
SELECT `Owner` FROM `Document_Objects` WHERE `Description` = 'Braeden Collection'
SELECT `Owner` FROM `Document_Objects` WHERE `Description` = 'Braeden Collection'
SELECT T1.Owner FROM `Document_Objects` AS T1 INNER JOIN `Document_Objects` AS T2 ON T1.Document_Object_ID = T2.Parent_Document_Object_ID WHERE T2.Owner = 'Marlin'
SELECT T1.Owner FROM `Document_Objects` AS T1 INNER JOIN `Document_Objects` AS T2 ON T1.Document_Object_ID = T2.Parent_Document_Object_ID WHERE T2.Owner = 'Marlin'
SELECT DISTINCT `Description` FROM `Document_Objects`
SELECT DISTINCT `T1`.`Description` FROM `Document_Objects` AS `T1` JOIN `Document_Objects` AS `T2` ON `T1`.`Parent_Document_Object_ID` = `T2`.`Document_Object_ID`
SELECT count(*) FROM `Document_Objects` WHERE `Owner` = 'Marlin'
SELECT count(*) FROM `Document_Objects` WHERE `Owner` = 'Marlin'
SELECT `Document_Object_ID` FROM `Document_Objects` WHERE `Document_Object_ID` NOT IN (SELECT `Parent_Document_Object_ID` FROM `Document_Objects` WHERE `Parent_Document_Object_ID` IS NOT NULL)
SELECT DISTINCT `Document_Object_ID` FROM `Document_Objects` WHERE `Document_Object_ID` NOT IN (SELECT `Parent_Document_Object_ID` FROM `Document_Objects` WHERE `Parent_Document_Object_ID` IS NOT NULL)
SELECT `Parent_Document_Object_ID`, COUNT(*) FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID`
SELECT `Parent_Document_Object_ID`, COUNT(DISTINCT `Document_Object_ID`) FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID`
SELECT DISTINCT `Collection_Name` FROM `Collections`
SELECT DISTINCT `Collection_Name` FROM `Collections`
SELECT `Collection_Description` FROM `Collections` WHERE `Collection_Name` LIKE 'Best'
SELECT `Collection_Description` FROM `Collections` WHERE `Collection_Description` LIKE 'Best%'
SELECT T1.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Collection_ID = T2.Parent_Collection_ID WHERE T2.Collection_Name = 'Nice'
SELECT T1.`Collection_Name` FROM `Collections` AS T1 JOIN `Collections` AS T2 ON T1.`Collection_ID` = T2.`Parent_Collection_ID` WHERE T2.`Collection_Name` = 'Nice'
SELECT DISTINCT `Collection_Name` FROM `Collections` WHERE `Collection_ID` NOT IN (SELECT `Parent_Collection_ID` FROM `Collections` WHERE `Parent_Collection_ID` IS NOT NULL)
SELECT DISTINCT `Collection_Name` FROM `Collections` WHERE `Collection_ID` NOT IN (SELECT `Parent_Collection_ID` FROM `Collections` WHERE `Parent_Collection_ID` IS NOT NULL)
SELECT DISTINCT `Parent_Document_Object_ID` FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID` HAVING COUNT(*) > 1
SELECT DISTINCT `Parent_Document_Object_ID` FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID` HAVING COUNT(*) > 1
SELECT count(T1.Collection_ID) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = 'Best'
SELECT count(T1.Collection_ID) FROM Collections AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Collection_Subsets AS T3 ON T2.Collection_Subset_ID = T3.Collection_Subset_ID WHERE T3.Collection_Subset_Name = 'Best'
SELECT DISTINCT `T1`.`Document_Object_ID` FROM `Document_Subset_Members` AS `T1` JOIN `Document_Objects` AS `T2` ON `T1`.`Related_Document_Object_ID` = `T2`.`Document_Object_ID` WHERE `T2`.`Owner` = 'Ransom'
SELECT T1.`Related_Document_Object_ID` FROM `Document_Subset_Members` AS T1 INNER JOIN `Document_Objects` AS T2 ON T1.`Document_Object_ID` = T2.`Document_Object_ID` WHERE T2.`Owner` = 'Ransom'
SELECT T1.Collection_Subset_ID, T1.Collection_Subset_Name, COUNT(T2.Collection_ID) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID = T2.Collection_Subset_ID GROUP BY T1.Collection_Subset_ID
SELECT T1.Collection_Subset_ID, T1.Collection_Subset_Name, COUNT(T2.Collection_ID) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID = T2.Collection_Subset_ID GROUP BY T1.Collection_Subset_ID
SELECT `Parent_Document_Object_ID`, COUNT(*) FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Parent_Document_Object_ID`, COUNT(*) FROM `Document_Objects` GROUP BY `Parent_Document_Object_ID`
SELECT `Document_Object_ID`, COUNT(`Related_Document_Object_ID`) FROM `Document_Subset_Members` GROUP BY `Document_Object_ID` ORDER BY COUNT(`Related_Document_Object_ID`) ASC LIMIT 1
SELECT `Document_Object_ID` FROM `Documents_in_Collections` GROUP BY `Document_Object_ID` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `Document_Object_ID`, COUNT(*) FROM `Document_Subset_Members` GROUP BY `Document_Object_ID` HAVING COUNT(*) BETWEEN 2 AND 4
SELECT T1.`Document_Object_ID`, COUNT(T2.`Related_Document_Object_ID`) FROM `Document_Objects` AS T1 JOIN `Document_Subset_Members` AS T2 ON T1.`Document_Object_ID` = T2.`Document_Object_ID` GROUP BY T1.`Document_Object_ID` HAVING COUNT(T2.`Related_Document_Object_ID`) BETWEEN 2 AND 4
SELECT DISTINCT `T1`.`Owner` FROM `Document_Objects` AS `T1` JOIN `Document_Subset_Members` AS `T2` ON `T1`.`Document_Object_ID` = `T2`.`Document_Object_ID` JOIN `Document_Objects` AS `T3` ON `T2`.`Related_Document_Object_ID` = `T3`.`Document_Object_ID` WHERE `T3`.`Owner` = 'Braeden'
SELECT DISTINCT `T1`.`Owner` FROM `Document_Objects` AS `T1` JOIN `Document_Subset_Members` AS `T2` ON `T1`.`Document_Object_ID` = `T2`.`Document_Object_ID` JOIN `Document_Objects` AS `T3` ON `T2`.`Related_Document_Object_ID` = `T3`.`Document_Object_ID` WHERE `T3`.`Owner` = 'Braeden'
SELECT DISTINCT T2.`Document_Subset_Name` FROM `Document_Objects` AS T1 JOIN `Document_Subset_Members` AS T3 ON T1.`Document_Object_ID` = T3.`Document_Object_ID` JOIN `Document_Subsets` AS T2 ON T3.`Document_Subset_ID` = T2.`Document_Subset_ID` WHERE T1.`Owner` = 'Braeden'
SELECT DISTINCT T2.Document_Subset_Name FROM Document_Objects AS T1 JOIN Document_Subset_Members AS T3 ON T1.Document_Object_ID = T3.Document_Object_ID JOIN Document_Subsets AS T2 ON T3.Document_Subset_ID = T2.Document_Subset_ID WHERE T1.Owner = 'Braeden'
SELECT T1.Document_Subset_ID, T1.Document_Subset_Name, COUNT(DISTINCT T2.Document_Object_ID) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID
SELECT T1.`Document_Subset_ID`, T1.`Document_Subset_Name`, COUNT(DISTINCT T2.`Document_Object_ID`) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` GROUP BY T1.`Document_Subset_ID`
SELECT T1.`Document_Subset_ID`, T1.`Document_Subset_Name`, COUNT(DISTINCT T2.`Document_Object_ID`) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` GROUP BY T1.`Document_Subset_ID` ORDER BY COUNT(DISTINCT T2.`Document_Object_ID`) DESC LIMIT 1
SELECT T1.`Document_Subset_ID`, T1.`Document_Subset_Name`, COUNT(DISTINCT T2.`Document_Object_ID`) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` GROUP BY T1.`Document_Subset_ID` ORDER BY COUNT(DISTINCT T2.`Document_Object_ID`) DESC LIMIT 1
SELECT T1.`Document_Object_ID` FROM `Document_Subset_Members` AS T1 JOIN `Document_Subsets` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` WHERE T2.`Document_Subset_Name` = 'Best for 2000'
SELECT T1.`Document_Object_ID` FROM `Document_Subset_Members` AS T1 INNER JOIN `Document_Subsets` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` WHERE T2.`Document_Subset_Name` = 'Best for 2000'
SELECT T1.`Document_Subset_Name`, T3.`Document_Object_ID` FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` JOIN Document_Objects AS T3 ON T2.`Document_Object_ID` = T3.`Document_Object_ID`
SELECT DISTINCT T2.`Document_Subset_Name`, T1.`Document_Object_ID` FROM `Document_Subset_Members` AS T1 JOIN `Document_Subsets` AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID`
SELECT T2.`Collection_Name` FROM `Document_Objects` AS T1 JOIN `Documents_in_Collections` AS T3 ON T1.`Document_Object_ID` = T3.`Document_Object_ID` JOIN `Collections` AS T2 ON T3.`Collection_ID` = T2.`Collection_ID` WHERE T1.`Owner` = 'Ransom'
SELECT T2.`Collection_Name` FROM `Document_Objects` AS T1 JOIN `Documents_in_Collections` AS T3 ON T1.`Document_Object_ID` = T3.`Document_Object_ID` JOIN `Collections` AS T2 ON T3.`Collection_ID` = T2.`Collection_ID` WHERE T1.`Owner` = 'Ransom'
SELECT `Document_Object_ID`, COUNT(DISTINCT `Collection_ID`) FROM `Documents_in_Collections` GROUP BY `Document_Object_ID`
SELECT `Document_Object_ID`, COUNT(DISTINCT `Collection_ID`) FROM `Documents_in_Collections` GROUP BY `Document_Object_ID`
SELECT count(T1.`Document_Object_ID`) FROM Documents_in_Collections AS T1 JOIN Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = 'Best'
SELECT count(T1.`Document_Object_ID`) FROM Documents_in_Collections AS T1 JOIN Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = 'Best'
SELECT T1.`Document_Object_ID` FROM `Documents_in_Collections` AS T1 JOIN `Collections` AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` = 'Best'
SELECT count(T1.`Document_Object_ID`) FROM Documents_in_Collections AS T1 JOIN Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = 'Best'
SELECT T1.`Collection_Name`, T1.`Collection_ID`, COUNT(T2.`Document_Object_ID`) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` GROUP BY T1.`Collection_ID` ORDER BY COUNT(T2.`Document_Object_ID`) DESC LIMIT 1
SELECT T1.`Collection_Name`, T1.`Collection_ID`, COUNT(T2.`Document_Object_ID`) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T1.`Collection_Name` LIKE 'Best%' GROUP BY T1.`Collection_ID` ORDER BY COUNT(T2.`Document_Object_ID`) DESC LIMIT 1
SELECT `Document_Object_ID` FROM `Document_Subset_Members` WHERE `Document_Subset_ID` IN (SELECT `Document_Subset_ID` FROM `Document_Subsets` WHERE `Document_Subset_Name` = 'Best for 2000') INTERSECT SELECT T1.Document_Object_ID FROM Documents_in_Collections AS T1 INNER JOIN Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = 'Best'
SELECT DISTINCT T1.`Document_Object_ID` FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` WHERE T2.`Document_Subset_Name` = 'Best for 2000' INTERSECT SELECT DISTINCT T1.`Document_Object_ID` FROM Documents_in_Collections AS T1 JOIN Collections AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` = 'Best'
SELECT `Document_Object_ID` FROM `Documents_in_Collections` JOIN `Collections` ON `Documents_in_Collections`.`Collection_ID` = `Collections`.`Collection_ID` WHERE `Collection_Name` = 'Best' EXCEPT SELECT `Document_Object_ID` FROM `Document_Subset_Members` JOIN `Document_Subsets` ON `Document_Subset_Members`.`Document_Subset_ID` = `Document_Subsets`.`Document_Subset_ID` WHERE `Document_Subset_Name` = 'Best for 2000'
SELECT `Document_Object_ID` FROM `Documents_in_Collections` JOIN `Collections` ON `Documents_in_Collections`.`Collection_ID` = `Collections`.`Collection_ID` WHERE `Collection_Name` = 'Best' EXCEPT SELECT `Document_Object_ID` FROM `Document_Subset_Members` JOIN `Document_Subsets` ON `Document_Subset_Members`.`Document_Subset_ID` = `Document_Subsets`.`Document_Subset_ID` WHERE `Document_Subset_Name` = 'Best for 2000'
SELECT `Document_Object_ID` FROM `Document_Subset_Members` WHERE `Document_Subset_ID` IN (SELECT `Document_Subset_ID` FROM `Document_Subsets` WHERE `Document_Subset_Name` = 'Best for 2000') INTERSECT SELECT T1.`Document_Object_ID` FROM `Documents_in_Collections` AS T1 INNER JOIN `Collections` AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` = 'Best'
SELECT DISTINCT T1.`Document_Object_ID` FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.`Document_Subset_ID` = T2.`Document_Subset_ID` WHERE T2.`Document_Subset_Name` = 'Best for 2000' UNION SELECT DISTINCT T1.`Document_Object_ID` FROM Documents_in_Collections AS T1 JOIN Collections AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` = 'Best'
SELECT T1.`Collection_Name` FROM `Collections` AS T1 JOIN `Collection_Subset_Members` AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` JOIN `Collection_Subsets` AS T3 ON T2.`Collection_Subset_ID` = T3.`Collection_Subset_ID` WHERE T3.`Collection_Subset_Name` = 'Best' OR T1.`Collection_Name` = 'Best'
SELECT T1.`Collection_Name` FROM `Collections` AS T1 JOIN `Collection_Subset_Members` AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` JOIN `Collection_Subsets` AS T3 ON T2.`Collection_Subset_ID` = T3.`Collection_Subset_ID` WHERE T3.`Collection_Subset_Name` = 'Best' OR T1.`Collection_Name` = 'Best'
SELECT count(T1.`Collection_ID`) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` JOIN Collection_Subsets AS T3 ON T1.`Collection_Subset_ID` = T3.`Collection_Subset_ID` WHERE T3.`Collection_Subset_Name` = 'Best';
SELECT count(DISTINCT T1.`Collection_ID`) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.`Collection_ID` = T2.`Collection_ID` WHERE T2.`Collection_Name` LIKE 'Best'
SELECT DISTINCT T2.Collection_Subset_Name FROM Collections AS T1 JOIN Collection_Subset_Members AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collection_Subsets AS T2 ON T3.Collection_Subset_ID = T2.Collection_Subset_ID WHERE T1.Collection_Name = 'Best'
SELECT T2.Collection_Subset_Name FROM Collections AS T1 JOIN Collection_Subset_Members AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collection_Subsets AS T2 ON T3.Collection_Subset_ID = T2.Collection_Subset_ID WHERE T1.Collection_Name = 'Best'
SELECT count(*) FROM `songs` WHERE `name` LIKE '%Love%'
SELECT `name` FROM `songs` ORDER BY `name` ASC
SELECT `name`, `language` FROM `songs`
SELECT MAX(`voice_sound_quality`), MIN(`voice_sound_quality`) FROM `performance_score`
SELECT T2.`voice_sound_quality`, T2.`rhythm_tempo`, T2.`stage_presence` FROM `participants` AS T1 JOIN `performance_score` AS T2 ON T1.`id` = T2.`participant_id` WHERE T1.`name` = 'Freeway'
SELECT `id`, `language`, `original_artist` FROM `songs` WHERE `name` != 'Love'
SELECT T1.`name`, T1.`original_artist` FROM songs AS T1 WHERE T1.`english_translation` = 'All the streets of love'
SELECT DISTINCT `T1`.`stage_presence` FROM `performance_score` AS `T1` JOIN `songs` AS `T2` ON `T1`.`songs_id` = `T2`.`id` WHERE `T2`.`language` = 'English'
SELECT T1.id, T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id GROUP BY T1.id HAVING COUNT(T2.songs_id) >= 2
SELECT T1.id, T1.name, T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id GROUP BY T1.id ORDER BY COUNT(T2.songs_id) DESC
SELECT T1.id, T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T2.voice_sound_quality = 5 OR T2.rhythm_tempo = 5
SELECT T1.voice_sound_quality FROM performance_score AS T1 INNER JOIN songs AS T2 ON T1.songs_id = T2.id WHERE T2.name = 'The Balkan Girls' AND T2.language = 'English'
SELECT T1.id, T1.name FROM songs AS T1 JOIN performance_score AS T2 ON T1.id = T2.songs_id GROUP BY T1.id ORDER BY COUNT(T2.participant_id) DESC LIMIT 1
SELECT count(*) FROM `performance_score` WHERE `stage_presence` < 7 OR `stage_presence` > 9
SELECT count(T1.id) FROM songs AS T1 LEFT JOIN performance_score AS T2 ON T1.id = T2.songs_id WHERE T2.songs_id IS NULL
SELECT `language`, AVG(`rhythm_tempo`) FROM `songs` JOIN `performance_score` ON `songs`.`id` = `performance_score`.`songs_id` GROUP BY `language`
SELECT DISTINCT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id JOIN songs AS T3 ON T2.songs_id = T3.id WHERE T3.language = 'English'
SELECT T1.name, T1.popularity FROM participants AS T1 INNER JOIN performance_score AS T2 ON T1.id = T2.participant_id INNER JOIN songs AS T3 ON T2.songs_id = T3.id WHERE T3.language = 'Croatian' INTERSECT SELECT T1.name, T1.popularity FROM participants AS T1 INNER JOIN performance_score AS T2 ON T1.id = T2.participant_id INNER JOIN songs AS T3 ON T2.songs_id = T3.id WHERE T3.language = 'English'
SELECT `name` FROM `songs` WHERE `name` LIKE '%Is%'
SELECT T1.`original_artist` FROM songs AS T1 JOIN performance_score AS T2 ON T1.`id` = T2.`songs_id` WHERE T2.`rhythm_tempo` > 5 ORDER BY T2.`voice_sound_quality` DESC
SELECT count(DISTINCT `city_code`) FROM `City`
SELECT COUNT(*) FROM `City`
SELECT DISTINCT `state` FROM `City`
SELECT DISTINCT `state` FROM `City`
SELECT count(DISTINCT `country`) FROM `City`
SELECT count(DISTINCT `country`) FROM `City`
SELECT `city_name`, `city_code`, `state`, `country` FROM `City`
SELECT `city_name`, `city_code`, `state`, `country` FROM `City`
SELECT `latitude`, `longitude` FROM `City` WHERE `city_name` = 'Baltimore'
SELECT `latitude`, `longitude` FROM `City` WHERE `city_name` = 'Baltimore'
SELECT `city_name` FROM `City` WHERE `state` = 'PA'
SELECT `city_name` FROM `City` WHERE `state` = 'PA'
SELECT count(*) FROM `City` WHERE `country` = 'Canada'
SELECT count(*) FROM `City` WHERE `country` = 'Canada'
SELECT `city_name` FROM `City` WHERE `country` = 'USA' ORDER BY `latitude`
SELECT T1.`city_name` FROM City AS T1 WHERE T1.`country` = 'USA' ORDER BY T1.`latitude`
SELECT `state`, count(*) FROM `City` GROUP BY `state`
SELECT state, COUNT(city_code) FROM `City` GROUP BY state
SELECT T1.country, count(*) FROM City AS T1 GROUP BY T1.country
SELECT country, COUNT(DISTINCT city_code) FROM City GROUP BY country
SELECT DISTINCT `state` FROM `City` GROUP BY `state` HAVING COUNT(*) >= 2
SELECT DISTINCT `state` FROM `City` GROUP BY `state` HAVING COUNT(*) >= 2
SELECT state FROM `City` GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1
SELECT state FROM `City` GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1
SELECT country FROM `City` GROUP BY country ORDER BY COUNT(*) ASC LIMIT 1
SELECT country FROM `City` GROUP BY country ORDER BY COUNT(*) ASC LIMIT 1
SELECT T1.`Fname`, T1.`LName` FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'MD'
SELECT T1.Fname, T1.LName FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'MD'
SELECT count(T1.StuID) FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.country = 'China'
SELECT count(T1.StuID) FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.country = 'China'
SELECT `Fname`, `Major` FROM `Student` WHERE `city_code` = 'BAL'
SELECT Fname, Major FROM `Student` WHERE city_code = 'BAL'
SELECT T2.country, count(*) FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code GROUP BY T2.country
SELECT T2.country, count(T1.StuID) FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code GROUP BY T2.country
SELECT `city_code`, COUNT(*) FROM `Student` GROUP BY `city_code`
SELECT `T1`.`city_name`, count(*) FROM `City` AS `T1` JOIN `Student` AS `T2` ON `T1`.`city_code` = `T2`.`city_code` GROUP BY `T1`.`city_code`
SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.state ORDER BY COUNT(T2.StuID) DESC LIMIT 1
SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.state ORDER BY COUNT(T2.StuID) DESC LIMIT 1
SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.country ORDER BY COUNT(T2.StuID) LIMIT 1
SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.country ORDER BY COUNT(T2.StuID) LIMIT 1
SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.city_code HAVING COUNT(*) >= 3
SELECT DISTINCT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.city_code HAVING COUNT(*) >= 3
SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.state HAVING count(*)  >  5
SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.state HAVING count(*)  >  5
SELECT `StuID` FROM `Student` WHERE `city_code` IN (SELECT `city_code` FROM `City` WHERE `country` != 'USA')
SELECT `StuID` FROM `Student` WHERE `city_code` NOT IN (SELECT `city_code` FROM `City` WHERE `country` = 'USA')
SELECT `StuID` FROM `Student` WHERE `Sex` = 'F' INTERSECT SELECT T1.StuID FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'PA'
SELECT T1.`StuID` FROM Student AS T1 INNER JOIN City AS T2 ON T1.`city_code` = T2.`city_code` WHERE T1.`Sex` = 'F' INTERSECT SELECT T1.`StuID` FROM Student AS T1 INNER JOIN City AS T2 ON T1.`city_code` = T2.`city_code` WHERE T2.`state` = 'PA'
SELECT `StuID` FROM `Student` AS T1 INNER JOIN `City` AS T2 ON T1.`city_code` = T2.`city_code` WHERE T1.`Sex` = 'M' AND T2.`country` != 'USA'
SELECT `StuID` FROM `Student` WHERE `Sex` = 'M' AND `city_code` NOT IN (SELECT `city_code` FROM `City` WHERE `country` = 'USA')
SELECT T1.distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city2_code = T2.city_code WHERE T1.city1_code = 'BAL' AND T2.city_code = 'CHI'
SELECT T1.distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city2_code = T2.city_code WHERE T1.city1_code = 'BAL' AND T2.city_name = 'Chicago'
SELECT T1.distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code JOIN City AS T3 ON T1.city2_code = T3.city_code WHERE T2.city_name = 'Boston' AND T3.city_name = 'Newark'
SELECT T1.distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code JOIN City AS T3 ON T1.city2_code = T3.city_code WHERE T2.city_name = 'Boston' AND T3.city_name = 'Newark'
SELECT AVG(distance), MIN(distance), MAX(distance) FROM `Direct_distance`
SELECT AVG(`distance`), MIN(`distance`), MAX(`distance`) FROM `Direct_distance`
SELECT city1_code, city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1
SELECT DISTINCT `city1_code`, `city2_code` FROM `Direct_distance` WHERE `distance` = (SELECT MAX(`distance`) FROM `Direct_distance`)
SELECT DISTINCT `city1_code`, `city2_code` FROM `Direct_distance` WHERE `distance` > (SELECT avg(`distance`) FROM `Direct_distance`)
SELECT DISTINCT `city2_code` FROM `Direct_distance` WHERE `distance` > (SELECT avg(`distance`) FROM `Direct_distance`)
SELECT DISTINCT `city1_code`, `city2_code` FROM `Direct_distance` WHERE `distance` < 1000
SELECT DISTINCT `city2_code` FROM `Direct_distance` WHERE `distance` < 1000
SELECT SUM(`distance`) FROM `Direct_distance` WHERE `city1_code` = 'BAL'
SELECT SUM(`distance`) FROM `Direct_distance` WHERE `city1_code` = 'BAL'
SELECT AVG(T1.distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city2_code = T2.city_code WHERE T1.city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston')
SELECT AVG(T1.distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city2_code = T2.city_code WHERE T1.city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston')
SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.city1_code = (SELECT city_code FROM City WHERE city_name = 'Chicago') ORDER BY T2.distance LIMIT 1
SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.city1_code = (SELECT city_code FROM City WHERE city_name = 'Chicago') ORDER BY T2.distance LIMIT 1
SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston') ORDER BY T2.distance DESC LIMIT 1
SELECT T2.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city2_code = T2.city_code WHERE T1.city1_code = 'BOS' ORDER BY T1.distance DESC LIMIT 1
SELECT `city1_code`, SUM(`distance`) FROM `Direct_distance` GROUP BY `city1_code`
SELECT `city1_code`, SUM(`distance`) FROM `Direct_distance` GROUP BY `city1_code`
SELECT T1.city_name, AVG(T2.distance) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code GROUP BY T1.city_code
SELECT T1.`city_name`, AVG(T2.`distance`) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.`city_code` = T2.`city1_code` GROUP BY T1.`city_name`
SELECT T1.distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code = T2.city_code JOIN Student AS T3 ON T1.city2_code = T3.city_code WHERE T2.Fname = 'Linda' AND T2.LName = 'Smith' AND T3.Fname = 'Tracy' AND T3.LName = 'Kim'
SELECT T1.distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code = T2.city_code JOIN Student AS T3 ON T1.city2_code = T3.city_code WHERE T2.Fname = 'Linda' AND T2.LName = 'Smith' AND T3.Fname = 'Tracy' AND T3.LName = 'Kim'
SELECT T1.`Fname`, T1.`LName` FROM Student AS T1 JOIN City AS T2 ON T1.`city_code` = T2.`city_code` JOIN ( SELECT T1.`city_code`, MAX(T3.`distance`) FROM Student AS T1 JOIN City AS T2 ON T1.`city_code` = T2.`city_code` JOIN Direct_distance AS T3 ON T2.`city_code` = T3.`city1_code` JOIN Student AS T4 ON T4.`Fname` = 'Linda' AND T4.`LName` = 'Smith' GROUP BY T1.`city_code` ) AS T5 ON T1.`city_code` = T5.`city_code`
SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code JOIN Direct_distance AS T3 ON T2.city_code = T3.city2_code JOIN Student AS T4 ON T4.Fname = 'Linda' AND T4.LName = 'Smith' JOIN City AS T5 ON T4.city_code = T5.city_code ORDER BY T3.distance DESC LIMIT 1
SELECT T2.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Fname = 'Linda'
SELECT T2.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Fname = 'Linda'
SELECT * FROM `Sailors` WHERE `age` > 30
SELECT * FROM `Sailors` WHERE `age` > 30
SELECT `name`, `age` FROM `Sailors` WHERE `age` < 30
SELECT `name`, `age` FROM `Sailors` WHERE `age` < 30
SELECT DISTINCT `Boats`.`name` FROM `Boats` JOIN `Reserves` ON `Boats`.`bid` = `Reserves`.`bid` WHERE `Reserves`.`sid` = 1
SELECT DISTINCT `bid` FROM `Reserves` WHERE `sid` = 1
SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T2.bid = 102
SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T2.bid = 102
SELECT DISTINCT `bid` FROM `Reserves`
SELECT DISTINCT `bid` FROM `Reserves`
SELECT `name` FROM `Sailors` WHERE `name` LIKE '%e%'
SELECT `name` FROM `Sailors` WHERE `name` LIKE '%e%'
SELECT DISTINCT `sid` FROM `Sailors` WHERE `age` > (SELECT MIN(`age`) FROM `Sailors`)
SELECT DISTINCT `sid` FROM `Sailors` WHERE `age` != (SELECT MIN(`age`) FROM `Sailors`)
SELECT DISTINCT `name` FROM `Sailors` WHERE `age` > (SELECT MAX(`age`) FROM `Sailors` WHERE `rating` > 7)
SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Sailors AS T2 ON T1.age > T2.age WHERE T2.rating > 7
SELECT T1.name, T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid GROUP BY T1.sid
SELECT DISTINCT `s`.`name`, `s`.`sid` FROM `Sailors` AS `s` JOIN `Reserves` AS `r` ON `s`.`sid` = `r`.`sid`
SELECT T1.`sid`, T1.`name` FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.`sid` = T2.`sid` GROUP BY T1.`sid` HAVING COUNT(T2.`bid`) > 1
SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid GROUP BY T1.sid HAVING COUNT(T2.bid) >= 2
SELECT DISTINCT `Reserves`.`sid` FROM `Reserves` JOIN `Boats` ON `Reserves`.`bid` = `Boats`.`bid` WHERE `Boats`.`color` = 'red' OR `Boats`.`color` = 'blue'
SELECT DISTINCT `sid` FROM `Reserves` WHERE `bid` IN (SELECT `bid` FROM `Boats` WHERE `color` = 'red') UNION SELECT DISTINCT `sid` FROM `Reserves` WHERE `bid` IN (SELECT `bid` FROM `Boats` WHERE `color` = 'blue')
SELECT T1.name, T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'red' UNION SELECT T1.name, T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'blue'
SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid = T2.sid INNER JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'red' UNION SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid = T2.sid INNER JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'blue'
SELECT `sid` FROM `Reserves` AS T1 JOIN `Boats` AS T2 ON T1.`bid` = T2.`bid` WHERE T2.`color` = 'red' INTERSECT SELECT `sid` FROM `Reserves` AS T1 JOIN `Boats` AS T2 ON T1.`bid` = T2.`bid` WHERE T2.`color` = 'blue'
SELECT `sid` FROM `Reserves` WHERE `bid` IN (SELECT `bid` FROM `Boats` WHERE `color` = 'red') INTERSECT SELECT `sid` FROM `Reserves` WHERE `bid` IN (SELECT `bid` FROM `Boats` WHERE `color` = 'blue')
SELECT T1.name, T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'red' INTERSECT SELECT T1.name, T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'blue'
SELECT T1.name, T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'red' INTERSECT SELECT T1.name, T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'blue'
SELECT `sid` FROM `Sailors` EXCEPT SELECT `sid` FROM `Reserves`
SELECT `sid` FROM `Sailors` EXCEPT SELECT `sid` FROM `Reserves`
SELECT `name`, `sid` FROM `Sailors` WHERE NOT EXISTS (SELECT 1 FROM `Reserves` WHERE `Sailors`.`sid` = `Reserves`.`sid`);
SELECT `name`, `sid` FROM `Sailors` WHERE `sid` NOT IN (SELECT `sid` FROM `Reserves`)
SELECT `sid` FROM `Sailors` EXCEPT SELECT `sid` FROM `Reserves`
SELECT `sid` FROM `Sailors` EXCEPT SELECT `sid` FROM `Reserves`
SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T2.bid = 103
SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T2.bid = 103
SELECT name FROM `Sailors` WHERE rating > (SELECT rating FROM `Sailors` WHERE name = 'Luis')
SELECT name FROM `Sailors` WHERE rating > (SELECT MAX(rating) FROM `Sailors` WHERE name = 'Luis')
SELECT name FROM Sailors WHERE rating > (SELECT MAX(rating) FROM Sailors WHERE name = 'Luis')
SELECT name FROM `Sailors` WHERE rating > (SELECT MAX(rating) FROM `Sailors` WHERE name = 'Luis')
SELECT T1.name, T1.sid FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T1.rating > 2
SELECT T1.name, T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T1.rating >= 3
SELECT `name`, `age` FROM `Sailors` ORDER BY `age` DESC LIMIT 1
SELECT name, age FROM `Sailors` ORDER BY age DESC LIMIT 1
SELECT COUNT(*) FROM `Sailors`
SELECT COUNT(*) FROM `Sailors`
SELECT avg(`age`) FROM `Sailors` WHERE `rating` = 7
SELECT avg(`age`) FROM `Sailors` WHERE `rating` = 7
SELECT count(*) FROM `Sailors` WHERE `name` LIKE 'D%'
SELECT count(*) FROM `Sailors` WHERE `name` LIKE 'D%'
SELECT AVG(`rating`), MAX(`age`) FROM `Sailors`
SELECT AVG(`rating`), MAX(`age`) FROM `Sailors`
SELECT `bid`, COUNT(*) FROM `Reserves` GROUP BY `bid`
SELECT `bid`, COUNT(*) FROM `Reserves` GROUP BY `bid`
SELECT `bid`, COUNT(*) FROM `Reserves` WHERE `bid` > 50 GROUP BY `bid`
SELECT `bid`, COUNT(*) FROM `Reserves` GROUP BY `bid`
SELECT `bid`, COUNT(*) FROM `Reserves` GROUP BY `bid` HAVING COUNT(*) > 1
SELECT `bid`, COUNT(*) FROM `Reserves` GROUP BY `bid` HAVING COUNT(*) > 1
SELECT `bid`, COUNT(*) FROM `Reserves` WHERE `sid` > 1 GROUP BY `bid`
SELECT `bid`, COUNT(*) FROM `Reserves` WHERE `sid` > 1 GROUP BY `bid`
SELECT T1.rating, AVG(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'red' GROUP BY T1.rating
SELECT T1.rating, AVG(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'red' GROUP BY T1.rating
SELECT `name`, `rating`, `age` FROM `Sailors` ORDER BY `rating`, `age`
SELECT `name`, `rating`, `age` FROM `Sailors` ORDER BY `rating`, `age`
SELECT COUNT(*) FROM `Boats`
SELECT COUNT(*) FROM `Boats`
SELECT count(*) FROM `Boats` WHERE `color` = 'red'
SELECT count(*) FROM `Boats` WHERE `color` = 'red'
SELECT DISTINCT T2.name FROM Sailors AS T1 JOIN Reserves AS T3 ON T1.sid = T3.sid JOIN Boats AS T2 ON T3.bid = T2.bid WHERE T1.age BETWEEN 20 AND 30
SELECT DISTINCT T2.name FROM Sailors AS T1 JOIN Reserves AS T3 ON T1.sid = T3.sid JOIN Boats AS T2 ON T3.bid = T2.bid WHERE T1.age BETWEEN 20 AND 30
SELECT name FROM `Sailors` WHERE rating > (SELECT MAX(T1.rating) FROM `Sailors` AS T1 INNER JOIN `Reserves` AS T2 ON T1.sid = T2.sid INNER JOIN `Boats` AS T3 ON T2.bid = T3.bid WHERE T3.color = 'red')
SELECT name FROM Sailors WHERE rating > (SELECT MAX(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.color = 'red')
SELECT MAX(`rating`) FROM `Sailors`
SELECT MAX(`rating`) FROM `Sailors`
SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.name = 'Melon'
SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T2.bid = T3.bid WHERE T3.name = 'Melon'
SELECT `name`, `age` FROM `Sailors` ORDER BY `rating` DESC
SELECT `name`, `age` FROM `Sailors` ORDER BY `rating` DESC
SELECT `Model` FROM `headphone` ORDER BY `Price` DESC LIMIT 1
SELECT Model FROM `headphone` ORDER BY Price DESC LIMIT 1
SELECT DISTINCT `Model` FROM `headphone` ORDER BY `Model`
SELECT DISTINCT `Model` FROM `headphone` ORDER BY `Model`
SELECT Class FROM headphone GROUP BY Class ORDER BY COUNT(*) DESC LIMIT 1
SELECT Class FROM headphone GROUP BY Class ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT T1.Class FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Class HAVING COUNT(*)  >  2
SELECT DISTINCT `Class` FROM `headphone` EXCEPT SELECT T1.`Class` FROM `headphone` AS T1 JOIN `stock` AS T2 ON T1.`Headphone_ID` = T2.`Headphone_ID` GROUP BY T1.`Class` HAVING COUNT(T1.`Headphone_ID`) > 2
SELECT Class, COUNT(Headphone_ID) FROM headphone WHERE Price > 200 GROUP BY Class
SELECT Class, COUNT(*) FROM headphone WHERE Price > 200 GROUP BY Class
SELECT count(DISTINCT `Earpads`) FROM `headphone`
SELECT count(DISTINCT `Earpads`) FROM `headphone`
SELECT Earpads FROM `headphone` GROUP BY Earpads ORDER BY COUNT(*) DESC LIMIT 2
SELECT Earpads, COUNT(*) FROM headphone GROUP BY Earpads ORDER BY COUNT(*) DESC LIMIT 2
SELECT `Model`, `Class`, `Construction` FROM `headphone` ORDER BY `Price` ASC LIMIT 1
SELECT `Model`, `Class`, `Construction` FROM `headphone` ORDER BY `Price` ASC LIMIT 1
SELECT `Construction`, avg(`Price`) FROM `headphone` GROUP BY `Construction`
SELECT `Construction`, AVG(`Price`) FROM `headphone` GROUP BY `Construction`
SELECT `Class` FROM `headphone` WHERE `Earpads` = 'Comfort Pads' INTERSECT SELECT `Class` FROM `headphone` WHERE `Earpads` = 'Bowls'
SELECT `Class` FROM `headphone` WHERE `Earpads` = 'Bowls' INTERSECT SELECT `Class` FROM `headphone` WHERE `Earpads` = 'Comfort Pads'
SELECT DISTINCT `Earpads` FROM `headphone` WHERE `Construction` != 'Plastic'
SELECT Earpads FROM headphone WHERE Construction NOT LIKE 'Plastic'
SELECT Model FROM headphone WHERE Price < (SELECT avg(Price) FROM headphone)
SELECT Model FROM `headphone` WHERE Price < (SELECT AVG(Price) FROM `headphone`)
SELECT `Name` FROM `store` ORDER BY `Date_Opened`
SELECT `Name` FROM `store` ORDER BY `Date_Opened`
SELECT `Name`, `Parking` FROM `store` WHERE `Neighborhood` = 'Tarzana'
SELECT `Name`, `Parking` FROM `store` WHERE `Neighborhood` = 'Tarzana'
SELECT count(DISTINCT `Neighborhood`) FROM `store`
SELECT count(DISTINCT `Neighborhood`) FROM `store`
SELECT Neighborhood, count(Store_ID) FROM store GROUP BY Neighborhood
SELECT Neighborhood, COUNT(DISTINCT Store_ID) FROM store GROUP BY Neighborhood
SELECT T1.Name, SUM(T3.Quantity) FROM store AS T1 JOIN stock AS T3 ON T1.Store_ID = T3.Store_ID GROUP BY T1.Store_ID ORDER BY SUM(T3.Quantity) DESC LIMIT 1
SELECT T1.Name, SUM(T3.Quantity) FROM store AS T1 JOIN stock AS T3 ON T1.Store_ID = T3.Store_ID GROUP BY T1.Store_ID
SELECT T1.`Name` FROM store AS T1 WHERE T1.`Store_ID` NOT IN (SELECT T2.`Store_ID` FROM stock AS T2)
SELECT T1.Name FROM store AS T1 LEFT JOIN stock AS T2 ON T1.Store_ID = T2.Store_ID WHERE T2.Store_ID IS NULL
SELECT `Model` FROM `headphone` EXCEPT SELECT T1.`Model` FROM `headphone` AS T1 JOIN `stock` AS T2 ON T1.`Headphone_ID` = T2.`Headphone_ID`
SELECT `Model` FROM `headphone` WHERE `Headphone_ID` NOT IN (SELECT `Headphone_ID` FROM `stock`)
SELECT T1.Model FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Headphone_ID ORDER BY sum(T2.Quantity) DESC LIMIT 1
SELECT T1.Model FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Headphone_ID ORDER BY sum(T2.Quantity) DESC LIMIT 1
SELECT sum(`Quantity`) FROM `stock` AS t1 JOIN `store` AS t2 ON t1.`Store_ID` = t2.`Store_ID` WHERE t2.`Name` = 'Woodman'
SELECT sum(`Quantity`) FROM `stock` AS T1 JOIN `store` AS T2 ON T1.`Store_ID` = T2.`Store_ID` WHERE T2.`Name` = 'Woodman'
SELECT T1.Neighborhood FROM store AS T1 EXCEPT SELECT T2.Neighborhood FROM store AS T2 JOIN stock AS T3 ON T2.Store_ID = T3.Store_ID
SELECT T1.`Neighborhood` FROM `store` AS T1 EXCEPT SELECT T1.`Neighborhood` FROM `store` AS T1 INNER JOIN `stock` AS T2 ON T1.`Store_ID` = T2.`Store_ID`
SELECT count(DISTINCT `author_id`) FROM `Author`
SELECT COUNT(author_id) FROM `Author`
SELECT COUNT(*) FROM `Paper`
SELECT COUNT(*) FROM `Paper`
SELECT COUNT(*) FROM `Affiliation`
SELECT COUNT(*) FROM `Affiliation`
SELECT count(*) FROM `Paper` WHERE `venue` = 'NAACL' AND `year` = 2000
SELECT count(*) FROM `Paper` WHERE `venue` = 'NAACL' AND `year` = 2000
SELECT COUNT(T1.`paper_id`) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN Affiliation AS T3 ON T2.`affiliation_id` = T3.`affiliation_id` WHERE T1.`year` = 2009 AND T3.`name` = 'Columbia University'
SELECT COUNT(T1.`paper_id`) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN Affiliation AS T3 ON T2.`affiliation_id` = T3.`affiliation_id` WHERE T3.`name` = 'Columbia University' AND T1.`year` = 2009
SELECT `name`, `address` FROM `Affiliation`
SELECT `name`, `address` FROM `Affiliation`
SELECT `venue`, `year` FROM `Paper` ORDER BY `year`
SELECT DISTINCT `venue` FROM `Paper` ORDER BY `year`
SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Harvard University'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` INNER JOIN `Affiliation` AS T3 ON T2.`affiliation_id` = T3.`affiliation_id` WHERE T3.`name` LIKE 'Harvard University'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Mckeown'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Mckeown'
SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Stanford University' INTERSECT SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Columbia University'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` INNER JOIN `Affiliation` AS T3 ON T2.`affiliation_id` = T3.`affiliation_id` WHERE T3.`name` = 'Stanford' INTERSECT SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` INNER JOIN `Affiliation` AS T3 ON T2.`affiliation_id` = T3.`affiliation_id` WHERE T3.`name` = 'Columbia University'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Mckeown, Kathleen' INTERSECT SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Rambow, Owen'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Mckeown, Kathleen' INTERSECT SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Rambow, Owen'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` INNER JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Mckeown' EXCEPT SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` INNER JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Rambow'
SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` INNER JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Mckeown' EXCEPT SELECT T1.`title`, T1.`paper_id` FROM `Paper` AS T1 INNER JOIN `Author_list` AS T2 ON T1.`paper_id` = T2.`paper_id` INNER JOIN `Author` AS T3 ON T2.`author_id` = T3.`author_id` WHERE T3.`name` = 'Rambow'
SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.name = 'Mckeown, Kathleen' OR T3.name = 'Rambow, Owen'
SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.name = 'Mckeown, Kathleen' OR T3.name = 'Rambow, Owen'
SELECT T1.name, COUNT(T2.paper_id) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id ORDER BY COUNT(T2.paper_id) DESC
SELECT T1.name, COUNT(T2.paper_id) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id ORDER BY COUNT(T2.paper_id) DESC
SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY COUNT(T2.paper_id) ASC
SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY COUNT(T2.paper_id) DESC
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id HAVING COUNT(T2.paper_id) > 50
SELECT DISTINCT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id HAVING COUNT(T2.paper_id) > 50
SELECT DISTINCT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id HAVING COUNT(T2.paper_id) = 1
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id GROUP BY T1.author_id HAVING COUNT(T2.paper_id) = 1
SELECT `venue`, `year`, COUNT(*) FROM `Paper` GROUP BY `venue`, `year` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `venue`, `year`, COUNT(*) FROM `Paper` GROUP BY `venue`, `year` ORDER BY COUNT(*) DESC LIMIT 1
SELECT venue FROM `Paper` GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1
SELECT venue FROM `Paper` GROUP BY venue ORDER BY COUNT(paper_id) ASC LIMIT 1
SELECT count(*) FROM `Citation` WHERE `cited_paper_id` = 'A00-1002'
SELECT count(T1.`paper_id`) FROM Citation AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T1.cited_paper_id = 'A00-1002'
SELECT COUNT(T1.cited_paper_id) FROM Citation AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T2.paper_id = 'D12-1027'
SELECT COUNT(T1.`cited_paper_id`) FROM Citation AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T2.paper_id = 'D12-1027'
SELECT `paper_id`, COUNT(*) FROM Citation GROUP BY `paper_id` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `paper_id`, COUNT(*) FROM Citation GROUP BY `paper_id` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.title FROM Paper AS T1 JOIN Citation AS T2 ON T1.paper_id = T2.paper_id GROUP BY T1.paper_id ORDER BY COUNT(T2.cited_paper_id) DESC LIMIT 1
SELECT T1.title FROM Paper AS T1 JOIN Citation AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.paper_id ORDER BY COUNT(T2.cited_paper_id) DESC LIMIT 1
SELECT `P`.`title`, COUNT(`C`.`cited_paper_id`) FROM `Paper` AS `P` JOIN `Citation` AS `C` ON `P`.`paper_id` = `C`.`paper_id` GROUP BY `P`.`paper_id` ORDER BY COUNT(`C`.`cited_paper_id`) DESC LIMIT 10
SELECT `cited_paper_id`, COUNT(*) FROM Citation GROUP BY `cited_paper_id` ORDER BY COUNT(*) DESC LIMIT 10
SELECT count(T1.paper_id) FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id = T2.paper_id JOIN Author_list AS T3 ON T2.paper_id = T3.paper_id JOIN Author AS T4 ON T3.author_id = T4.author_id WHERE T4.name = 'Mckeown , Kathleen'
SELECT COUNT(T1.paper_id) FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id = T2.paper_id JOIN Author_list AS T3 ON T2.paper_id = T3.paper_id JOIN Author AS T4 ON T3.author_id = T4.author_id WHERE T4.name = 'Mckeown, Kathleen'
SELECT count(T1.cited_paper_id) FROM Citation AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id JOIN Author_list AS T3 ON T2.paper_id = T3.paper_id JOIN Author AS T4 ON T3.author_id = T4.author_id WHERE T4.name = 'Mckeown , Kathleen'
SELECT count(T1.paper_id) FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id = T2.paper_id JOIN Author_list AS T3 ON T2.paper_id = T3.paper_id JOIN Author AS T4 ON T3.author_id = T4.author_id WHERE T4.name = 'Mckeown , Kathleen'
SELECT T1.name, COUNT(T3.cited_paper_id) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Citation AS T3 ON T2.paper_id = T3.paper_id GROUP BY T1.author_id ORDER BY COUNT(T3.cited_paper_id) DESC LIMIT 1
SELECT T1.name, COUNT(T3.cited_paper_id) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Citation AS T3 ON T2.paper_id = T3.paper_id GROUP BY T1.author_id ORDER BY COUNT(T3.cited_paper_id) DESC LIMIT 1
SELECT DISTINCT `T1`.`venue`, `T1`.`year` FROM `Paper` AS `T1` JOIN `Author_list` AS `T2` ON `T1`.`paper_id` = `T2`.`paper_id` JOIN `Author` AS `T3` ON `T2`.`author_id` = `T3`.`author_id` WHERE `T3`.`name` = 'Mckeown, Kathleen'
SELECT DISTINCT `T1`.`venue`, `T1`.`year` FROM `Paper` AS `T1` JOIN `Author_list` AS `T2` ON `T1`.`paper_id` = `T2`.`paper_id` JOIN `Author` AS `T3` ON `T2`.`author_id` = `T3`.`author_id` WHERE `T3`.`name` = 'Mckeown, Kathleen'
SELECT DISTINCT `T1`.`venue`, `T1`.`year` FROM `Paper` AS `T1` JOIN `Author_list` AS `T2` ON `T1`.`paper_id` = `T2`.`paper_id` JOIN `Affiliation` AS `T3` ON `T2`.`affiliation_id` = `T3`.`affiliation_id` WHERE `T3`.`name` = 'Columbia University'
SELECT DISTINCT T1.venue, T1.year FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Columbia University'
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.year = 2009 GROUP BY T1.author_id ORDER BY COUNT(T2.paper_id) DESC LIMIT 1
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.year = 2009 GROUP BY T1.author_id ORDER BY COUNT(T2.paper_id) DESC LIMIT 1
SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.year = 2009 GROUP BY T1.affiliation_id ORDER BY COUNT(T2.paper_id) DESC LIMIT 3
SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.year = 2009 GROUP BY T1.affiliation_id ORDER BY COUNT(T2.paper_id) DESC LIMIT 3
SELECT COUNT(T1.`paper_id`) FROM Paper AS T1 INNER JOIN Author_list AS T2 ON T1.`paper_id` = T2.`paper_id` INNER JOIN Affiliation AS T3 ON T2.`affiliation_id` = T3.`affiliation_id` WHERE T3.`name` = 'Columbia University' AND T1.`year` <= 2009
SELECT count(DISTINCT `T1`.`paper_id`) FROM `Author_list` AS `T1` JOIN `Affiliation` AS `T2` ON `T1`.`affiliation_id` = `T2`.`affiliation_id` JOIN `Paper` AS `T3` ON `T1`.`paper_id` = `T3`.`paper_id` WHERE `T2`.`name` = 'Columbia University' AND `T3`.`year` <= 2009
SELECT COUNT(T1.`paper_id`) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.`paper_id` = T2.`paper_id` JOIN Affiliation AS T3 ON T2.`affiliation_id` = T3.`affiliation_id` WHERE T3.`name` = 'Stanford University' AND T1.`year` BETWEEN 2000 AND 2009
SELECT COUNT(DISTINCT `T1`.`paper_id`) FROM `Author_list` AS `T1` JOIN `Affiliation` AS `T2` ON `T1`.`affiliation_id` = `T2`.`affiliation_id` JOIN `Paper` AS `T3` ON `T1`.`paper_id` = `T3`.`paper_id` WHERE `T2`.`name` = 'Stanford University' AND `T3`.`year` BETWEEN 2000 AND 2009
SELECT T1.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id GROUP BY T1.paper_id ORDER BY COUNT(T2.author_id) DESC LIMIT 1
SELECT T1.title FROM Paper AS T1 INNER JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id GROUP BY T1.paper_id ORDER BY COUNT(T2.author_id) DESC LIMIT 1
SELECT count(T1.author_id) FROM Author_list AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id WHERE T2.name = 'Mckeown, Kathleen'
SELECT count(T2.author_id) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id WHERE T1.name = 'Mckeown, Kathleen'
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.paper_id IN (SELECT T4.paper_id FROM Author AS T5 JOIN Author_list AS T4 ON T5.author_id = T4.author_id WHERE T5.name = 'Mckeown, Kathleen') GROUP BY T1.author_id ORDER BY COUNT(T3.paper_id) DESC LIMIT 1
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id JOIN Author_list AS T4 ON T3.paper_id = T4.paper_id JOIN Author AS T5 ON T4.author_id = T5.author_id WHERE T5.name = 'Mckeown, Kathleen' AND T1.author_id != T5.author_id GROUP BY T1.author_id ORDER BY COUNT(T3.paper_id) DESC LIMIT 1
SELECT `paper_id` FROM `Paper` WHERE `title` LIKE '%translation%'
SELECT `paper_id` FROM `Paper` WHERE `title` LIKE '%translation%'
SELECT `paper_id`, `title` FROM `Paper` WHERE `paper_id` NOT IN (SELECT `cited_paper_id` FROM `Citation`)
SELECT T1.`paper_id`, T1.`title` FROM `Paper` AS T1 LEFT JOIN `Citation` AS T2 ON T1.`paper_id` = T2.`cited_paper_id` WHERE T2.`cited_paper_id` IS NULL
SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id WHERE T1.address LIKE '%China%' GROUP BY T1.affiliation_id ORDER BY COUNT(T2.paper_id) DESC LIMIT 1
SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id WHERE T1.address LIKE '%China%' GROUP BY T1.affiliation_id ORDER BY COUNT(T2.paper_id) DESC LIMIT 1
SELECT `year`, `venue`, COUNT(DISTINCT `paper_id`) FROM `Paper` GROUP BY `year`, `venue`
SELECT `venue`, `year`, COUNT(DISTINCT `paper_id`) FROM `Paper` GROUP BY `venue`, `year`
SELECT T1.name, COUNT(T3.paper_id) FROM Affiliation AS T1 JOIN Author_list AS T3 ON T1.affiliation_id = T3.affiliation_id GROUP BY T1.affiliation_id
SELECT T2.name, count(T1.paper_id) FROM Author_list AS T1 JOIN Affiliation AS T2 ON T1.affiliation_id = T2.affiliation_id GROUP BY T1.affiliation_id
SELECT DISTINCT `T1`.`title` FROM `Paper` AS `T1` JOIN `Citation` AS `T2` ON `T1`.`paper_id` = `T2`.`paper_id` GROUP BY `T1`.`paper_id` HAVING COUNT(*)  >  50
SELECT DISTINCT `T1`.`title` FROM `Paper` AS `T1` JOIN `Citation` AS `T2` ON `T1`.`paper_id` = `T2`.`paper_id` GROUP BY `T2`.`paper_id` HAVING COUNT(*)  >  50
SELECT COUNT(DISTINCT T1.author_id) FROM Author_list AS T1 INNER JOIN Citation AS T2 ON T1.paper_id = T2.paper_id INNER JOIN Paper AS T3 ON T2.cited_paper_id = T3.paper_id GROUP BY T1.author_id HAVING COUNT(T2.paper_id) > 50
SELECT COUNT(DISTINCT T1.author_id) FROM Author_list AS T1 INNER JOIN Citation AS T2 ON T1.paper_id = T2.paper_id INNER JOIN Paper AS T3 ON T2.paper_id = T3.paper_id GROUP BY T1.author_id HAVING COUNT(T2.paper_id) <= 50
SELECT T1.name FROM Author AS T1 INNER JOIN Author_list AS T2 ON T1.author_id = T2.author_id INNER JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.venue = 'NAACL' AND T3.year = 2009 INTERSECT SELECT T1.name FROM Author AS T1 INNER JOIN Author_list AS T2 ON T1.author_id = T2.author_id INNER JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.venue = 'ACL' AND T3.year = 2009
SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.venue = 'NAACL' AND T3.year = 2009 INTERSECT SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.venue = 'ACL' AND T3.year = 2009
SELECT T1.name FROM Author AS T1 WHERE T1.author_id NOT IN (SELECT T2.author_id FROM Author_list AS T2 JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.venue = 'ACL')
SELECT T1.name FROM Author AS T1 WHERE NOT EXISTS (SELECT 1 FROM Author_list AS T2 JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T1.author_id = T2.author_id AND T3.venue = 'ACL')
SELECT COUNT(*) FROM `conference`
SELECT COUNT(*) FROM `conference`
SELECT DISTINCT `Conference_Name` FROM `conference`
SELECT DISTINCT `Conference_Name` FROM `conference`
SELECT `Conference_Name`, `Year`, `Location` FROM `conference`
SELECT `Conference_Name`, `Year`, `Location` FROM `conference`
SELECT `Conference_Name`, COUNT(*) FROM `conference` GROUP BY `Conference_Name`
SELECT `Conference_Name`, COUNT(*) FROM `conference` GROUP BY `Conference_Name`
SELECT `Year`, COUNT(*) FROM `conference` GROUP BY `Year`
SELECT COUNT(DISTINCT `Year`) FROM `conference`
SELECT Year FROM conference GROUP BY Year ORDER BY count(*) ASC LIMIT 1
SELECT Year FROM conference GROUP BY Year ORDER BY COUNT(*) ASC LIMIT 1
SELECT DISTINCT `Location` FROM `conference` GROUP BY `Location` HAVING COUNT(*) >= 2
SELECT DISTINCT `Location` FROM `conference` GROUP BY `Location` HAVING COUNT(*) >= 2
SELECT `Institution_Name`, `Location`, `Founded` FROM `institution`
SELECT `Institution_Name`, `Location`, `Founded` FROM `institution`
SELECT count(*) FROM `institution` WHERE `Founded` BETWEEN 1850 AND 1900
SELECT count(*) FROM `institution` WHERE `Founded` BETWEEN 1850 AND 1900
SELECT `Institution_Name`, `Location` FROM `institution` ORDER BY `Founded` DESC LIMIT 1
SELECT `Institution_Name`, `Location` FROM `institution` ORDER BY `Founded` DESC LIMIT 1
SELECT T2.`Institution_Name`, count(*) FROM staff AS T1 JOIN institution AS T2 ON T1.`Institution_ID` = T2.`Institution_ID` WHERE T2.`Founded` > 1800 GROUP BY T2.`Institution_ID`
SELECT `i`.`Institution_ID`, COUNT(`s`.`staff_ID`) FROM `institution` AS `i` JOIN `staff` AS `s` ON `i`.`Institution_ID` = `s`.`Institution_ID` WHERE `i`.`Founded` > 1800 GROUP BY `i`.`Institution_ID`
SELECT `Institution_Name` FROM `institution` EXCEPT SELECT T2.`Institution_Name` FROM `staff` AS T1 JOIN `institution` AS T2 ON T1.`Institution_ID` = T2.`Institution_ID`
SELECT `Institution_Name` FROM `institution` EXCEPT SELECT T2.`Institution_Name` FROM `staff` AS T1 JOIN `institution` AS T2 ON T1.`Institution_ID` = T2.`Institution_ID`
SELECT `name` FROM `staff` WHERE `Age` > (SELECT AVG(`Age`) FROM `staff`)
SELECT DISTINCT `name` FROM `staff` WHERE `Age` > (SELECT AVG(`Age`) FROM `staff`)
SELECT max(`Age`), min(`Age`) FROM `staff` WHERE `Nationality` = 'United States'
SELECT MAX(`Age`), MIN(`Age`) FROM `staff`
SELECT DISTINCT T1.`Conference_Name` FROM conference AS T1 JOIN conference_participation AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` JOIN staff AS T3 ON T2.`staff_ID` = T3.`staff_ID` WHERE T3.`Nationality` = 'Canada'
SELECT T1.`Conference_Name` FROM conference AS T1 JOIN conference_participation AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` JOIN staff AS T3 ON T2.`staff_ID` = T3.`staff_ID` WHERE T3.`Nationality` = 'Canada'
SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID WHERE T2.role = 'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID WHERE T2.role = 'Sponsor'
SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID WHERE T2.role = 'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID WHERE T2.role = 'Sponsor'
SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Conference_Name = 'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Conference_Name = 'Naccl'
SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Conference_Name = 'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Conference_Name = 'Naccl'
SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Year = 2003 UNION SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Year = 2004
SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Year IN (2003, 2004)
SELECT T1.`Conference_Name`, T1.`Year`, COUNT(T2.`staff_ID`) FROM conference AS T1 JOIN conference_participation AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` GROUP BY T1.`Conference_ID`
SELECT T1.`Conference_ID`, T1.`Conference_Name`, T1.`Year`, COUNT(T2.`staff_ID`) FROM conference AS T1 JOIN conference_participation AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` GROUP BY T1.`Conference_ID`
SELECT T1.`Conference_Name` FROM conference AS T1 JOIN conference_participation AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` GROUP BY T1.`Conference_ID` ORDER BY COUNT(T2.`staff_ID`) DESC LIMIT 2
SELECT T1.`Conference_Name` FROM conference AS T1 JOIN conference_participation AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` GROUP BY T1.`Conference_ID` ORDER BY COUNT(T2.`staff_ID`) DESC LIMIT 2
SELECT name, Nationality FROM staff WHERE staff_ID NOT IN (SELECT T1.staff_ID FROM conference_participation AS T1 JOIN conference AS T2 ON T1.Conference_ID = T2.Conference_ID WHERE T2.Conference_Name = 'ACL')
SELECT T1.name, T1.Nationality FROM staff AS T1 LEFT JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID LEFT JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Conference_Name != 'ACL' OR T3.Conference_Name IS NULL GROUP BY T1.staff_ID
SELECT T1.`Institution_Name`, T1.`Location` FROM institution AS T1 WHERE NOT EXISTS (SELECT 1 FROM staff AS T2 JOIN conference_participation AS T3 ON T2.`staff_ID` = T3.`staff_ID` JOIN conference AS T4 ON T3.`Conference_ID` = T4.`Conference_ID` WHERE T1.`Institution_ID` = T2.`Institution_ID` AND T4.`Year` = 2004)
SELECT DISTINCT `Institution_Name`, `Location` FROM `institution` WHERE NOT EXISTS (SELECT 1 FROM `staff` JOIN `conference_participation` ON `staff`.`staff_ID` = `conference_participation`.`staff_ID` JOIN `conference` ON `conference_participation`.`Conference_ID` = `conference`.`Conference_ID` WHERE `staff`.`Institution_ID` = `institution`.`Institution_ID` AND `conference`.`Year` = 2004)
SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1
SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1
SELECT pilot_name FROM PilotSkills WHERE age < (SELECT avg(age) FROM PilotSkills) ORDER BY age
SELECT pilot_name FROM PilotSkills WHERE age < (SELECT avg(age) FROM PilotSkills) ORDER BY age
SELECT * FROM PilotSkills WHERE age < 30
SELECT * FROM PilotSkills WHERE age < 30
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age < 35
SELECT pilot_name FROM PilotSkills WHERE age < 35 AND plane_name = 'Piper Cub'
SELECT T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.plane_name = 'F-14 Fighter'
SELECT T2.`location` FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.`plane_name` = T2.`plane_name` WHERE T1.`plane_name` = 'F-14 Fighter'
SELECT COUNT(DISTINCT `location`) FROM `Hangar`
SELECT count(DISTINCT `location`) FROM `Hangar`
SELECT T1.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'Jones' AND T1.age = 32
SELECT T1.`plane_name` FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.`plane_name` = T2.`plane_name` WHERE T1.`pilot_name` = 'Jones' AND T1.`age` = 32
SELECT count(*) FROM PilotSkills WHERE age > 40
SELECT COUNT(pilot_name) FROM PilotSkills WHERE age > 40
SELECT count(T1.pilot_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.plane_name = 'B-52 Bomber' AND T1.age < 35
SELECT count(T1.plane_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age < 35 AND T1.plane_name = 'B-52 Bomber'
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age LIMIT 1
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age LIMIT 1
SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT plane_name FROM PilotSkills INTERSECT SELECT plane_name FROM Hangar
SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT count(T1.pilot_name) FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Chicago'
SELECT count(T1.pilot_name) FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Chicago'
SELECT T1.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'Smith' AND T1.age = 41
SELECT T1.`plane_name` FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.`plane_name` = T2.`plane_name` WHERE T1.`pilot_name` = 'Smith' AND T1.`age` = 41
SELECT COUNT(DISTINCT `plane_name`) FROM PilotSkills
SELECT count(DISTINCT `plane_name`) FROM PilotSkills
SELECT count(T1.plane_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'Smith'
SELECT count(T1.plane_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'Smith'
SELECT count(DISTINCT T1.plane_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > 40
SELECT COUNT(DISTINCT T1.plane_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > 40
SELECT `pilot_name` FROM `PilotSkills` WHERE `age` BETWEEN 30 AND 40 ORDER BY `age` ASC
SELECT `pilot_name` FROM `PilotSkills` WHERE `age` BETWEEN 30 AND 40 ORDER BY `age` ASC
SELECT `pilot_name` FROM `PilotSkills` ORDER BY `age` DESC
SELECT `pilot_name` FROM `PilotSkills` ORDER BY `age` DESC
SELECT T1.`location` FROM Hangar AS T1 ORDER BY T1.`plane_name`
SELECT T1.`location` FROM Hangar AS T1 ORDER BY T1.`plane_name`
SELECT DISTINCT `plane_name` FROM `PilotSkills` ORDER BY `plane_name`
SELECT DISTINCT `plane_name` FROM `Hangar` ORDER BY `plane_name`
SELECT count(*) FROM PilotSkills WHERE age > 40 OR age < 30
SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30
SELECT pilot_name, age FROM PilotSkills WHERE (plane_name = 'Piper Cub' AND age > 35) OR (plane_name = 'F-14 Fighter' AND age < 30)
SELECT pilot_name, age FROM PilotSkills WHERE (plane_name = 'Piper Cub' AND age > 35) OR (plane_name = 'F-14 Fighter' AND age < 30)
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' EXCEPT SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber'
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' EXCEPT SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber'
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' INTERSECT SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber'
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' INTERSECT SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber'
SELECT AVG(age), MIN(age) FROM PilotSkills
SELECT AVG(age), MIN(age) FROM PilotSkills
SELECT T1.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Austin' INTERSECT SELECT T1.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Boston'
SELECT T1.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Austin' INTERSECT SELECT T1.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Boston'
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' OR plane_name = 'F-14 Fighter'
SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' OR plane_name = 'F-14 Fighter'
SELECT AVG(T1.age), T1.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.plane_name
SELECT plane_name, AVG(age) FROM PilotSkills GROUP BY plane_name
SELECT `plane_name`, COUNT(*) FROM `Hangar` GROUP BY `plane_name`
SELECT `plane_name`, COUNT(*) FROM PilotSkills GROUP BY `plane_name`
SELECT pilot_name, plane_name FROM PilotSkills ORDER BY plane_name, age DESC
SELECT DISTINCT T1.plane_name, T1.pilot_name FROM PilotSkills AS T1 JOIN (SELECT plane_name, MAX(age) AS max_age FROM PilotSkills GROUP BY plane_name) AS T2 ON T1.plane_name = T2.plane_name AND T1.age = T2.max_age ORDER BY T1.plane_name
SELECT DISTINCT T1.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age DESC
SELECT DISTINCT T1.plane_name, T1.pilot_name FROM PilotSkills AS T1 JOIN (SELECT plane_name, MAX(age) AS max_age FROM PilotSkills GROUP BY plane_name) AS T2 ON T1.plane_name = T2.plane_name AND T1.age = T2.max_age
SELECT pilot_name, MAX(age) FROM PilotSkills GROUP BY pilot_name
SELECT DISTINCT `pilot_name`, MAX(age) FROM PilotSkills GROUP BY `pilot_name`
SELECT H.`location`, COUNT(T1.`pilot_name`), AVG(T1.`age`) FROM PilotSkills AS T1 JOIN Hangar AS H ON T1.`plane_name` = H.`plane_name` GROUP BY H.`location`
SELECT H.`location`, COUNT(DISTINCT P.`pilot_name`), AVG(P.`age`) FROM Hangar AS H JOIN PilotSkills AS P ON H.`plane_name` = P.`plane_name` GROUP BY H.`location`
SELECT COUNT(DISTINCT T1.pilot_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.plane_name HAVING AVG(T1.age) < 35
SELECT T1.plane_name, COUNT(T1.pilot_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.plane_name HAVING AVG(T1.age) < 35
SELECT T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age LIMIT 1
SELECT T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age LIMIT 1
SELECT T1.pilot_name, T1.age FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Austin'
SELECT T1.pilot_name, T1.age FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Austin'
SELECT pilot_name FROM PilotSkills WHERE age > (SELECT age FROM PilotSkills WHERE plane_name = 'Piper Cub') ORDER BY pilot_name
SELECT `pilot_name` FROM `PilotSkills` WHERE `age` > (SELECT MAX(`age`) FROM `PilotSkills` WHERE `plane_name` = 'Piper Cub') ORDER BY `pilot_name`
SELECT count(pilot_name) FROM PilotSkills WHERE age < (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'F-14 Fighter')
SELECT count(T1.pilot_name) FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.plane_name = 'F-14 Fighter' AND T1.age < (SELECT MIN(age) FROM PilotSkills AS T3 INNER JOIN Hangar AS T4 ON T3.plane_name = T4.plane_name WHERE T4.plane_name = 'F-14 Fighter')
SELECT DISTINCT `plane_name` FROM `Hangar` WHERE `plane_name` LIKE '%Bomber%'
SELECT DISTINCT `plane_name` FROM `Hangar` WHERE `plane_name` LIKE '%Bomber%'
SELECT count(T1.pilot_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > (SELECT age FROM PilotSkills WHERE plane_name = 'Piper Cub')
SELECT count(T1.pilot_name) FROM PilotSkills AS T1 JOIN PilotSkills AS T2 ON T1.age > T2.age WHERE T2.plane_name = 'Piper Cub'
SELECT `Name` FROM `district` ORDER BY `Area_km` DESC LIMIT 1
SELECT `Area_km`, `Government_website` FROM `district` ORDER BY `Population` ASC LIMIT 1
SELECT `Name`, `Population` FROM `district` WHERE `Area_km` > (SELECT AVG(`Area_km`) FROM `district`)
SELECT MAX(`Area_km`), AVG(`Area_km`) FROM `district`
SELECT SUM(`Population`) FROM `district` ORDER BY `Area_km` DESC LIMIT 3
SELECT `District_ID`, `Name`, `Government_website` FROM `district` ORDER BY `Population`
SELECT `Name` FROM `district` WHERE `Government_website` LIKE '%gov%'
SELECT `District_ID`, `Name` FROM `district` WHERE `Population` > 4000 UNION SELECT `District_ID`, `Name` FROM `district` WHERE `Area_km` > 3000
SELECT `Name`, `Speach_title` FROM `spokesman`
SELECT avg(`Points`), avg(`Age`) FROM `spokesman` WHERE `Rank_position` = 1
SELECT `Name`, `Points` FROM `spokesman` WHERE `Age` < 40
SELECT `Name` FROM `spokesman` ORDER BY `Age` DESC LIMIT 1
SELECT `Name` FROM `spokesman` WHERE `Points` < (SELECT AVG(`Points`) FROM `spokesman`)
SELECT T1.Name FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID GROUP BY T1.District_ID ORDER BY COUNT(T2.Spokesman_ID) DESC LIMIT 1
SELECT T1.Name FROM spokesman AS T1 JOIN spokesman_district AS T2 ON T1.Spokesman_ID = T2.Spokesman_ID WHERE T2.Start_year < 2004
SELECT T2.`Name`, count(T1.`Spokesman_ID`) FROM spokesman_district AS T1 JOIN district AS T2 ON T1.`District_ID` = T2.`District_ID` GROUP BY T1.`District_ID`
SELECT T1.Name FROM district AS T1 INNER JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID INNER JOIN spokesman AS T3 ON T2.Spokesman_ID = T3.Spokesman_ID WHERE T3.Rank_position = 1 INTERSECT SELECT T1.Name FROM district AS T1 INNER JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID INNER JOIN spokesman AS T3 ON T2.Spokesman_ID = T3.Spokesman_ID WHERE T3.Rank_position = 2
SELECT T1.Name FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID GROUP BY T1.District_ID HAVING count(T2.Spokesman_ID)  >  1
SELECT count(T1.`District_ID`) FROM `district` AS T1 LEFT JOIN `spokesman_district` AS T2 ON T1.`District_ID` = T2.`District_ID` WHERE T2.`Spokesman_ID` IS NULL
SELECT Name FROM `spokesman` EXCEPT SELECT T1.Name FROM `spokesman` AS T1 JOIN `spokesman_district` AS T2 ON T1.Spokesman_ID = T2.Spokesman_ID
SELECT SUM(`T1`.`Population`), AVG(`T1`.`Population`) FROM `district` AS `T1` JOIN `spokesman_district` AS `T2` ON `T1`.`District_ID` = `T2`.`District_ID`
SELECT `title` FROM `Sculptures` ORDER BY `year` DESC LIMIT 1
SELECT `title` FROM `Sculptures` ORDER BY `year` DESC LIMIT 1
SELECT `title`, `location` FROM `Paintings` ORDER BY `year` ASC LIMIT 1
SELECT `title`, `location` FROM `Paintings` ORDER BY `year` ASC LIMIT 1
SELECT `title` FROM `Sculptures` WHERE `location` = 'Gallery 226'
SELECT `title` FROM `Sculptures` WHERE `location` = 'Gallery 226'
SELECT `title`, `location` FROM `Paintings`
SELECT `title`, `location` FROM `Paintings`
SELECT `title`, `location` FROM `Sculptures`
SELECT `title`, `location` FROM `Sculptures`
SELECT `medium` FROM `Paintings` WHERE `paintingID` = 80
SELECT `medium` FROM `Paintings` WHERE `paintingID` = 80
SELECT `fname`, `lname` FROM `Artists` WHERE `birthYear` > 1850
SELECT `fname`, `lname` FROM `Artists` WHERE `birthYear` > 1850
SELECT `title`, `year` FROM `Sculptures` WHERE `location` != 'Gallery 226'
SELECT `title`, `year` FROM `Sculptures` WHERE `location` != 'Gallery 226'
SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID WHERE T2.year < 1900
SELECT DISTINCT `t1`.`fname`, `t1`.`lname` FROM `Artists` AS `t1` JOIN `Sculptures` AS `t2` ON `t1`.`artistID` = `t2`.`sculptorID` WHERE `t2`.`year` < 1900
SELECT DISTINCT T1.birthYear FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID WHERE T2.year > 1920
SELECT DISTINCT T1.birthYear FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID WHERE T2.year > 1920
SELECT `fname`, `lname` FROM `Artists` ORDER BY `deathYear` - `birthYear` DESC LIMIT 1
SELECT `fname`, `lname` FROM `Artists` ORDER BY `deathYear` - `birthYear` DESC LIMIT 1
SELECT T1.birthYear, T1.deathYear FROM Artists AS T1 ORDER BY (T1.deathYear - T1.birthYear) LIMIT 1
SELECT T1.deathYear - T1.birthYear FROM Artists AS T1 ORDER BY T1.deathYear - T1.birthYear LIMIT 1
SELECT T1.fname, (T1.deathYear - T1.birthYear) FROM Artists AS T1 ORDER BY (T1.deathYear - T1.birthYear) DESC LIMIT 1
SELECT T1.fname, (T1.deathYear - T1.birthYear) FROM Artists AS T1 ORDER BY (T1.deathYear - T1.birthYear) DESC LIMIT 1
SELECT count(*) FROM `Paintings` WHERE `location` = 'Gallery 240'
SELECT count(*) FROM `Paintings` WHERE `location` = 'Gallery 240'
SELECT COUNT(T1.paintingID) FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.artistID = (SELECT artistID FROM Artists ORDER BY deathYear - birthYear DESC LIMIT 1)
SELECT COUNT(T1.paintingID) FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.artistID = (SELECT artistID FROM Artists ORDER BY (deathYear - birthYear) DESC LIMIT 1)
SELECT T1.title, T1.year FROM Paintings AS T1 INNER JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.fname = 'Mary'
SELECT T1.title, T1.year FROM Paintings AS T1 INNER JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.fname = 'Mary'
SELECT T1.width_mm FROM Paintings AS T1 INNER JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.birthYear < 1850
SELECT T1.width_mm FROM Paintings AS T1 INNER JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.birthYear < 1850
SELECT T1.location, T1.medium FROM Paintings AS T1 INNER JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.fname = 'Pablo'
SELECT T1.location, T1.mediumOn FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.fname = 'Pablo'
SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID INTERSECT SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Sculptures AS T3 ON T1.artistID = T3.sculptorID
SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID INTERSECT SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Sculptures AS T3 ON T1.artistID = T3.sculptorID
SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'oil' INTERSECT SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'lithograph'
SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'oil' INTERSECT SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'lithograph'
SELECT T1.birthYear FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.year = 1884 AND T2.mediumOn = 'canvas'
SELECT T1.birthYear FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.year = 1884
SELECT DISTINCT T1.fname FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'oil' AND T2.location = 'Gallery 241'
SELECT T1.fname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'oil' AND T2.location = 'Gallery 241'
SELECT `medium`, COUNT(*) FROM `Paintings` GROUP BY `medium`
SELECT `medium`, COUNT(*) FROM Paintings GROUP BY `medium`
SELECT `medium`, AVG(`height_mm`) FROM `Paintings` GROUP BY `medium`
SELECT `medium`, AVG(`height_mm`) FROM `Paintings` GROUP BY `medium`
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1900
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1900
SELECT `title` FROM `Paintings` WHERE `year` > 1910 AND `medium` = 'oil'
SELECT `title` FROM `Paintings` WHERE `medium` = 'oil' AND `year` > 1910
SELECT DISTINCT `painterID` FROM `Paintings` WHERE `medium` = 'oil' AND `location` = 'Gallery 240'
SELECT DISTINCT `painterID` FROM `Paintings` WHERE `medium` = 'oil' AND `location` = 'Gallery 240'
SELECT DISTINCT `title` FROM `Paintings` WHERE `height_mm` > (SELECT MIN(`height_mm`) FROM `Paintings` WHERE `mediumOn` = 'canvas')
SELECT DISTINCT `title` FROM `Paintings` WHERE `height_mm` > (SELECT MIN(`height_mm`) FROM `Paintings` WHERE `mediumOn` = 'canvas')
SELECT DISTINCT `painterID` FROM `Paintings` WHERE `year` < (SELECT `year` FROM `Paintings` WHERE `location` = 'Gallery 240')
SELECT DISTINCT `painterID` FROM `Paintings` WHERE `year` < (SELECT MIN(`year`) FROM `Paintings` WHERE `location` = 'Gallery 240')
SELECT `paintingID` FROM `Paintings` ORDER BY `year` ASC LIMIT 1
SELECT `paintingID` FROM `Paintings` ORDER BY `year` ASC LIMIT 1
SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID WHERE T2.title LIKE '%Female%'
SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID WHERE T2.title LIKE '%Female%' LIMIT 1
SELECT DISTINCT `title` FROM `Paintings` ORDER BY `title`
SELECT DISTINCT `title` FROM `Paintings` ORDER BY `title`
SELECT DISTINCT `title` FROM `Paintings` ORDER BY LENGTH(`title`)
SELECT DISTINCT `title` FROM `Paintings` ORDER BY `height_mm`
SELECT `title` FROM `Paintings` WHERE `year` BETWEEN 1900 AND 1950 UNION SELECT `title` FROM `Sculptures` WHERE `year` BETWEEN 1900 AND 1950
SELECT `title` FROM `Paintings` WHERE `year` BETWEEN 1900 AND 1950 UNION SELECT `title` FROM `Sculptures` WHERE `year` BETWEEN 1900 AND 1950
SELECT `title` FROM `Paintings` WHERE `painterID` = 222 UNION SELECT `title` FROM `Sculptures` WHERE `sculptorID` = 222
SELECT `title` FROM `Paintings` WHERE `painterID` = 222 UNION SELECT `title` FROM `Sculptures` WHERE `sculptorID` = 222
SELECT T1.painterID FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1900 GROUP BY T1.painterID ORDER BY COUNT(*) DESC LIMIT 1
SELECT `painterID` FROM `Paintings` WHERE `year` < 1900 GROUP BY `painterID` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.fname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID GROUP BY T1.artistID ORDER BY COUNT(T2.sculptureID) DESC LIMIT 1
SELECT T1.fname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID GROUP BY T1.artistID ORDER BY COUNT(T2.sculptureID) DESC LIMIT 1
SELECT `title` FROM `Paintings` WHERE `width_mm` < 600 OR `height_mm` > 800
SELECT `title` FROM `Paintings` WHERE `width_mm` < 600 OR `height_mm` > 800
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1885 OR `year` > 1930
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1885 UNION SELECT DISTINCT `location` FROM `Paintings` WHERE `year` > 1930
SELECT `paintingID` FROM `Paintings` WHERE `height_mm` > 500 AND `height_mm` < 2000
SELECT `paintingID` FROM `Paintings` WHERE `height_mm` > 500 AND `height_mm` < 2000
SELECT DISTINCT `location` FROM `Paintings` WHERE `mediumOn` = 'panel' INTERSECT SELECT DISTINCT `location` FROM `Paintings` WHERE `mediumOn` = 'canvas'
SELECT DISTINCT `location` FROM `Paintings` WHERE `mediumOn` = 'panel' INTERSECT SELECT DISTINCT `location` FROM `Paintings` WHERE `mediumOn` = 'canvas'
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1885 INTERSECT SELECT DISTINCT `location` FROM `Paintings` WHERE `year` > 1930
SELECT `location` FROM `Paintings` WHERE `year` < 1885 INTERSECT SELECT `location` FROM `Paintings` WHERE `year` > 1930
SELECT AVG(`height_mm`), AVG(`width_mm`) FROM `Paintings` WHERE `medium` = 'oil' AND `location` = 'Gallery 241'
SELECT AVG(`height_mm`), AVG(`width_mm`) FROM `Paintings` WHERE `medium` = 'oil' AND `location` = 'Gallery 241'
SELECT max(`height_mm`), `paintingID` FROM `Paintings` WHERE `year` < 1900
SELECT `height_mm`, `paintingID` FROM `Paintings` WHERE `year` < 1900 ORDER BY `height_mm` DESC LIMIT 1
SELECT `year`, MAX(`height_mm`), MAX(`width_mm`) FROM `Paintings` GROUP BY `year`
SELECT `year`, MAX(`height_mm`), MAX(`width_mm`) FROM `Paintings` GROUP BY `year`
SELECT AVG(`height_mm`), AVG(`width_mm`), `fname`, `lname` FROM `Paintings` JOIN `Artists` ON `Paintings`.`painterID` = `Artists`.`artistID` GROUP BY `painterID` ORDER BY `lname`, `fname`
SELECT AVG(`height_mm`), AVG(`width_mm`), `fname` FROM `Paintings` JOIN `Artists` ON `Paintings`.`painterID` = `Artists`.`artistID` GROUP BY `painterID` ORDER BY `fname`
SELECT T1.fname, COUNT(T2.paintingID) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID GROUP BY T1.artistID HAVING COUNT(T2.paintingID) >= 2
SELECT T1.fname, COUNT(T2.paintingID) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID GROUP BY T1.artistID HAVING COUNT(T2.paintingID) >= 2
SELECT T1.deathYear FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID GROUP BY T1.artistID HAVING COUNT(T2.paintingID) <= 3
SELECT DISTINCT T1.deathYear FROM Artists AS T1 INNER JOIN Paintings AS T2 ON T1.artistID = T2.painterID GROUP BY T1.artistID HAVING COUNT(T2.paintingID) < 4
SELECT T1.deathYear FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID GROUP BY T1.artistID ORDER BY COUNT(T2.sculptureID) LIMIT 1
SELECT T1.deathYear FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID GROUP BY T1.artistID ORDER BY COUNT(T2.sculptureID) LIMIT 1
SELECT `paintingID`, `height_mm` FROM `Paintings` WHERE `location` = 'Gallery 240' ORDER BY `width_mm` DESC LIMIT 1
SELECT `height_mm`, `paintingID` FROM `Paintings` WHERE `location` = 'Gallery 240' ORDER BY `width_mm` DESC LIMIT 1
SELECT `paintingID` FROM `Paintings` WHERE `year` < (SELECT MIN(`year`) FROM `Paintings` WHERE `location` = 'Gallery 240')
SELECT `paintingID` FROM `Paintings` WHERE `year` < (SELECT MIN(`year`) FROM `Paintings` WHERE `location` = 'Gallery 240')
SELECT `paintingID` FROM `Paintings` WHERE `height_mm` > (SELECT MAX(`height_mm`) FROM `Paintings` WHERE `year` > 1900)
SELECT `paintingID` FROM `Paintings` WHERE `height_mm` > (SELECT MAX(`height_mm`) FROM `Paintings` WHERE `year` > 1900)
SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'oil' GROUP BY T1.artistID ORDER BY COUNT(T2.paintingID) DESC LIMIT 3
SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.medium = 'oil' GROUP BY T1.artistID ORDER BY COUNT(T2.paintingID) DESC LIMIT 1
SELECT `paintingID`, `location`, `title` FROM `Paintings` WHERE `medium` = 'oil' ORDER BY `year`
SELECT `paintingID`, `location`, `title` FROM `Paintings` WHERE `medium` = 'oil' ORDER BY `year`
SELECT `year`, `location`, `title` FROM `Paintings` WHERE `height_mm` > 1000 ORDER BY `title`
SELECT `year`, `location`, `title` FROM `Paintings` WHERE `height_mm` > 1000 ORDER BY `title`
SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID EXCEPT SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID
SELECT `fname`, `lname` FROM `Artists` EXCEPT SELECT T1.fname, T1.lname FROM Artists AS T1 INNER JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID
SELECT DISTINCT `location` FROM `Paintings` WHERE `year` < 1885 AND `mediumOn` != 'canvas'
SELECT `location` FROM `Paintings` WHERE `year` < 1885 AND `mediumOn` != 'canvas'
SELECT count(*) FROM `race`
SELECT count(*) FROM `race`
SELECT `Winning_driver`, `Winning_team` FROM `race` ORDER BY `Winning_team` ASC
SELECT Winning_driver, Winning_team FROM `race` ORDER BY Winning_team
SELECT DISTINCT `Winning_driver` FROM `race` WHERE `Pole_Position` != 'Junior Strous'
SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'
SELECT DISTINCT `Constructor` FROM `driver` ORDER BY `Age` ASC
SELECT DISTINCT `Constructor` FROM `driver` ORDER BY `Age` ASC
SELECT DISTINCT `Entrant` FROM `driver` WHERE `Age` >= 20
SELECT DISTINCT `Entrant` FROM `driver` WHERE `Age` >= 20
SELECT MAX(`Age`), MIN(`Age`) FROM `driver`
SELECT MAX(`Age`), MIN(`Age`) FROM `driver`
SELECT DISTINCT `Engine` FROM `driver` WHERE `Age` > 30 OR `Age` < 20
SELECT COUNT(DISTINCT `Engine`) FROM `driver` WHERE `Age` > 30 OR `Age` < 20
SELECT `Driver_Name` FROM `driver` ORDER BY `Driver_Name` DESC
SELECT `Driver_Name` FROM `driver` ORDER BY `Driver_Name` DESC
SELECT T1.`Driver_Name`, T2.`Race_Name` FROM driver AS T1 JOIN race AS T2 ON T1.`Driver_ID` = T2.`Driver_ID`
SELECT DISTINCT T1.Driver_Name, T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID
SELECT `Driver_Name`, COUNT(T1.`Driver_ID`) FROM driver AS T1 JOIN race AS T2 ON T1.`Driver_ID` = T2.`Driver_ID` GROUP BY T1.`Driver_ID`
SELECT `Driver_ID`, COUNT(*) FROM `race` GROUP BY `Driver_ID`
SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Driver_ID ORDER BY COUNT(T2.Race_Name) DESC LIMIT 1
SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Driver_ID ORDER BY COUNT(T2.Race_Name) DESC LIMIT 1
SELECT DISTINCT T1.Driver_Name, T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*) >= 2
SELECT T1.`Driver_Name`, T1.`Age` FROM driver AS T1 JOIN race AS T2 ON T1.`Driver_ID` = T2.`Driver_ID` GROUP BY T1.`Driver_ID` HAVING COUNT(T2.`Race_Name`) >= 2
SELECT T1.`Race_Name` FROM race AS T1 JOIN driver AS T2 ON T1.`Driver_ID` = T2.`Driver_ID` WHERE T2.`Age` >= 26
SELECT T2.`Race_Name` FROM driver AS T1 JOIN race AS T2 ON T1.`Driver_ID` = T2.`Driver_ID` WHERE T1.`Age` >= 26
SELECT `Driver_Name` FROM `driver` WHERE `Constructor` != 'Bugatti'
SELECT `Driver_Name` FROM `driver` WHERE `Constructor` NOT LIKE 'Bugatti'
SELECT `Constructor`, COUNT(DISTINCT `Driver_ID`) FROM `driver` GROUP BY `Constructor`
SELECT Constructor, COUNT(DISTINCT Driver_ID) FROM driver GROUP BY Constructor
SELECT Engine FROM `driver` GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1
SELECT Engine FROM `driver` GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Engine` FROM `driver` GROUP BY `Engine` HAVING COUNT(DISTINCT `Driver_ID`) >= 2
SELECT DISTINCT `Engine` FROM `driver` GROUP BY `Engine` HAVING COUNT(DISTINCT `Driver_ID`) >= 2
SELECT `Driver_Name` FROM `driver` WHERE `Driver_ID` NOT IN (SELECT `Driver_ID` FROM `race`)
SELECT `Driver_Name` FROM `driver` WHERE `Driver_ID` NOT IN (SELECT `Driver_ID` FROM `race`)
SELECT `Constructor` FROM `driver` WHERE `Age` < 20 INTERSECT SELECT `Constructor` FROM `driver` WHERE `Age` > 30
SELECT DISTINCT `Constructor` FROM `driver` WHERE `Age` < 20 INTERSECT SELECT DISTINCT `Constructor` FROM `driver` WHERE `Age` > 30
SELECT Winning_team FROM race GROUP BY Winning_team HAVING COUNT(*) > 1
SELECT DISTINCT `Winning_team` FROM `race` GROUP BY `Winning_team` HAVING COUNT(*) > 1
SELECT `Driver_Name` FROM `driver` JOIN `race` ON `driver`.`Driver_ID` = `race`.`Driver_ID` WHERE `Pole_Position` = 'James Hinchcliffe' INTERSECT SELECT `Driver_Name` FROM `driver` JOIN `race` ON `driver`.`Driver_ID` = `race`.`Driver_ID` WHERE `Pole_Position` = 'Carl Skerlong'
SELECT `Driver_Name` FROM `driver` JOIN `race` ON `driver`.`Driver_ID` = `race`.`Driver_ID` WHERE `Pole_Position` = 'James Hinchcliffe' INTERSECT SELECT `Driver_Name` FROM `driver` JOIN `race` ON `driver`.`Driver_ID` = `race`.`Driver_ID` WHERE `Pole_Position` = 'Carl Skerlong'
SELECT DISTINCT `Driver_Name` FROM `driver` WHERE `Driver_ID` NOT IN (SELECT `Driver_ID` FROM `race` WHERE `Pole_Position` = 'James Hinchcliffe')
SELECT Driver_Name FROM `driver` EXCEPT SELECT T1.Driver_Name FROM `driver` AS T1 INNER JOIN `race` AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Pole_Position = 'James Hinchcliffe'
SELECT COUNT(*) FROM `languages`
SELECT COUNT(*) FROM `languages`
SELECT `name` FROM `languages` ORDER BY `name` ASC
SELECT `name` FROM `languages` ORDER BY `name`
SELECT `name` FROM `languages` WHERE `name` LIKE '%ish%'
SELECT `name` FROM `languages` WHERE `name` LIKE '%ish%'
SELECT `name` FROM `countries` ORDER BY `overall_score` DESC
SELECT `name` FROM `countries` ORDER BY `overall_score` DESC
SELECT avg(`justice_score`) FROM `countries`
SELECT avg(`justice_score`) FROM `countries`
SELECT max(`health_score`), min(`health_score`) FROM `countries` WHERE `name` != 'Norway'
SELECT MAX(`health_score`), MIN(`health_score`) FROM `countries` WHERE `name` != 'Norway'
SELECT COUNT(DISTINCT `language_id`) FROM `official_languages`
SELECT COUNT(DISTINCT `language_id`) FROM `official_languages`
SELECT `name` FROM `countries` ORDER BY `education_score` DESC
SELECT `name` FROM `countries` ORDER BY `education_score` DESC
SELECT `name` FROM `countries` ORDER BY `politics_score` DESC LIMIT 1
SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1
SELECT T1.name, T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id JOIN languages AS T3 ON T2.language_id = T3.id
SELECT T1.name, T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id JOIN languages AS T3 ON T2.language_id = T3.id
SELECT T2.name, count(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id GROUP BY T1.language_id
SELECT T2.name, COUNT(T1.country_id) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id GROUP BY T2.name
SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name ORDER BY COUNT(T2.country_id) DESC LIMIT 1
SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name ORDER BY COUNT(T2.country_id) DESC LIMIT 1
SELECT DISTINCT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name HAVING COUNT(T2.country_id) >= 2
SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name HAVING COUNT(T2.country_id) >= 2
SELECT AVG(`T1`.`overall_score`) FROM `countries` AS `T1` JOIN `official_languages` AS `T2` ON `T1`.`id` = `T2`.`country_id` JOIN `languages` AS `T3` ON `T2`.`language_id` = `T3`.`id` WHERE `T3`.`name` = 'English'
SELECT AVG(`T1`.`overall_score`) FROM `countries` AS `T1` JOIN `official_languages` AS `T2` ON `T1`.`id` = `T2`.`country_id` JOIN `languages` AS `T3` ON `T2`.`language_id` = `T3`.`id` WHERE `T3`.`name` = 'English'
SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.id ORDER BY COUNT(T2.country_id) DESC LIMIT 3
SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name ORDER BY COUNT(T2.country_id) DESC LIMIT 3
SELECT T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id JOIN languages AS T3 ON T1.language_id = T3.id GROUP BY T3.name ORDER BY avg(T2.overall_score) DESC
SELECT T2.name FROM official_languages AS T1 JOIN countries AS T3 ON T1.country_id = T3.id JOIN languages AS T2 ON T1.language_id = T2.id GROUP BY T2.name ORDER BY AVG(T3.overall_score) DESC
SELECT T1.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id GROUP BY T1.id ORDER BY COUNT(T2.language_id) DESC LIMIT 1
SELECT T1.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id GROUP BY T1.id ORDER BY COUNT(T2.language_id) DESC LIMIT 1
SELECT T1.name FROM languages AS T1 LEFT JOIN official_languages AS T2 ON T1.id = T2.language_id WHERE T2.language_id IS NULL
SELECT T1.name FROM languages AS T1 LEFT JOIN official_languages AS T2 ON T1.id = T2.language_id WHERE T2.language_id IS NULL
SELECT T1.name FROM countries AS T1 WHERE T1.id NOT IN (SELECT T2.country_id FROM official_languages AS T2)
SELECT T1.`name` FROM `countries` AS T1 EXCEPT SELECT T2.`name` FROM `countries` AS T1 INNER JOIN `official_languages` AS T2 ON T1.`id` = T2.`country_id`
SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score > 95 INTERSECT SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score < 90
SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score > 95 INTERSECT SELECT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id INNER JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score < 90
SELECT DISTINCT `country`, `town_city` FROM `Addresses`
SELECT DISTINCT `country`, `town_city` FROM `Addresses`
SELECT T1.`county_state_province` FROM Addresses AS T1 JOIN Properties AS T2 ON T1.`address_id` = T2.`property_address_id` GROUP BY T1.`county_state_province`
SELECT T1.`county_state_province` FROM Addresses AS T1 JOIN Properties AS T2 ON T1.`address_id` = T2.`property_address_id`
SELECT T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id = T2.feature_id JOIN Properties AS T3 ON T2.property_id = T3.property_id WHERE T1.feature_name = 'rooftop'
SELECT `feature_description` FROM `Features` WHERE `feature_name` = 'rooftop'
SELECT T2.`feature_name`, T2.`feature_description` FROM `Property_Features` AS T1 JOIN `Features` AS T2 ON T1.`feature_id` = T2.`feature_id` GROUP BY T1.`feature_id` ORDER BY COUNT(T1.`feature_id`) DESC LIMIT 1
SELECT T1.`feature_name`, T1.`feature_description` FROM `Features` AS T1 JOIN `Property_Features` AS T2 ON T1.`feature_id` = T2.`feature_id` GROUP BY T2.`feature_id` ORDER BY COUNT(T2.`property_id`) DESC LIMIT 1
SELECT MIN(`room_count`) FROM `Properties`
SELECT MIN(`room_count`) FROM `Properties`
SELECT COUNT(*) FROM `Properties` WHERE `parking_lots` = '1' OR `garage_yn` = '1'
SELECT COUNT(*) FROM `Properties` WHERE `parking_lots` = '1' OR `garage_yn` = '1'
SELECT T1.age_category_description FROM Ref_Age_Categories AS T1 JOIN Users AS T2 ON T1.age_category_code = T2.age_category_code JOIN Ref_User_Categories AS T3 ON T2.user_category_code = T3.user_category_code WHERE T3.user_category_description LIKE '%Mother%'
SELECT DISTINCT T1.age_category_description FROM Ref_Age_Categories AS T1 JOIN Users AS T2 ON T1.age_category_code = T2.age_category_code JOIN Ref_User_Categories AS T3 ON T2.user_category_code = T3.user_category_code WHERE T3.user_category_description LIKE '%Mother%'
SELECT T1.`first_name` FROM `Users` AS T1 JOIN `Properties` AS T2 ON T1.`user_id` = T2.`owner_user_id` GROUP BY T1.`user_id` ORDER BY COUNT(T2.`property_id`) DESC LIMIT 1
SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T1.user_id = T2.owner_user_id GROUP BY T1.user_id ORDER BY COUNT(T2.property_id) DESC LIMIT 1
SELECT AVG(`room_count`) FROM `Properties` WHERE `property_name` = 'garden'
SELECT AVG(`T1`.`room_count`) FROM `Properties` AS `T1` JOIN `Property_Features` AS `T2` ON `T1`.`property_id` = `T2`.`property_id` JOIN `Features` AS `T3` ON `T2`.`feature_id` = `T3`.`feature_id` WHERE `T3`.`feature_name` = 'garden'
SELECT DISTINCT T1.town_city FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id = T2.property_address_id JOIN Property_Features AS T3 ON T2.property_id = T3.property_id JOIN Features AS T4 ON T3.feature_id = T4.feature_id WHERE T4.feature_name = 'swimming pool'
SELECT DISTINCT T1.`town_city` FROM `Addresses` AS T1 JOIN `Properties` AS T2 ON T1.`address_id` = T2.`property_address_id` JOIN `Property_Features` AS T3 ON T2.`property_id` = T3.`property_id` JOIN `Features` AS T4 ON T3.`feature_id` = T4.`feature_id` WHERE T4.`feature_name` = 'swimming pool'
SELECT `property_id`, `vendor_requested_price` FROM `Properties` ORDER BY `vendor_requested_price` ASC LIMIT 1
SELECT `property_id`, `vendor_requested_price` FROM `Properties` ORDER BY `vendor_requested_price` ASC LIMIT 1
SELECT AVG(`room_count`) FROM `Properties`
SELECT AVG(`room_count`) FROM `Properties`
SELECT COUNT(DISTINCT `room_size`) FROM `Rooms`
SELECT COUNT(DISTINCT `room_size`) FROM `Rooms`
SELECT T1.`user_id`, T1.`search_string` FROM `User_Searches` AS T1 JOIN ( SELECT `user_id` FROM `User_Searches` GROUP BY `user_id` HAVING COUNT(*) >= 2 ) AS T2 ON T1.`user_id` = T2.`user_id`
SELECT `user_id`, `search_seq` FROM `User_Searches` GROUP BY `user_id` HAVING COUNT(*) >= 2
SELECT search_datetime FROM `User_Searches` ORDER BY `search_datetime` DESC LIMIT 1
SELECT `search_datetime` FROM `User_Searches` ORDER BY `search_datetime` DESC LIMIT 1
SELECT `search_datetime`, `search_string` FROM `User_Searches` ORDER BY `search_string` DESC
SELECT `search_string`, `search_datetime` FROM `User_Searches` ORDER BY `search_string` DESC
SELECT DISTINCT `t1`.`zip_postcode` FROM `Addresses` AS `t1` JOIN `Properties` AS `t2` ON `t1`.`address_id` = `t2`.`property_address_id` JOIN `Users` AS `t3` ON `t2`.`owner_user_id` = `t3`.`user_id` GROUP BY `t2`.`owner_user_id` HAVING COUNT(`t2`.`property_id`) > 2
SELECT DISTINCT T1.`zip_postcode` FROM `Addresses` AS T1 JOIN `Properties` AS T2 ON T1.`address_id` = T2.`property_address_id` JOIN `Users` AS T3 ON T2.`owner_user_id` = T3.`user_id` GROUP BY T2.`owner_user_id` HAVING COUNT(T2.`property_id`) > 2
SELECT DISTINCT `t1`.`user_category_code`, `t2`.`user_id` FROM `Ref_User_Categories` AS `t1` JOIN `Users` AS `t2` ON `t1`.`user_category_code` = `t2`.`user_category_code` JOIN `User_Searches` AS `t3` ON `t2`.`user_id` = `t3`.`user_id` GROUP BY `t2`.`user_id` HAVING COUNT(*) = 1
SELECT DISTINCT `t1`.`user_id`, `t2`.`user_category_code` FROM `User_Searches` AS `t1` JOIN `Users` AS `t2` ON `t1`.`user_id` = `t2`.`user_id` GROUP BY `t1`.`user_id` HAVING COUNT(*) = 1
SELECT T1.age_category_code FROM Users AS T1 INNER JOIN User_Searches AS T2 ON T1.user_id = T2.user_id ORDER BY T2.search_datetime LIMIT 1
SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id = T2.user_id ORDER BY T2.search_datetime LIMIT 1
SELECT `login_name` FROM `Users` JOIN `Ref_Age_Categories` ON `Users`.`age_category_code` = `Ref_Age_Categories`.`age_category_code` JOIN `Ref_User_Categories` ON `Users`.`user_category_code` = `Ref_User_Categories`.`user_category_code` WHERE `Ref_User_Categories`.`user_category_description` = 'Senior Citizen' ORDER BY `first_name`
SELECT T1.`login_name` FROM `Users` AS T1 JOIN `Ref_Age_Categories` AS T2 ON T1.`age_category_code` = T2.`age_category_code` JOIN `Ref_User_Categories` AS T3 ON T1.`user_category_code` = T3.`user_category_code` WHERE T3.`user_category_description` = 'Senior Citizen' ORDER BY T1.`first_name`
SELECT COUNT(T1.search_string) FROM User_Searches AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T2.is_buyer = 1
SELECT COUNT(T1.`search_string`) FROM `User_Searches` AS T1 JOIN `Users` AS T2 ON T1.`user_id` = T2.`user_id` WHERE T2.`is_buyer` = 1
SELECT `date_registered` FROM `Users` WHERE `login_name` = 'ratione'
SELECT `date_registered` FROM `Users` WHERE `login_name` = 'ratione'
SELECT `first_name`, `middle_name`, `last_name`, `login_name` FROM `Users` WHERE `is_seller` = 1
SELECT `first_name`, `middle_name`, `last_name`, `login_name` FROM `Users` WHERE `is_seller` = 1
SELECT T1.`line_1_number_building`, T1.`line_2_number_street`, T1.`town_city` FROM Addresses AS T1 JOIN Users AS T2 ON T1.`address_id` = T2.`user_address_id` WHERE T2.`user_category_code` = 'Senior Citizen'
SELECT T1.`line_1_number_building`, T1.`line_2_number_street`, T1.`town_city` FROM Addresses AS T1 JOIN Users AS T2 ON T1.`address_id` = T2.`user_address_id` JOIN Ref_User_Categories AS T3 ON T2.`user_category_code` = T3.`user_category_code` WHERE T3.`user_category_description` = 'Senior Citizen'
SELECT COUNT(DISTINCT `property_id`) FROM `Property_Features` GROUP BY `property_id` HAVING COUNT(DISTINCT `feature_id`) >= 2
SELECT COUNT(DISTINCT `property_id`) FROM `Property_Features` GROUP BY `property_id` HAVING COUNT(*) >= 2
SELECT `property_id`, COUNT(*) FROM `Property_Photos` GROUP BY `property_id`
SELECT `property_id`, COUNT(*) FROM `Property_Photos` GROUP BY `property_id`
SELECT `Users`.`user_id`, COUNT(`Property_Photos`.`photo_filename`) FROM `Users` JOIN `Properties` ON `Users`.`user_id` = `Properties`.`owner_user_id` JOIN `Property_Photos` ON `Properties`.`property_id` = `Property_Photos`.`property_id` GROUP BY `Users`.`user_id`
SELECT `Users`.`user_id`, COUNT(`Property_Photos`.`property_id`) FROM `Users` JOIN `Properties` ON `Users`.`user_id` = `Properties`.`owner_user_id` JOIN `Property_Photos` ON `Properties`.`property_id` = `Property_Photos`.`property_id` GROUP BY `Users`.`user_id`
SELECT SUM(`price_max`) FROM `Properties` AS T1 INNER JOIN `Users` AS T2 ON T1.`owner_user_id` = T2.`user_id` WHERE T2.`user_category_code` = 'Single Mother' OR T2.`user_category_code` = 'Student'
SELECT SUM(`price_max`) FROM `Properties` AS T1 JOIN `Users` AS T2 ON T1.`owner_user_id` = T2.`user_id` WHERE T2.`user_category_code` IN (SELECT `user_category_code` FROM `Ref_User_Categories` WHERE `user_category_description` = 'Single Mother' OR `user_category_description` = 'Student')
SELECT T1.`datestamp`, T2.`property_name` FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id ORDER BY T1.`datestamp`
SELECT T1.`datestamp`, T2.`property_name` FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.`property_id` = T2.`property_id` ORDER BY T1.`datestamp`
SELECT T1.property_type_description, T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T1.property_type_code ORDER BY COUNT(T2.property_type_code) DESC LIMIT 1
SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T1.property_type_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60'
SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60'
SELECT `room_size`, COUNT(*) FROM `Rooms` GROUP BY `room_size`
SELECT `room_size`, COUNT(*) FROM `Rooms` GROUP BY `room_size`
SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id = T2.user_address_id WHERE T2.first_name = 'Robbie'
SELECT T1.country FROM Addresses AS T1 INNER JOIN Users AS T2 ON T1.address_id = T2.user_address_id WHERE T2.first_name = 'Robbie'
SELECT T1.first_name, T1.middle_name, T1.last_name FROM Users AS T1 JOIN Addresses AS T2 ON T1.user_address_id = T2.address_id JOIN Properties AS T3 ON T1.user_id = T3.owner_user_id JOIN Addresses AS T4 ON T3.property_address_id = T4.address_id WHERE T2.address_id = T4.address_id
SELECT DISTINCT T1.first_name, T1.middle_name, T1.last_name FROM Users AS T1 JOIN Properties AS T2 ON T1.user_id = T2.owner_user_id JOIN Addresses AS T3 ON T2.property_address_id = T3.address_id
SELECT T1.search_string FROM User_Searches AS T1 JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T2.user_id NOT IN (SELECT owner_user_id FROM Properties)
SELECT T1.search_string FROM User_Searches AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id EXCEPT SELECT T3.search_string FROM User_Searches AS T3 INNER JOIN Users AS T4 ON T3.user_id = T4.user_id INNER JOIN Properties AS T5 ON T4.user_id = T5.owner_user_id
SELECT DISTINCT `t1`.`last_name`, `t1`.`user_id` FROM `Users` AS `t1` JOIN `User_Property_History` AS `t2` ON `t1`.`user_id` = `t2`.`user_id` JOIN `User_Searches` AS `t3` ON `t1`.`user_id` = `t3`.`user_id` GROUP BY `t1`.`user_id` HAVING COUNT(DISTINCT `t2`.`property_id`) >= 2 AND COUNT(DISTINCT `t3`.`search_seq`) <= 2
SELECT DISTINCT   `t1`.`last_name`,   `t1`.`user_id` FROM `Users` AS `t1` INNER JOIN `User_Property_History` AS `t2`   ON `t1`.`user_id` = `t2`.`user_id` INNER JOIN `User_Searches` AS `t3`   ON `t1`.`user_id` = `t3`.`user_id` GROUP BY   `t1`.`user_id` HAVING   COUNT(DISTINCT `t2`.`property_id`) >= 2 AND COUNT(DISTINCT `t3`.`search_seq`) <= 2
SELECT count(*) FROM `bike` WHERE `weight` > 780
SELECT `product_name`, `weight` FROM `bike` ORDER BY `price` ASC
SELECT `heat`, `name`, `nation` FROM `cyclist`
SELECT MAX(`weight`), MIN(`weight`) FROM `bike`
SELECT avg(`price`) FROM `bike` WHERE `material` = 'Carbon CC'
SELECT `name`, `result` FROM `cyclist` WHERE `nation` NOT LIKE 'Russia'
SELECT DISTINCT `b`.`id`, `b`.`product_name` FROM `bike` AS `b` JOIN `cyclists_own_bikes` AS `cob` ON `b`.`id` = `cob`.`bike_id` WHERE `cob`.`purchase_year` > 2015
SELECT T1.id, T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id GROUP BY T1.id HAVING COUNT(T2.cyclist_id) >= 4
SELECT T1.id, T1.name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id GROUP BY T1.id ORDER BY COUNT(T2.bike_id) DESC LIMIT 1
SELECT DISTINCT T1.product_name FROM bike AS T1 INNER JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id INNER JOIN cyclist AS T3 ON T2.cyclist_id = T3.id WHERE T3.nation = 'Great Britain' OR T3.nation = 'Russia'
SELECT COUNT(DISTINCT `heat`) FROM `cyclist`
SELECT COUNT(T1.id) FROM cyclist AS T1 LEFT JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id WHERE T2.bike_id IS NULL AND T1.id IN (SELECT T1.cyclist_id FROM cyclists_own_bikes AS T1 EXCEPT SELECT T1.cyclist_id FROM cyclists_own_bikes AS T1 WHERE T1.purchase_year > 2015)
SELECT DISTINCT T2.product_name FROM cyclist AS T1 INNER JOIN cyclists_own_bikes AS T3 ON T1.id = T3.cyclist_id INNER JOIN bike AS T2 ON T3.bike_id = T2.id WHERE T1.result < '4:21.558'
SELECT T1.`product_name`, T1.`price` FROM `bike` AS T1 INNER JOIN `cyclists_own_bikes` AS T2 ON T1.`id` = T2.`bike_id` INNER JOIN `cyclist` AS T3 ON T2.`cyclist_id` = T3.`id` WHERE T3.`name` = 'Bradley Wiggins' INTERSECT SELECT T1.`product_name`, T1.`price` FROM `bike` AS T1 INNER JOIN `cyclists_own_bikes` AS T2 ON T1.`id` = T2.`bike_id` INNER JOIN `cyclist` AS T3 ON T2.`cyclist_id` = T3.`id` WHERE T3.`name` = 'Antonio Tauler'
SELECT `name`, `nation`, `result` FROM `cyclist` WHERE NOT EXISTS (SELECT 1 FROM `cyclists_own_bikes` AS T1 JOIN `bike` AS T2 ON T1.`bike_id` = T2.`id` WHERE T1.`cyclist_id` = `cyclist`.`id`);
SELECT `product_name` FROM `bike` WHERE `material` LIKE '%fiber%'
SELECT `cyclist_id`, COUNT(*) FROM `cyclists_own_bikes` GROUP BY `cyclist_id` ORDER BY `cyclist_id`
SELECT `Flavor` FROM `goods` WHERE `Food` = 'Cake' ORDER BY `Price` DESC LIMIT 1
SELECT `Id`, `Flavor` FROM `goods` WHERE `Food` = 'Cake' ORDER BY `Price` DESC LIMIT 1
SELECT `Flavor` FROM `goods` WHERE `Food` = 'Cookie' ORDER BY `Price` ASC LIMIT 1
SELECT `Id`, `Flavor` FROM `goods` WHERE `Food` = 'Cookie' ORDER BY `Price` ASC LIMIT 1
SELECT `Id` FROM `goods` WHERE `Flavor` LIKE 'Apple'
SELECT `Id` FROM `goods` WHERE `Flavor` LIKE '%apple%'
SELECT `Id` FROM `goods` WHERE `Price` < 3
SELECT `Id` FROM `goods` WHERE `Price` < 3
SELECT DISTINCT `T1`.`CustomerId` FROM `receipts` AS `T1` JOIN `items` AS `T2` ON `T1`.`ReceiptNumber` = `T2`.`Receipt` JOIN `goods` AS `T3` ON `T2`.`Item` = `T3`.`Id` WHERE `T3`.`Food` = 'Cake' AND `T3`.`Flavor` = 'Lemon'
SELECT DISTINCT `T1`.`CustomerId` FROM `receipts` AS `T1` JOIN `items` AS `T2` ON `T1`.`ReceiptNumber` = `T2`.`Receipt` JOIN `goods` AS `T3` ON `T2`.`Item` = `T3`.`Id` WHERE `T3`.`Flavor` = 'Lemon' AND `T3`.`Food` = 'Cake'
SELECT T1.Food, COUNT(DISTINCT T2.CustomerId) FROM goods AS T1 JOIN items AS T3 ON T1.Id = T3.Item JOIN receipts AS T2 ON T3.Receipt = T2.ReceiptNumber GROUP BY T1.Food
SELECT T2.Food, COUNT(DISTINCT T1.CustomerId) FROM receipts AS T1 JOIN items AS T3 ON T1.ReceiptNumber = T3.Receipt JOIN goods AS T2 ON T3.Item = T2.Id GROUP BY T2.Food
SELECT T1.CustomerId FROM receipts AS T1 GROUP BY T1.CustomerId HAVING COUNT(*)  >=  15
SELECT `CustomerId` FROM `receipts` GROUP BY `CustomerId` HAVING COUNT(*) >= 15
SELECT DISTINCT T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId GROUP BY T1.Id HAVING COUNT(T2.ReceiptNumber) > 10
SELECT DISTINCT T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId GROUP BY T1.Id HAVING COUNT(*)  >  10
SELECT COUNT(DISTINCT `Flavor`) FROM `goods` WHERE `Food` = 'Cake'
SELECT COUNT(DISTINCT `Flavor`) FROM `goods` WHERE `Food` = 'Cake'
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Croissant'
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Croissant'
SELECT DISTINCT `Item` FROM `items` JOIN `receipts` ON `items`.`Receipt` = `receipts`.`ReceiptNumber` WHERE `receipts`.`CustomerId` = 15
SELECT DISTINCT `T1`.`Item` FROM `items` AS `T1` INNER JOIN `receipts` AS `T2` ON `T1`.`Receipt` = `T2`.`ReceiptNumber` WHERE `T2`.`CustomerId` = 15
SELECT Food, AVG(Price), MAX(Price), MIN(Price) FROM `goods` GROUP BY Food
SELECT `Food`, AVG(`Price`), MIN(`Price`), MAX(`Price`) FROM `goods` GROUP BY `Food`
SELECT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Food` = 'Cake') INTERSECT SELECT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Food` = 'Cookie')
SELECT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Food` = 'Cake') INTERSECT SELECT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Food` = 'Cookie')
SELECT DISTINCT `receipts`.`ReceiptNumber` FROM `receipts` JOIN `customers` ON `receipts`.`CustomerId` = `customers`.`Id` JOIN `items` ON `receipts`.`ReceiptNumber` = `items`.`Receipt` JOIN `goods` ON `items`.`Item` = `goods`.`Id` WHERE `customers`.`LastName` = 'LOGAN' AND `goods`.`Food` LIKE '%Croissant%'
SELECT DISTINCT `receipts`.`ReceiptNumber` FROM `receipts` JOIN `customers` ON `receipts`.`CustomerId` = `customers`.`Id` JOIN `items` ON `receipts`.`ReceiptNumber` = `items`.`Receipt` JOIN `goods` ON `items`.`Item` = `goods`.`Id` WHERE `customers`.`LastName` = 'LOGAN' AND `goods`.`Food` LIKE '%croissant%'
SELECT T1.ReceiptNumber, T1.Date FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id ORDER BY T3.Price DESC LIMIT 1
SELECT T1.ReceiptNumber, T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt JOIN goods AS T3 ON T2.Item = T3.Id WHERE T3.Price = (SELECT MAX(Price) FROM goods) GROUP BY T1.ReceiptNumber, T1.Date
SELECT `Item` FROM `items` GROUP BY `Item` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `Item` FROM `items` GROUP BY `Item` ORDER BY COUNT(*) ASC LIMIT 1
SELECT Food, COUNT(Id) FROM goods GROUP BY Food
SELECT Food, COUNT(Id) FROM goods GROUP BY Food
SELECT Food, AVG(Price) FROM goods GROUP BY Food
SELECT Food, AVG(Price) FROM goods GROUP BY Food
SELECT `Id` FROM `goods` WHERE `Flavor` LIKE 'Apricot' AND `Price` < 5
SELECT `Id` FROM `goods` WHERE `Flavor` = 'Apricot' AND `Price` < 5
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Cake' AND `Price` > 10
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Cake' AND `Price` > 10
SELECT DISTINCT `Id`, `Price` FROM `goods` WHERE `Price` < (SELECT AVG(`Price`) FROM `goods`)
SELECT DISTINCT `Id`, `Price` FROM `goods` WHERE `Price` < (SELECT AVG(`Price`) FROM `goods`)
SELECT DISTINCT `Id` FROM `goods` WHERE `Price` < (SELECT MAX(`Price`) FROM `goods` WHERE `Food` = 'Tart')
SELECT DISTINCT `Id` FROM `goods` WHERE `Price` < (SELECT MIN(`Price`) FROM `goods` WHERE `Food` = 'Cake')
SELECT DISTINCT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Price` > 13)
SELECT DISTINCT `T1`.`ReceiptNumber` FROM `receipts` AS `T1` JOIN `items` AS `T2` ON `T1`.`ReceiptNumber` = `T2`.`Receipt` JOIN `goods` AS `T3` ON `T2`.`Item` = `T3`.`Id` WHERE `T3`.`Price` > 13
SELECT DISTINCT `T1`.`Date` FROM `receipts` AS `T1` JOIN `items` AS `T2` ON `T1`.`ReceiptNumber` = `T2`.`Receipt` JOIN `goods` AS `T3` ON `T2`.`Item` = `T3`.`Id` WHERE `T3`.`Price` > 15
SELECT T1.`Date` FROM receipts AS T1 JOIN items AS T2 ON T1.`ReceiptNumber` = T2.`Receipt` JOIN goods AS T3 ON T2.`Item` = T3.`Id` WHERE T3.`Price` > 15
SELECT `Id` FROM `goods` WHERE `Id` LIKE '%APP%'
SELECT `Id` FROM `goods` WHERE `Id` LIKE '%APP%'
SELECT `Id`, `Price` FROM `goods` WHERE `Id` LIKE '%70%'
SELECT `Id`, `Price` FROM `goods` WHERE `Id` LIKE '%70%'
SELECT `LastName` FROM `customers` ORDER BY `LastName`
SELECT `LastName` FROM `customers` ORDER BY `LastName`
SELECT `Id` FROM `goods` ORDER BY `Id`
SELECT DISTINCT `Item` FROM `items` ORDER BY `Item`
SELECT `ReceiptNumber` FROM `receipts` WHERE `ReceiptNumber` IN (SELECT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Flavor` = 'Apple')) UNION SELECT `ReceiptNumber` FROM `receipts` WHERE `CustomerId` = 12
SELECT `Receipt` FROM `items` WHERE `Item` IN (SELECT `Id` FROM `goods` WHERE `Flavor` = 'Apple' AND `Food` = 'Pie') UNION SELECT `ReceiptNumber` FROM `receipts` WHERE `CustomerId` = 12
SELECT `ReceiptNumber`, `Date` FROM `receipts` WHERE `Date` = (SELECT MAX(`Date`) FROM `receipts`)
SELECT `ReceiptNumber`, `Date` FROM `receipts` ORDER BY `Date` DESC LIMIT 1
SELECT `ReceiptNumber` FROM `receipts` WHERE `Date` = (SELECT MIN(`Date`) FROM `receipts`) UNION SELECT T1.ReceiptNumber FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id WHERE T3.Price > 10
SELECT `ReceiptNumber` FROM `receipts` WHERE `Date` = (SELECT MIN(`Date`) FROM `receipts`) UNION SELECT T1.ReceiptNumber FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt INNER JOIN goods AS T3 ON T2.Item = T3.Id WHERE T3.Price > 10
SELECT `Id` FROM `goods` WHERE `Food` LIKE 'Cookie' OR `Food` LIKE 'Cake' AND `Price` BETWEEN 3 AND 7
SELECT `Id` FROM `goods` WHERE `Price` BETWEEN 3 AND 7
SELECT T1.FirstName, T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId ORDER BY T2.Date LIMIT 1
SELECT T1.FirstName, T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId ORDER BY T2.Date LIMIT 1
SELECT avg(`Price`) FROM `goods` WHERE `Flavor` = 'Blackberry' OR `Flavor` = 'Blueberry'
SELECT AVG(`Price`) FROM `goods` WHERE `Flavor` = 'Blackberry' OR `Flavor` = 'Blueberry'
SELECT min(`Price`) FROM `goods` WHERE `Flavor` = 'Casino'
SELECT `Id` FROM `goods` WHERE `Flavor` = 'Cheese' ORDER BY `Price` ASC LIMIT 1
SELECT `Flavor`, MAX(`Price`), MIN(`Price`), AVG(`Price`) FROM `goods` GROUP BY `Flavor` ORDER BY `Flavor`
SELECT `Flavor`, MAX(`Price`), MIN(`Price`), AVG(`Price`) FROM `goods` GROUP BY `Flavor` ORDER BY `Flavor`
SELECT `Food`, MIN(`Price`), MAX(`Price`) FROM `goods` GROUP BY `Food` ORDER BY `Food`
SELECT Food, MIN(Price), MAX(Price) FROM goods GROUP BY Food ORDER BY Food
SELECT `Date`, COUNT(*) FROM `receipts` GROUP BY `Date` ORDER BY COUNT(*) DESC LIMIT 3
SELECT `Date`, COUNT(*) FROM `receipts` GROUP BY `Date` ORDER BY COUNT(*) DESC LIMIT 3
SELECT T1.FirstName, T1.LastName, COUNT(T2.ReceiptNumber) FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId GROUP BY T1.Id ORDER BY COUNT(T2.ReceiptNumber) DESC LIMIT 1
SELECT `CustomerId`, COUNT(*) FROM `receipts` GROUP BY `CustomerId` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Date`, COUNT(DISTINCT `CustomerId`) FROM `receipts` GROUP BY `Date`
SELECT `Date`, COUNT(DISTINCT `CustomerId`) FROM `receipts` GROUP BY `Date`
SELECT T1.FirstName, T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId JOIN items AS T3 ON T2.ReceiptNumber = T3.Receipt JOIN goods AS T4 ON T3.Item = T4.Id WHERE T4.Flavor = 'Apple' AND T4.Food = 'Tart'
SELECT DISTINCT T1.FirstName, T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId JOIN items AS T3 ON T2.ReceiptNumber = T3.Receipt JOIN goods AS T4 ON T3.Item = T4.Id WHERE T4.Flavor = 'Apple' AND T4.Food = 'Tart'
SELECT `Id` FROM `goods` WHERE `Food` = 'Cookie' AND `Price` < (SELECT MIN(`Price`) FROM `goods` WHERE `Food` = 'Croissant')
SELECT `Id` FROM `goods` WHERE `Food` = 'Cookie' AND `Price` < (SELECT MIN(`Price`) FROM `goods` WHERE `Food` = 'Croissant')
SELECT DISTINCT `Id` FROM `goods` WHERE `Food` = 'Cake' AND `Price` >= (SELECT AVG(`Price`) FROM `goods` WHERE `Food` = 'Tart')
SELECT DISTINCT `Id` FROM `goods` WHERE `Food` = 'Cake' AND `Price` >= (SELECT AVG(`Price`) FROM `goods` WHERE `Food` = 'Tart')
SELECT `Id` FROM `goods` WHERE `Price` > (SELECT 2 * AVG(`Price`) FROM `goods`)
SELECT `Id` FROM `goods` WHERE `Price` > (SELECT 2 * AVG(`Price`) FROM `goods`)
SELECT `Id`, `Flavor`, `Food` FROM `goods` ORDER BY `Price`
SELECT `Id`, `Flavor`, `Food` FROM `goods` ORDER BY `Price`
SELECT `g`.`Id`, `g`.`Flavor` FROM `goods` AS `g` WHERE `g`.`Food` = 'Cake' ORDER BY `g`.`Flavor`
SELECT `Id`, `Flavor` FROM `goods` WHERE `Food` = 'Cake' ORDER BY `Flavor`
SELECT DISTINCT `T1`.`Item` FROM `items` AS `T1` JOIN `goods` AS `T2` ON `T1`.`Item` = `T2`.`Id` WHERE `T2`.`Flavor` = 'Chocolate' GROUP BY `T1`.`Item` HAVING COUNT(*) <= 10
SELECT DISTINCT `Item` FROM `items` JOIN `goods` ON `items`.`Item` = `goods`.`Id` WHERE `goods`.`Flavor` = 'Chocolate' GROUP BY `Item` HAVING COUNT(*) <= 10
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Cake' AND `Flavor` NOT IN (SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Tart')
SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Cake' EXCEPT SELECT DISTINCT `Flavor` FROM `goods` WHERE `Food` = 'Tart'
SELECT `Item`, COUNT(*) FROM `items` GROUP BY `Item` ORDER BY COUNT(*) DESC LIMIT 3
SELECT `Item`, COUNT(*) FROM `items` GROUP BY `Item` ORDER BY COUNT(*) DESC LIMIT 3
SELECT T1.CustomerId FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt JOIN goods AS T3 ON T2.Item = T3.Id GROUP BY T1.CustomerId HAVING SUM(T3.Price) > 150
SELECT T1.CustomerId FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt JOIN goods AS T3 ON T2.Item = T3.Id GROUP BY T1.CustomerId HAVING SUM(T3.Price) > 150
SELECT DISTINCT T1.CustomerId FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt JOIN goods AS T3 ON T2.Item = T3.Id GROUP BY T1.CustomerId, T3.Id HAVING AVG(T3.Price) > 5
SELECT T1.CustomerId FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt JOIN goods AS T3 ON T2.Item = T3.Id GROUP BY T1.CustomerId HAVING AVG(T3.Price) > 5
SELECT `Date` FROM `receipts` JOIN `items` ON `receipts`.`ReceiptNumber` = `items`.`Receipt` JOIN `goods` ON `items`.`Item` = `goods`.`Id` GROUP BY `Date` HAVING SUM(`Price`) > 100
SELECT `Date` FROM `receipts` JOIN `items` ON `receipts`.`ReceiptNumber` = `items`.`Receipt` JOIN `goods` ON `items`.`Item` = `goods`.`Id` GROUP BY `Date` HAVING SUM(`Price`) > 100
SELECT count(DISTINCT `Driver_ID`) FROM driver
SELECT COUNT(DISTINCT `Driver_ID`) FROM `driver`
SELECT `Make`, COUNT(*) FROM `driver` WHERE `Points` > 150 GROUP BY `Make`
SELECT `Make`, COUNT(*) FROM `driver` WHERE `Points` > 150 GROUP BY `Make`
SELECT Make, AVG(Age) FROM driver GROUP BY Make
SELECT AVG(`Age`), `Make` FROM `driver` GROUP BY `Make`
SELECT AVG(`Laps`) FROM `driver` WHERE `Age` < 20
SELECT avg(`Laps`) FROM `driver` WHERE `Age` < 20
SELECT `Manager`, `Sponsor` FROM `team` ORDER BY `Car_Owner`
SELECT `Manager`, `Sponsor` FROM `team` ORDER BY `Car_Owner`
SELECT DISTINCT `Make` FROM `team` GROUP BY `Make` HAVING COUNT(DISTINCT `Team_ID`) > 1
SELECT DISTINCT `Make` FROM `team` GROUP BY `Make` HAVING COUNT(*) > 1
SELECT DISTINCT T1.Make FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T1.Car_Owner = 'Buddy Arrington'
SELECT T1.Make FROM team AS T1 WHERE T1.Car_Owner = 'Buddy Arrington'
SELECT MAX(`Points`), MIN(`Points`) FROM `driver`
SELECT MAX(`Points`), MIN(`Points`) FROM `driver`
SELECT count(*) FROM `driver` WHERE `Points` < 150
SELECT count(*) FROM `driver` WHERE `Points` < 150
SELECT `Driver` FROM `driver` ORDER BY `Age` ASC
SELECT `Driver` FROM `driver` ORDER BY `Age` ASC
SELECT `Driver` FROM `driver` ORDER BY `Points` DESC
SELECT `Driver` FROM `driver` ORDER BY `Points` DESC
SELECT T1.`Driver`, T2.`Country` FROM driver AS T1 JOIN country AS T2 ON T1.`Country` = T2.`Country_Id`
SELECT T1.`Driver`, T2.`Country` FROM driver AS T1 JOIN country AS T2 ON T1.`Country` = T2.`Country_Id`
SELECT max(`Points`) FROM `driver` AS T1 INNER JOIN `country` AS T2 ON T1.`Country` = T2.`Country_Id` WHERE T2.`Capital` = 'Dublin'
SELECT max(`Points`) FROM `driver` AS T1 INNER JOIN `country` AS T2 ON T1.`Country` = T2.`Country_Id` WHERE T2.`Capital` = 'Dublin'
SELECT AVG(`Age`) FROM `driver` AS T1 INNER JOIN `country` AS T2 ON T1.`Country` = T2.`Country_Id` WHERE T2.`Official_native_language` = 'English'
SELECT AVG(`Age`) FROM `driver` AS T1 INNER JOIN `country` AS T2 ON T1.`Country` = T2.`Country_Id` WHERE T2.`Official_native_language` = 'English'
SELECT DISTINCT T1.Country FROM driver AS T1 JOIN country AS T2 ON T1.Country = T2.Country_Id WHERE T1.Points > 150
SELECT T1.Country FROM country AS T1 INNER JOIN driver AS T2 ON T1.Country_Id = T2.Country WHERE T2.Points > 150
SELECT T1.Capital FROM country AS T1 INNER JOIN driver AS T2 ON T1.Country_Id = T2.Country ORDER BY T2.Points DESC LIMIT 1
SELECT T1.Capital FROM country AS T1 INNER JOIN driver AS T2 ON T1.Country_Id = T2.Country ORDER BY T2.Points DESC LIMIT 1
SELECT Make, COUNT(DISTINCT Driver_ID) FROM driver GROUP BY Make
SELECT `Make`, COUNT(DISTINCT `Driver_ID`) FROM `driver` GROUP BY `Make`
SELECT T1.Make FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID GROUP BY T1.Make ORDER BY COUNT(T3.Driver_ID) DESC LIMIT 1
SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(Driver_ID) DESC LIMIT 1
SELECT DISTINCT `Make` FROM `driver` GROUP BY `Make` HAVING COUNT(DISTINCT `Driver_ID`) >= 3
SELECT DISTINCT `Make` FROM `driver` GROUP BY `Make` HAVING COUNT(DISTINCT `Driver_ID`) >= 3
SELECT `Team` FROM `team` EXCEPT SELECT T1.`Team` FROM `team` AS T1 JOIN `team_driver` AS T2 ON T1.`Team_ID` = T2.`Team_ID`
SELECT `Team` FROM `team` EXCEPT SELECT T1.`Team` FROM `team` AS T1 INNER JOIN `team_driver` AS T2 ON T1.`Team_ID` = T2.`Team_ID`
SELECT T1.Country FROM driver AS T1 WHERE T1.Make = 'Dodge' INTERSECT SELECT T1.Country FROM driver AS T1 WHERE T1.Make = 'Chevrolet'
SELECT T1.Country FROM driver AS T1 WHERE T1.Make = 'Dodge' INTERSECT SELECT T1.Country FROM driver AS T1 WHERE T1.Make = 'Chevrolet'
SELECT SUM(`Points`), AVG(`Points`) FROM `driver`
SELECT SUM(`Points`), AVG(`Points`) FROM `driver`
SELECT `Country` FROM `country` EXCEPT SELECT T1.`Country` FROM `driver` AS T1
SELECT `Country` FROM `country` EXCEPT SELECT T1.`Country` FROM `driver` AS T1
SELECT T2.Manager, T2.Sponsor FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID GROUP BY T1.Team_ID ORDER BY COUNT(T1.Driver_ID) DESC LIMIT 1
SELECT T1.Manager, T1.Sponsor FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID GROUP BY T1.Team_ID ORDER BY COUNT(T2.Driver_ID) DESC LIMIT 1
SELECT DISTINCT `Manager`, `Car_Owner` FROM `team` JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` GROUP BY `team`.`Team_ID` HAVING COUNT(DISTINCT `team_driver`.`Driver_ID`) >= 2
SELECT T.`Manager`, T.`Car_Owner` FROM team AS T JOIN team_driver AS TD ON T.`Team_ID` = TD.`Team_ID` GROUP BY T.`Team_ID` HAVING COUNT(TD.`Driver_ID`) >= 2
SELECT count(*) FROM `institution`
SELECT count(*) FROM `institution`
SELECT `Name` FROM `institution` ORDER BY `Name` ASC
SELECT `Name` FROM `institution` ORDER BY `Name`
SELECT `Name` FROM `institution` ORDER BY `Founded` ASC
SELECT `Name` FROM `institution` ORDER BY `Founded`
SELECT DISTINCT `City`, `Province` FROM `institution`
SELECT DISTINCT `City`, `Province` FROM `institution`
SELECT MAX(`Enrollment`), MIN(`Enrollment`) FROM `institution`
SELECT MAX(`Enrollment`), MIN(`Enrollment`) FROM `institution`
SELECT DISTINCT `Affiliation` FROM `institution` WHERE `City` != 'Vancouver'
SELECT DISTINCT `Affiliation` FROM `institution` WHERE `City` NOT LIKE 'Vancouver'
SELECT `Stadium` FROM `institution` ORDER BY `Capacity` DESC
SELECT `Stadium` FROM `institution` ORDER BY `Capacity` DESC
SELECT `Stadium` FROM `institution` ORDER BY `Enrollment` DESC LIMIT 1
SELECT `Stadium` FROM `institution` ORDER BY `Enrollment` DESC LIMIT 1
SELECT T1.`Name`, T2.`Nickname` FROM institution AS T1 JOIN Championship AS T2 ON T1.`Institution_ID` = T2.`Institution_ID`
SELECT T1.`Name`, T2.`Nickname` FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID
SELECT T2.Nickname FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T1.Enrollment LIMIT 1
SELECT T2.Nickname FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T1.Enrollment LIMIT 1
SELECT T1.`Name` FROM institution AS T1 JOIN Championship AS T2 ON T1.`Institution_ID` = T2.`Institution_ID` ORDER BY T2.`Number_of_Championships` DESC
SELECT T1.`Name` FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Number_of_Championships DESC
SELECT T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Number_of_Championships > 0
SELECT T1.`Name` FROM institution AS T1 JOIN Championship AS T2 ON T1.`Institution_ID` = T2.`Institution_ID` WHERE T2.`Number_of_Championships` >= 1
SELECT SUM(`Number_of_Championships`) FROM `Championship` JOIN `institution` ON `Championship`.`Institution_ID` = `institution`.`Institution_ID` WHERE `Affiliation` = 'Public'
SELECT SUM(`Number_of_Championships`) FROM `Championship` AS T1 JOIN `institution` AS T2 ON T1.`Institution_ID` = T2.`Institution_ID` WHERE T2.`Affiliation` = 'Public'
SELECT Affiliation, COUNT(Institution_ID) FROM institution GROUP BY Affiliation
SELECT Affiliation, count(Institution_ID) FROM institution GROUP BY Affiliation
SELECT Affiliation FROM `institution` GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Founded` FROM `institution` GROUP BY `Founded` HAVING COUNT(*) > 1
SELECT Founded, count(*) FROM institution GROUP BY Founded HAVING count(*)  >  1
SELECT T1.Nickname FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Capacity DESC
SELECT T1.Nickname FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Capacity DESC
SELECT SUM(`Enrollment`) FROM `institution` WHERE `City` = 'Vancouver' UNION SELECT SUM(`Enrollment`) FROM `institution` WHERE `City` = 'Calgary'
SELECT `Enrollment` FROM `institution` WHERE `City` = 'Vancouver' UNION SELECT `Enrollment` FROM `institution` WHERE `City` = 'Calgary'
SELECT `Province` FROM `institution` WHERE `Founded` < 1920 INTERSECT SELECT `Province` FROM `institution` WHERE `Founded` > 1950
SELECT Province FROM institution WHERE Founded < 1920 INTERSECT SELECT Province FROM institution WHERE Founded > 1950
SELECT COUNT(DISTINCT `Province`) FROM `institution`
SELECT count(DISTINCT `Province`) FROM `institution`
SELECT * FROM `Warehouses`
SELECT * FROM `Warehouses`
SELECT DISTINCT `Contents` FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.`Warehouse` = T2.`Code` WHERE T2.`Location` = 'New York'
SELECT DISTINCT `Contents` FROM `Boxes` AS T1 JOIN `Warehouses` AS T2 ON T1.`Warehouse` = T2.`Code` WHERE T2.`Location` = 'New York'
SELECT `Contents` FROM `Boxes` WHERE `Value` > 150
SELECT `Contents` FROM `Boxes` WHERE `Value` > 150
SELECT `Warehouse`, AVG(`Value`) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, AVG(`Value`) FROM `Boxes` GROUP BY `Warehouse`
SELECT avg(`Value`), sum(`Value`) FROM `Boxes`
SELECT AVG(`Value`), SUM(`Value`) FROM `Boxes`
SELECT AVG(`Capacity`), SUM(`Capacity`) FROM `Warehouses`
SELECT AVG(`Capacity`), SUM(`Capacity`) FROM `Warehouses`
SELECT Contents, AVG(Value), MAX(Value) FROM Boxes GROUP BY Contents
SELECT Contents, AVG(Value), MAX(Value) FROM Boxes GROUP BY Contents
SELECT Contents FROM Boxes GROUP BY Contents ORDER BY SUM(Value) DESC LIMIT 1
SELECT `Contents` FROM `Boxes` ORDER BY `Value` DESC LIMIT 1
SELECT avg(`Value`) FROM `Boxes`
SELECT avg(`Value`) FROM `Boxes`
SELECT DISTINCT `Contents` FROM `Boxes`
SELECT DISTINCT `Contents` FROM `Boxes`
SELECT COUNT(DISTINCT `Contents`) FROM `Boxes`
SELECT COUNT(DISTINCT `Contents`) FROM `Boxes`
SELECT DISTINCT `Location` FROM `Warehouses`
SELECT DISTINCT `Location` FROM `Warehouses`
SELECT `Boxes`.`Code` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code` WHERE `Warehouses`.`Location` = 'Chicago' OR `Warehouses`.`Location` = 'New York'
SELECT DISTINCT `Boxes`.`Code` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code` WHERE `Warehouses`.`Location` IN ('Chicago', 'New York')
SELECT SUM(`Value`) FROM `Boxes` WHERE `Warehouse` IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'Chicago' UNION SELECT `Code` FROM `Warehouses` WHERE `Location` = 'New York')
SELECT SUM(`Value`) FROM `Boxes` AS T1 INNER JOIN `Warehouses` AS T2 ON T1.`Warehouse` = T2.`Code` WHERE T2.`Location` = 'Chicago' UNION SELECT SUM(`Value`) FROM `Boxes` AS T1 INNER JOIN `Warehouses` AS T2 ON T1.`Warehouse` = T2.`Code` WHERE T2.`Location` = 'New York'
SELECT T1.Contents FROM Boxes AS T1 INNER JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location = 'Chicago' UNION SELECT T1.Contents FROM Boxes AS T1 INNER JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location = 'New York'
SELECT `Contents` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code` WHERE `Location` = 'Chicago' INTERSECT SELECT `Contents` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code` WHERE `Location` = 'New York'
SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Warehouse` NOT IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'New York')
SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Warehouse` NOT IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'New York')
SELECT T1.`Location` FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Rocks' EXCEPT SELECT T1.`Location` FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Scissors'
SELECT T1.`Location` FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Rocks' EXCEPT SELECT T1.`Location` FROM Warehouses AS T1 INNER JOIN Boxes AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Scissors'
SELECT T1.Code FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' UNION SELECT T1.Code FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Scissors'
SELECT DISTINCT `Warehouse` FROM `Boxes` WHERE `Contents` = 'Rocks' OR `Contents` = 'Scissors'
SELECT T1.`Location` FROM `Warehouses` AS T1 JOIN `Boxes` AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Rocks' INTERSECT SELECT T1.`Location` FROM `Warehouses` AS T1 JOIN `Boxes` AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Scissors'
SELECT T1.`Location` FROM `Warehouses` AS T1 JOIN `Boxes` AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Rocks' INTERSECT SELECT T1.`Location` FROM `Warehouses` AS T1 JOIN `Boxes` AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Scissors'
SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value`
SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value`
SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value` ASC LIMIT 1
SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value` ASC LIMIT 1
SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Value` > (SELECT AVG(`Value`) FROM `Boxes`)
SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Value` > (SELECT AVG(`Value`) FROM `Boxes`)
SELECT DISTINCT `Contents` FROM `Boxes` ORDER BY `Contents`
SELECT DISTINCT `Contents` FROM `Boxes` ORDER BY `Contents`
SELECT `Code` FROM `Boxes` WHERE `Value` > (SELECT MAX(`Value`) FROM `Boxes` WHERE `Contents` = 'Rocks')
SELECT `Code` FROM `Boxes` WHERE `Value` > (SELECT MAX(`Value`) FROM `Boxes` WHERE `Contents` = 'Rocks')
SELECT `Code`, `Contents` FROM `Boxes` WHERE `Value` > (SELECT MAX(`Value`) FROM `Boxes` WHERE `Contents` = 'Scissors')
SELECT `Code`, `Contents` FROM `Boxes` WHERE `Value` > (SELECT MAX(`Value`) FROM `Boxes` WHERE `Contents` = 'Scissors')
SELECT SUM(`Value`) FROM `Boxes` WHERE `Warehouse` = (SELECT `Code` FROM `Warehouses` ORDER BY `Capacity` DESC LIMIT 1)
SELECT SUM(`Value`) FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code` WHERE `Warehouses`.`Capacity` = (SELECT MAX(`Capacity`) FROM `Warehouses`)
SELECT `Warehouse`, AVG(`Value`) FROM `Boxes` GROUP BY `Warehouse` HAVING AVG(`Value`) > 150
SELECT `Warehouse`, AVG(`Value`) FROM `Boxes` GROUP BY `Warehouse` HAVING AVG(`Value`) > 150
SELECT Contents, SUM(Value), COUNT(*) FROM Boxes GROUP BY Contents
SELECT `Contents`, SUM(`Value`), COUNT(*) FROM `Boxes` GROUP BY `Contents`
SELECT Location, SUM(Capacity), AVG(Capacity), MAX(Capacity) FROM `Warehouses` GROUP BY Location
SELECT Location, SUM(Capacity), AVG(Capacity), MAX(Capacity) FROM `Warehouses` GROUP BY Location
SELECT SUM(`Capacity`) FROM `Warehouses`
SELECT SUM(`Capacity`) FROM `Warehouses`
SELECT T1.Location, MAX(T2.Value) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse GROUP BY T1.Location
SELECT T1.Location, MAX(T2.Value) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse GROUP BY T1.Location
SELECT `Warehouse`, COUNT(*) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, count(*) FROM `Boxes` GROUP BY `Warehouse`
SELECT COUNT(DISTINCT T1.`Location`) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.`Code` = T2.`Warehouse` WHERE T2.`Contents` = 'Rocks'
SELECT COUNT(DISTINCT `Warehouse`) FROM `Boxes` WHERE `Contents` = 'Rocks'
SELECT `Boxes`.`Code`, `Warehouses`.`Location` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code`
SELECT `Boxes`.`Code`, `Warehouses`.`Location` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code`
SELECT T1.`Code` FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.`Warehouse` = T2.`Code` WHERE T2.`Location` = 'Chicago'
SELECT DISTINCT `Boxes`.`Code` FROM `Boxes` JOIN `Warehouses` ON `Boxes`.`Warehouse` = `Warehouses`.`Code` WHERE `Warehouses`.`Location` = 'Chicago'
SELECT `Warehouse`, COUNT(*) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, COUNT(*) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, COUNT(DISTINCT `Contents`) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Warehouse`, COUNT(DISTINCT `Contents`) FROM `Boxes` GROUP BY `Warehouse`
SELECT `Code` FROM `Warehouses` WHERE `Capacity` > (SELECT AVG(`Capacity`) FROM `Warehouses`)
SELECT `Warehouse` FROM `Boxes` GROUP BY `Warehouse` HAVING COUNT(*) > (SELECT `Capacity` FROM `Warehouses` WHERE `Code` = `Warehouse`)
SELECT SUM(`Value`) FROM `Boxes` WHERE `Warehouse` NOT IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'Chicago')
SELECT SUM(`Value`) FROM `Boxes` AS T1 INNER JOIN `Warehouses` AS T2 ON T1.`Warehouse` = T2.`Code` WHERE T2.`Location` != 'Chicago'
SELECT `University_Name`, `City`, `State` FROM `university` ORDER BY `University_Name`
SELECT `University_Name`, `City`, `State` FROM `university` ORDER BY `University_Name`
SELECT count(DISTINCT `University_ID`) FROM `university` WHERE `State` = 'Illinois' UNION SELECT count(DISTINCT `University_ID`) FROM `university` WHERE `State` = 'Ohio'
SELECT count(DISTINCT `University_ID`) FROM `university` WHERE `State` = 'Illinois' UNION SELECT count(DISTINCT `University_ID`) FROM `university` WHERE `State` = 'Ohio'
SELECT max(`Enrollment`), avg(`Enrollment`), min(`Enrollment`) FROM `university`
SELECT MAX(`Enrollment`), AVG(`Enrollment`), MIN(`Enrollment`) FROM `university`
SELECT DISTINCT `Team_Name` FROM `university` WHERE `Enrollment` > (SELECT AVG(`Enrollment`) FROM `university`)
SELECT DISTINCT `Team_Name` FROM `university` WHERE `Enrollment` > (SELECT AVG(`Enrollment`) FROM `university`)
SELECT DISTINCT `Home_Conference` FROM `university`
SELECT DISTINCT `Home_Conference` FROM `university`
SELECT `Home_Conference`, COUNT(*) FROM `university` GROUP BY `Home_Conference`
SELECT `Home_Conference`, COUNT(DISTINCT `University_ID`) FROM `university` GROUP BY `Home_Conference`
SELECT State FROM `university` GROUP BY State ORDER BY COUNT(*) DESC LIMIT 1
SELECT State FROM `university` GROUP BY State ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Home_Conference` FROM `university` WHERE `Enrollment` > 2000
SELECT DISTINCT `Home_Conference` FROM `university` WHERE `Enrollment` > 2000
SELECT T1.Home_Conference FROM university AS T1 ORDER BY T1.Enrollment LIMIT 1
SELECT `Home_Conference` FROM `university` ORDER BY `Enrollment` ASC LIMIT 1
SELECT `Major_Name`, `Major_Code` FROM `major` ORDER BY `Major_Code`
SELECT `Major_Name`, `Major_Code` FROM `major` ORDER BY `Major_Code`
SELECT T2.Major_Name, T1.Rank FROM major_ranking AS T1 JOIN major AS T2 ON T1.Major_ID = T2.Major_ID JOIN university AS T3 ON T1.University_ID = T3.University_ID WHERE T3.University_Name = 'Augustana College'
SELECT T1.`Rank`, T3.`Major_Name` FROM major_ranking AS T1 JOIN university AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T1.`Major_ID` = T3.`Major_ID` WHERE T2.`University_Name` = 'Augustana College'
SELECT T1.`University_Name`, T1.`City`, T1.`State` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T2.`Rank` = 1 AND T3.`Major_Name` = 'Accounting'
SELECT T1.`University_Name`, T1.`City`, T1.`State` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Accounting' AND T2.`Rank` = 1
SELECT T1.`University_Name` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` WHERE T2.`Rank` = 1 GROUP BY T1.`University_ID` ORDER BY COUNT(T2.`Major_ID`) DESC LIMIT 1
SELECT T1.`University_Name` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` WHERE T2.`Rank` = 1 GROUP BY T1.`University_ID` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `University_Name` FROM `university` WHERE `University_ID` NOT IN (SELECT `University_ID` FROM `major_ranking` WHERE `Rank` = 1)
SELECT `University_Name` FROM `university` EXCEPT SELECT T1.`University_Name` FROM `university` AS T1 INNER JOIN `major_ranking` AS T2 ON T1.`University_ID` = T2.`University_ID` WHERE T2.`Rank` = 1
SELECT T1.`University_Name` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Accounting' INTERSECT SELECT T1.`University_Name` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Urban Education'
SELECT T1.`University_Name` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Accounting' INTERSECT SELECT T1.`University_Name` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Urban Education'
SELECT T1.`University_Name`, T2.`Rank` FROM university AS T1 JOIN overall_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` WHERE T1.`State` = 'Wisconsin'
SELECT T1.`University_Name`, T2.`Rank` FROM university AS T1 JOIN overall_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` WHERE T1.`State` = 'Wisconsin'
SELECT T1.`University_Name` FROM university AS T1 JOIN overall_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` ORDER BY T2.`Research_point` DESC LIMIT 1
SELECT T1.`University_Name` FROM university AS T1 JOIN overall_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` ORDER BY T2.`Research_point` DESC LIMIT 1
SELECT T1.`University_Name` FROM university AS T1 JOIN overall_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` ORDER BY T2.`Reputation_point` ASC
SELECT T1.`University_Name` FROM university AS T1 JOIN overall_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` ORDER BY T2.`Reputation_point` ASC
SELECT T1.`University_Name` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Accounting' AND T2.`Rank` >= 3
SELECT T1.`University_Name` FROM university AS T1 JOIN major_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` JOIN major AS T3 ON T2.`Major_ID` = T3.`Major_ID` WHERE T3.`Major_Name` = 'Accounting' AND T2.`Rank` >= 3
SELECT SUM(`T1`.`Enrollment`) FROM `university` AS `T1` JOIN `overall_ranking` AS `T2` ON `T1`.`University_ID` = `T2`.`University_ID` WHERE `T2`.`Rank` <= 5
SELECT SUM(`T1`.`Enrollment`) FROM `university` AS `T1` JOIN `overall_ranking` AS `T2` ON `T1`.`University_ID` = `T2`.`University_ID` WHERE `T2`.`Rank` <= 5
SELECT T1.`University_Name`, T2.`Citation_point` FROM university AS T1 JOIN overall_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` WHERE T2.`Rank` <= 3
SELECT T1.`University_Name`, T2.`Citation_point` FROM university AS T1 JOIN overall_ranking AS T2 ON T1.`University_ID` = T2.`University_ID` ORDER BY T2.`Reputation_point` DESC LIMIT 3
SELECT DISTINCT `State` FROM `university` WHERE `Enrollment` < 3000 GROUP BY `State` HAVING COUNT(*) > 2
SELECT DISTINCT `State` FROM `university` WHERE `Enrollment` < 3000 GROUP BY `State` HAVING COUNT(*) > 2
SELECT `Title` FROM `Movies` WHERE `Rating` IS NULL
SELECT `Title` FROM `Movies` WHERE `Rating` IS NULL
SELECT `Title` FROM `Movies` WHERE `Rating` = 'G'
SELECT `Title` FROM `Movies` WHERE `Rating` = 'G'
SELECT T1.`Title` FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` = 'Odeon'
SELECT T1.`Title` FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` = 'Odeon'
SELECT T1.`Title`, T2.`Name` FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.`Code` = T2.`Movie`
SELECT T1.`Title`, T2.`Name` FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.`Code` = T2.`Movie`
SELECT count(*) FROM `Movies` WHERE `Rating` = 'G'
SELECT count(*) FROM `Movies` WHERE `Rating` = 'G'
SELECT COUNT(DISTINCT `Movie`) FROM `MovieTheaters`
SELECT COUNT(DISTINCT `Movie`) FROM `MovieTheaters`
SELECT count(DISTINCT `Movie`) FROM `MovieTheaters`
SELECT count(DISTINCT `Movie`) FROM `MovieTheaters`
SELECT COUNT(DISTINCT `Name`) FROM `MovieTheaters`
SELECT COUNT(DISTINCT `Name`) FROM `MovieTheaters`
SELECT T1.`Rating` FROM `Movies` AS T1 JOIN `MovieTheaters` AS T2 ON T1.`Code` = T2.`Movie` WHERE T1.`Title` LIKE '%Citizen%'
SELECT T1.`Rating` FROM `Movies` AS T1 JOIN `MovieTheaters` AS T2 ON T1.`Code` = T2.`Movie` WHERE T1.`Title` LIKE '%Citizen%'
SELECT DISTINCT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating = 'G' UNION SELECT DISTINCT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating = 'PG'
SELECT DISTINCT `T2`.`Name` FROM `Movies` AS `T1` JOIN `MovieTheaters` AS `T2` ON `T1`.`Code` = `T2`.`Movie` WHERE `T1`.`Rating` = 'G' OR `T1`.`Rating` = 'PG'
SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'Odeon' OR T2.Name = 'Imperial'
SELECT T1.`Title` FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` = 'Odeon' UNION SELECT T1.`Title` FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` = 'Imperial'
SELECT T1.`Title` FROM `Movies` AS T1 INNER JOIN `MovieTheaters` AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` = 'Odeon' INTERSECT SELECT T1.`Title` FROM `Movies` AS T1 INNER JOIN `MovieTheaters` AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` = 'Imperial'
SELECT T1.`Title` FROM `Movies` AS T1 INNER JOIN `MovieTheaters` AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` = 'Odeon' INTERSECT SELECT T1.`Title` FROM `Movies` AS T1 INNER JOIN `MovieTheaters` AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` = 'Imperial'
SELECT DISTINCT `Title` FROM `Movies` WHERE `Code` NOT IN (SELECT `Movie` FROM `MovieTheaters` WHERE `Name` = 'Odeon' AND `Movie` IS NOT NULL)
SELECT DISTINCT T1.`Title` FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.`Code` = T2.`Movie` WHERE T2.`Name` != 'Odeon'
SELECT `Title` FROM `Movies` ORDER BY `Title`
SELECT `Title` FROM `Movies` ORDER BY `Title`
SELECT `Title` FROM `Movies` ORDER BY `Rating`
SELECT `Title` FROM `Movies` ORDER BY `Rating`
SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code GROUP BY T1.Name ORDER BY COUNT(T1.Movie) DESC LIMIT 1
SELECT T1.`Name` FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.`Movie` = T2.`Code` GROUP BY T1.`Code` ORDER BY COUNT(T1.`Movie`) DESC LIMIT 1
SELECT T1.Title FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T2.Movie ORDER BY COUNT(T2.Code) DESC LIMIT 1
SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T2.Movie ORDER BY COUNT(*) DESC LIMIT 1
SELECT Rating, COUNT(*) FROM `Movies` GROUP BY Rating
SELECT Rating, COUNT(Code) FROM `Movies` GROUP BY Rating
SELECT COUNT(*) FROM `Movies` WHERE `Rating` IS NOT NULL
SELECT count(*) FROM `Movies` WHERE `Rating` IS NOT NULL
SELECT DISTINCT `Name` FROM `MovieTheaters` WHERE `Movie` IS NOT NULL
SELECT DISTINCT `Name` FROM `MovieTheaters` WHERE `Movie` IS NOT NULL
SELECT `Name` FROM `MovieTheaters` WHERE `Movie` IS NULL
SELECT `Name` FROM `MovieTheaters` WHERE `Movie` IS NULL
SELECT T2.`Name` FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.`Code` = T2.`Movie` WHERE T1.`Rating` = 'G'
SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating = 'G'
SELECT `Title` FROM `Movies`
SELECT DISTINCT `Title` FROM `Movies`
SELECT DISTINCT `Rating` FROM `Movies`
SELECT DISTINCT `Rating` FROM `Movies`
SELECT `Code`, `Title`, `Rating` FROM `Movies` WHERE `Rating` IS NULL
SELECT `Code`, `Title`, `Rating` FROM `Movies` WHERE `Rating` IS NULL
SELECT `Title` FROM `Movies` WHERE `Code` NOT IN (SELECT `Movie` FROM `MovieTheaters` WHERE `Movie` IS NOT NULL)
SELECT `Title` FROM `Movies` EXCEPT SELECT T1.`Title` FROM `Movies` AS T1 INNER JOIN `MovieTheaters` AS T2 ON T1.`Code` = T2.`Movie`
SELECT T2.Name FROM Package AS T1 JOIN Client AS T2 ON T1.Recipient = T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1
SELECT T2.Name FROM Package AS T1 JOIN Client AS T2 ON T1.Recipient = T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1
SELECT SUM(`Weight`) FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT SUM(`Weight`) FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT `Position` FROM `Employee` WHERE `Name` = 'Amy Wong'
SELECT `Position` FROM `Employee` WHERE `Name` = 'Amy Wong'
SELECT `Salary`, `Position` FROM `Employee` WHERE `Name` = 'Turanga Leela'
SELECT `Salary`, `Position` FROM `Employee` WHERE `Name` = 'Turanga Leela'
SELECT avg(`Salary`) FROM `Employee` WHERE `Position` = 'Intern'
SELECT avg(`Salary`) FROM `Employee` WHERE `Position` = 'Intern'
SELECT DISTINCT `Level` FROM `Has_Clearance`
SELECT T1.`Level` FROM `Has_Clearance` AS T1 JOIN `Employee` AS T2 ON T1.`Employee` = T2.`EmployeeID` WHERE T2.`Position` = 'physician'
SELECT `PackageNumber` FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT count(*) FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.Sender = T2.AccountNumber WHERE T2.Name = 'Leo Wong'
SELECT T1.`PackageNumber` FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.`Recipient` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT T1.`PackageNumber` FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.`Recipient` = T2.`AccountNumber` WHERE T2.`Name` = 'Leo Wong'
SELECT `Package`.* FROM `Package` JOIN `Client` AS `SenderClient` ON `Package`.`Sender` = `SenderClient`.`AccountNumber` JOIN `Client` AS `RecipientClient` ON `Package`.`Recipient` = `RecipientClient`.`AccountNumber` WHERE `SenderClient`.`Name` = 'Leo Wong' OR `RecipientClient`.`Name` = 'Leo Wong'
SELECT DISTINCT `PackageNumber` FROM `Package` WHERE `Sender` = (SELECT `AccountNumber` FROM `Client` WHERE `Name` = 'Leo Wong') OR `Recipient` = (SELECT `AccountNumber` FROM `Client` WHERE `Name` = 'Leo Wong')
SELECT COUNT(T1.`PackageNumber`) FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` INNER JOIN `Client` AS T3 ON T1.`Recipient` = T3.`AccountNumber` WHERE T2.`Name` = 'Ogden Wernstrom' AND T3.`Name` = 'Leo Wong'
SELECT COUNT(T1.`PackageNumber`) FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` INNER JOIN `Client` AS T3 ON T1.`Recipient` = T3.`AccountNumber` WHERE T2.`Name` = 'Ogden Wernstrom' AND T3.`Name` = 'Leo Wong'
SELECT T1.Contents FROM Package AS T1 JOIN Client AS T2 ON T1.Sender = T2.AccountNumber WHERE T2.Name = 'John Zoidfarb'
SELECT T1.Contents FROM Package AS T1 JOIN Client AS T2 ON T1.Sender = T2.AccountNumber WHERE T2.Name = 'John Zoidfarb'
SELECT `PackageNumber`, `Weight` FROM `Package` JOIN `Client` ON `Package`.`Sender` = `Client`.`AccountNumber` WHERE `Client`.`Name` LIKE '%John%' ORDER BY `Weight` DESC LIMIT 1
SELECT `PackageNumber`, `Weight` FROM `Package` JOIN `Client` ON `Package`.`Sender` = `Client`.`AccountNumber` WHERE `Client`.`Name` LIKE 'John%' ORDER BY `Weight` DESC LIMIT 1
SELECT `PackageNumber`, `Weight` FROM `Package` ORDER BY `Weight` ASC LIMIT 3
SELECT `PackageNumber`, `Weight` FROM `Package` ORDER BY `Weight` ASC LIMIT 3
SELECT T1.`Name`, COUNT(T2.`Sender`) FROM Client AS T1 JOIN Package AS T2 ON T1.`AccountNumber` = T2.`Sender` GROUP BY T2.`Sender` ORDER BY COUNT(T2.`Sender`) DESC LIMIT 1
SELECT T1.Name, COUNT(T2.PackageNumber) FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T1.AccountNumber ORDER BY COUNT(T2.PackageNumber) DESC LIMIT 1
SELECT T1.`Name`, COUNT(T2.`PackageNumber`) FROM Client AS T1 JOIN Package AS T2 ON T1.`AccountNumber` = T2.`Recipient` GROUP BY T1.`AccountNumber` ORDER BY COUNT(T2.`PackageNumber`) ASC LIMIT 1
SELECT MIN(T1.packageNumber), T2.Name FROM Package AS T1 JOIN Client AS T2 ON T1.Recipient = T2.AccountNumber
SELECT T1.Name FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T2.Sender HAVING COUNT(*) > 1
SELECT DISTINCT T1.Name FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T2.Sender HAVING count(*)  >  1
SELECT `Coordinates` FROM `Planet` WHERE `Name` = 'Mars'
SELECT `Coordinates` FROM `Planet` WHERE `Name` = 'Mars'
SELECT `Name`, `Coordinates` FROM `Planet` ORDER BY `Name`
SELECT `Name`, `Coordinates` FROM `Planet` ORDER BY `Name`
SELECT T1.`ShipmentID` FROM `Shipment` AS T1 JOIN `Employee` AS T2 ON T1.`Manager` = T2.`EmployeeID` WHERE T2.`Name` = 'Phillip J. Fry'
SELECT T1.`ShipmentID` FROM `Shipment` AS T1 INNER JOIN `Employee` AS T2 ON T1.`Manager` = T2.`EmployeeID` WHERE T2.`Name` = 'Phillip J. Fry'
SELECT DISTINCT `Date` FROM `Shipment`
SELECT DISTINCT `Date` FROM `Shipment`
SELECT `ShipmentID` FROM `Shipment` WHERE `Planet` = (SELECT `PlanetID` FROM `Planet` WHERE `Name` = 'Mars')
SELECT `ShipmentID` FROM `Shipment` WHERE `Planet` = (SELECT `PlanetID` FROM `Planet` WHERE `Name` = 'Mars')
SELECT T1.`ShipmentID` FROM Shipment AS T1 INNER JOIN Planet AS T2 ON T1.`Planet` = T2.`PlanetID` INNER JOIN Employee AS T3 ON T1.`Manager` = T3.`EmployeeID` WHERE T2.`Name` = 'Mars' AND T3.`Name` = 'Turanga Leela'
SELECT T1.`ShipmentID` FROM `Shipment` AS T1 JOIN `Planet` AS T2 ON T1.`Planet` = T2.`PlanetID` JOIN `Employee` AS T3 ON T1.`Manager` = T3.`EmployeeID` WHERE T2.`Name` = 'Mars' AND T3.`Name` = 'Turanga Leela'
SELECT `ShipmentID` FROM `Shipment` WHERE `Planet` = (SELECT `PlanetID` FROM `Planet` WHERE `Name` = 'Mars') UNION SELECT `ShipmentID` FROM `Shipment` WHERE `Manager` = (SELECT `EmployeeID` FROM `Employee` WHERE `Name` = 'Turanga Leela')
SELECT T1.`ShipmentID` FROM Shipment AS T1 INNER JOIN Planet AS T2 ON T1.`Planet` = T2.`PlanetID` INNER JOIN Employee AS T3 ON T1.`Manager` = T3.`EmployeeID` WHERE T2.`Name` = 'Mars' AND T3.`Name` = 'Turanga Leela'
SELECT T1.`Name`, COUNT(T2.`ShipmentID`) FROM Planet AS T1 JOIN Shipment AS T2 ON T1.`PlanetID` = T2.`Planet` GROUP BY T1.`Name`
SELECT `Planet`, COUNT(*) FROM `Shipment` GROUP BY `Planet`
SELECT T1.Name FROM Planet AS T1 JOIN Shipment AS T2 ON T1.PlanetID = T2.Planet GROUP BY T1.PlanetID ORDER BY COUNT(T2.ShipmentID) DESC LIMIT 1
SELECT T1.Name FROM Planet AS T1 JOIN Shipment AS T2 ON T1.PlanetID = T2.Planet GROUP BY T2.Planet ORDER BY COUNT(T2.ShipmentID) DESC LIMIT 1
SELECT T1.Name, COUNT(T2.ShipmentID) FROM Employee AS T1 JOIN Shipment AS T2 ON T1.EmployeeID = T2.Manager GROUP BY T1.EmployeeID
SELECT COUNT(T1.`ShipmentID`), T2.`Name` FROM Shipment AS T1 JOIN Employee AS T2 ON T1.`Manager` = T2.`EmployeeID` GROUP BY T1.`Manager`
SELECT SUM(`T1`.`Weight`) FROM `Package` AS `T1` JOIN `Shipment` AS `T2` ON `T1`.`Shipment` = `T2`.`ShipmentID` JOIN `Planet` AS `T3` ON `T2`.`Planet` = `T3`.`PlanetID` WHERE `T3`.`Name` = 'Mars'
SELECT sum(`T1`.`Weight`) FROM `Package` AS `T1` JOIN `Shipment` AS `T2` ON `T1`.`Shipment` = `T2`.`ShipmentID` JOIN `Planet` AS `T3` ON `T2`.`Planet` = `T3`.`PlanetID` WHERE `T3`.`Name` = 'Mars'
SELECT T2.Name, SUM(T1.Weight) FROM Package AS T1 JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T2 ON T3.Planet = T2.PlanetID GROUP BY T2.Name
SELECT SUM(`Weight`), T2.`Name` FROM `Package` AS T1 JOIN `Shipment` AS T3 ON T1.`Shipment` = T3.`ShipmentID` JOIN `Planet` AS T2 ON T3.`Planet` = T2.`PlanetID` GROUP BY T3.`Planet`
SELECT T1.Name FROM Planet AS T1 JOIN Shipment AS T2 ON T1.PlanetID = T2.Planet JOIN Package AS T3 ON T2.ShipmentID = T3.Shipment GROUP BY T1.PlanetID HAVING SUM(T3.Weight) > 30
SELECT T2.Name FROM Package AS T1 JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T2 ON T3.Planet = T2.PlanetID GROUP BY T2.Name HAVING SUM(T1.Weight) > 30
SELECT T1.`PackageNumber` FROM `Package` AS T1 INNER JOIN `Shipment` AS T2 ON T1.`Shipment` = T2.`ShipmentID` INNER JOIN `Planet` AS T3 ON T2.`Planet` = T3.`PlanetID` INNER JOIN `Client` AS T4 ON T1.`Sender` = T4.`AccountNumber` WHERE T3.`Name` = 'Omicron Persei 8' AND T4.`Name` = 'Zapp Brannigan'
SELECT COUNT(T1.`PackageNumber`) FROM `Package` AS T1 INNER JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` INNER JOIN `Shipment` AS T3 ON T1.`Shipment` = T3.`ShipmentID` INNER JOIN `Planet` AS T4 ON T3.`Planet` = T4.`PlanetID` WHERE T2.`Name` = 'Zapp Brannigan' AND T4.`Name` = 'Omicron Persei 8'
SELECT `PackageNumber` FROM `Package` AS T1 JOIN `Shipment` AS T2 ON T1.`Shipment` = T2.`ShipmentID` JOIN `Planet` AS T3 ON T2.`Planet` = T3.`PlanetID` WHERE T3.`Name` = 'Omicron Persei 8' UNION SELECT `PackageNumber` FROM `Package` AS T1 JOIN `Client` AS T2 ON T1.`Sender` = T2.`AccountNumber` WHERE T2.`Name` = 'Zapp Brannigan'
SELECT COUNT(T1.PackageNumber) FROM Package AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID JOIN Client AS T4 ON T1.Sender = T4.AccountNumber WHERE T3.Name = 'Omicron Persei 8' UNION SELECT COUNT(T1.PackageNumber) FROM Package AS T1 JOIN Client AS T2 ON T1.Sender = T2.AccountNumber WHERE T2.Name = 'Zapp Brannigan'
SELECT `PackageNumber`, `Weight` FROM `Package` WHERE `Weight` BETWEEN 10 AND 30
SELECT `PackageNumber`, `Weight` FROM `Package` WHERE `Weight` BETWEEN 10 AND 30
SELECT T1.Name FROM Employee AS T1 WHERE T1.EmployeeID NOT IN (SELECT T2.Employee FROM Has_Clearance AS T2 JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = 'Mars')
SELECT T1.Name FROM Employee AS T1 INNER JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee WHERE T2.Planet != (SELECT PlanetID FROM Planet WHERE Name = 'Mars')
SELECT T1.Name FROM Employee AS T1 JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = 'Omicron Persei 8'
SELECT T1.Name FROM Employee AS T1 INNER JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee WHERE T2.Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Omicron Persei 8')
SELECT T1.`Name` FROM `Planet` AS T1 INNER JOIN `Has_Clearance` AS T2 ON T1.`PlanetID` = T2.`Planet` GROUP BY T1.`PlanetID` HAVING COUNT(T2.`Employee`) = 1
SELECT DISTINCT T1.Name FROM Planet AS T1 JOIN Has_Clearance AS T2 ON T1.PlanetID = T2.Planet JOIN Employee AS T3 ON T2.Employee = T3.EmployeeID GROUP BY T1.PlanetID HAVING COUNT(T3.EmployeeID) = 1
SELECT `Name` FROM `Employee` WHERE `Salary` BETWEEN 5000 AND 10000
SELECT `Name` FROM `Employee` WHERE `Salary` BETWEEN 5000 AND 10000
SELECT `Name` FROM `Employee` WHERE `Salary` > (SELECT AVG(`Salary`) FROM `Employee`) OR `Salary` > 5000
SELECT `Name` FROM `Employee` WHERE `Salary` > (SELECT AVG(`Salary`) FROM `Employee`) OR `Salary` > 5000
SELECT COUNT(DISTINCT T1.`Employee`) FROM Has_Clearance AS T1 INNER JOIN Planet AS T2 ON T1.`Planet` = T2.`PlanetID` WHERE T2.`Name` = 'Mars' AND NOT EXISTS (SELECT 1 FROM Has_Clearance AS T3 WHERE T3.`Employee` = T1.`Employee` AND T3.`Planet` = T2.`PlanetID`);
SELECT COUNT(DISTINCT T1.`Employee`) FROM Has_Clearance AS T1 JOIN Planet AS T2 ON T1.`Planet` = T2.`PlanetID` WHERE T2.`Name` = 'Mars' AND NOT EXISTS (SELECT 1 FROM Has_Clearance AS T3 WHERE T3.`Employee` = T1.`Employee` AND T3.`Planet` = T2.`PlanetID`);
SELECT COUNT(*) FROM `game`
SELECT COUNT(*) FROM `game`
SELECT `Title`, `Developers` FROM `game` ORDER BY `Units_sold_Millions` DESC
SELECT `Title`, `Developers` FROM `game` ORDER BY `Units_sold_Millions` DESC
SELECT AVG(`Units_sold_Millions`) FROM `game` WHERE `Developers` != 'Nintendo';
SELECT avg(`Units_sold_Millions`) FROM `game` WHERE `Developers` != 'Nintendo';
SELECT DISTINCT `Platform_name`, `Market_district` FROM `platform`
SELECT `Platform_name`, `Market_district` FROM `platform`
SELECT `Platform_name`, `Platform_ID` FROM `platform` WHERE `Download_rank` = 1
SELECT `Platform_name`, `Platform_ID` FROM `platform` WHERE `Download_rank` = 1
SELECT MAX(`Rank_of_the_year`), MIN(`Rank_of_the_year`) FROM `player`
SELECT MAX(`Rank_of_the_year`), MIN(`Rank_of_the_year`) FROM `player`
SELECT count(*) FROM `player` WHERE `Rank_of_the_year` < 3
SELECT count(*) FROM `player` WHERE `Rank_of_the_year` <= 3
SELECT `Player_name` FROM `player` ORDER BY `Player_name` ASC
SELECT `Player_name` FROM `player` ORDER BY `Player_name`
SELECT `Player_name`, `College` FROM `player` ORDER BY `Rank_of_the_year` DESC
SELECT `Player_name`, `College` FROM `player` ORDER BY `Rank_of_the_year` DESC
SELECT T1.Player_name, T1.Rank_of_the_year FROM player AS T1 INNER JOIN game_player AS T2 ON T1.Player_ID = T2.Player_ID INNER JOIN game AS T3 ON T2.Game_ID = T3.Game_ID WHERE T3.Title = 'Super Mario World'
SELECT T1.`Player_name`, T1.`Rank_of_the_year` FROM player AS T1 JOIN game_player AS T2 ON T1.`Player_ID` = T2.`Player_ID` JOIN game AS T3 ON T2.`Game_ID` = T3.`Game_ID` WHERE T3.`Title` = 'Super Mario World'
SELECT DISTINCT T1.Developers FROM game AS T1 INNER JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID INNER JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College = 'Auburn'
SELECT DISTINCT T1.Developers FROM game AS T1 INNER JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID INNER JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College = 'Auburn'
SELECT AVG(T1.`Units_sold_Millions`) FROM game AS T1 INNER JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID INNER JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.Position = 'Guard'
SELECT AVG(T1.Units_sold_Millions) FROM game AS T1 INNER JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID INNER JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.Position = 'Guard'
SELECT T1.`Title`, T2.`Platform_name` FROM game AS T1 JOIN platform AS T2 ON T1.`Platform_ID` = T2.`Platform_ID`
SELECT T1.`Title`, T2.`Platform_name` FROM game AS T1 JOIN platform AS T2 ON T1.`Platform_ID` = T2.`Platform_ID`
SELECT T1.Title FROM game AS T1 INNER JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T2.Market_district = 'Asia' UNION SELECT T1.Title FROM game AS T1 INNER JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T2.Market_district = 'USA'
SELECT T1.Title FROM game AS T1 INNER JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T2.Market_district = 'Asia' UNION SELECT T1.Title FROM game AS T1 INNER JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T2.Market_district = 'USA'
SELECT Franchise, COUNT(*) FROM `game` GROUP BY Franchise
SELECT Franchise, COUNT(*) FROM `game` GROUP BY Franchise
SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1
SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT `Franchise` FROM `game` GROUP BY `Franchise` HAVING COUNT(*) >= 2
SELECT DISTINCT `Franchise` FROM `game` GROUP BY `Franchise` HAVING COUNT(*) >= 2
SELECT `Player_name` FROM `player` WHERE `Player_ID` NOT IN (SELECT `Player_ID` FROM `game_player`)
SELECT `Player_name` FROM `player` WHERE `Player_ID` NOT IN (SELECT `Player_ID` FROM `game_player`)
SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College = 'Oklahoma' INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College = 'Auburn'
SELECT DISTINCT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College = 'Oklahoma' UNION SELECT DISTINCT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College = 'Auburn'
SELECT DISTINCT `Franchise` FROM `game`
SELECT DISTINCT `Franchise` FROM `game`
SELECT DISTINCT `T1`.`Title` FROM `game` AS `T1` JOIN `game_player` AS `T2` ON `T1`.`Game_ID` = `T2`.`Game_ID` JOIN `player` AS `T3` ON `T2`.`Player_ID` = `T3`.`Player_ID` WHERE `T3`.`Position` != 'Guard'
SELECT DISTINCT `Title` FROM `game` WHERE `Game_ID` NOT IN (SELECT `Game_ID` FROM `game_player` JOIN `player` ON `game_player`.`Player_ID` = `player`.`Player_ID` WHERE `Position` = 'Guard')
SELECT `Name` FROM `press` ORDER BY `Year_Profits_billion` DESC
SELECT `Name` FROM `press` ORDER BY `Year_Profits_billion` DESC
SELECT Name FROM `press` WHERE Year_Profits_billion > 15 UNION SELECT Name FROM `press` WHERE Month_Profits_billion > 1
SELECT `Name` FROM `press` WHERE `Year_Profits_billion` > 15 UNION SELECT `Name` FROM `press` WHERE `Month_Profits_billion` > 1
SELECT AVG(`Year_Profits_billion`), MAX(`Year_Profits_billion`) FROM `press`
SELECT AVG(`Year_Profits_billion`), MAX(`Year_Profits_billion`) FROM `press`
SELECT `Name` FROM `press` ORDER BY `Month_Profits_billion` DESC LIMIT 1
SELECT `Name` FROM `press` ORDER BY `Month_Profits_billion` DESC LIMIT 1
SELECT `Name` FROM `press` WHERE `Month_Profits_billion` = (SELECT MIN(`Month_Profits_billion`) FROM `press`) UNION SELECT `Name` FROM `press` WHERE `Month_Profits_billion` = (SELECT MAX(`Month_Profits_billion`) FROM `press`)
SELECT `Name` FROM `press` WHERE `Month_Profits_billion` = (SELECT MAX(`Month_Profits_billion`) FROM `press`) OR `Month_Profits_billion` = (SELECT MIN(`Month_Profits_billion`) FROM `press`)
SELECT count(*) FROM `author` WHERE `Age` < 30
SELECT COUNT(*) FROM `author` WHERE `Age` < 30
SELECT Gender, AVG(Age) FROM author GROUP BY Gender
SELECT Gender, AVG(Age) FROM author GROUP BY Gender
SELECT Gender, COUNT(Author_ID) FROM author WHERE Age > 30 GROUP BY Gender
SELECT Gender, COUNT(*) FROM author WHERE Age > 30 GROUP BY Gender
SELECT `Title` FROM `book` ORDER BY `Release_date` DESC
SELECT `Title` FROM `book` ORDER BY `Release_date` DESC
SELECT `Book_Series`, COUNT(*) FROM `book` GROUP BY `Book_Series`
SELECT `Book_Series`, COUNT(*) FROM `book` GROUP BY `Book_Series`
SELECT `Title`, `Release_date` FROM `book` ORDER BY `Sale_Amount` DESC LIMIT 5
SELECT `Title`, `Release_date` FROM `book` ORDER BY `Sale_Amount` DESC LIMIT 5
SELECT `Book_Series` FROM `book` WHERE `Sale_Amount` > 1000 INTERSECT SELECT `Book_Series` FROM `book` WHERE `Sale_Amount` < 500
SELECT `Book_Series` FROM `book` WHERE `Sale_Amount` > 1000 INTERSECT SELECT `Book_Series` FROM `book` WHERE `Sale_Amount` < 500
SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Book_Series = 'MM' INTERSECT SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Book_Series = 'LT'
SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Book_Series = 'MM' INTERSECT SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Book_Series = 'LT'
SELECT `Name`, `Age` FROM `author` WHERE NOT EXISTS (SELECT 1 FROM `book` WHERE `author`.`Author_ID` = `book`.`Author_ID`)
SELECT `Name` FROM `author` EXCEPT SELECT T1.`Name` FROM `author` AS T1 INNER JOIN `book` AS T2 ON T1.`Author_ID` = T2.`Author_ID`
SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T1.Author_ID HAVING COUNT(*)  >  1
SELECT DISTINCT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T2.Author_ID HAVING COUNT(*)  >  1
SELECT T1.Title, T3.Name, T2.Name FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID JOIN author AS T3 ON T1.Author_ID = T3.Author_ID ORDER BY T1.Sale_Amount DESC LIMIT 3
SELECT T1.`Title`, T3.`Name`, T2.`Name` FROM book AS T1 JOIN press AS T2 ON T1.`Press_ID` = T2.`Press_ID` JOIN author AS T3 ON T1.`Author_ID` = T3.`Author_ID` ORDER BY T1.`Sale_Amount` DESC LIMIT 3
SELECT T1.`Name`, SUM(T2.`Sale_Amount`) FROM press AS T1 JOIN book AS T2 ON T1.`Press_ID` = T2.`Press_ID` GROUP BY T1.`Name`
SELECT T1.`Name`, SUM(T2.`Sale_Amount`) FROM press AS T1 JOIN book AS T2 ON T1.`Press_ID` = T2.`Press_ID` GROUP BY T1.`Name`
SELECT `p`.`Name`, COUNT(`b`.`Book_ID`) FROM `book` AS `b` JOIN `press` AS `p` ON `b`.`Press_ID` = `p`.`Press_ID` WHERE `b`.`Sale_Amount` > 1000 GROUP BY `p`.`Press_ID`
SELECT T1.`Name`, COUNT(T2.`Book_ID`) FROM press AS T1 JOIN book AS T2 ON T1.`Press_ID` = T2.`Press_ID` WHERE T2.`Sale_Amount` > 1000 GROUP BY T1.`Press_ID`
SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID ORDER BY T2.Sale_Amount DESC LIMIT 1
SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID ORDER BY T2.Sale_Amount DESC LIMIT 1
SELECT T1.Name, T1.Gender FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T1.Author_ID ORDER BY COUNT(T2.Book_ID) DESC LIMIT 1
SELECT T1.Name, T1.Gender FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T1.Author_ID ORDER BY COUNT(T2.Book_ID) DESC LIMIT 1
SELECT T1.Name FROM author AS T1 WHERE NOT EXISTS (SELECT 1 FROM book AS T2 JOIN press AS T3 ON T2.Press_ID = T3.Press_ID WHERE T1.Author_ID = T2.Author_ID AND T3.Name = 'Accor')
SELECT T1.Name FROM author AS T1 WHERE NOT EXISTS (SELECT 1 FROM book AS T2 JOIN press AS T3 ON T2.Press_ID = T3.Press_ID WHERE T1.Author_ID = T2.Author_ID AND T3.Name = 'Accor')
SELECT T1.`Name`, T1.`Year_Profits_billion` FROM press AS T1 JOIN book AS T2 ON T1.`Press_ID` = T2.`Press_ID` GROUP BY T1.`Press_ID` HAVING COUNT(T2.`Book_ID`) > 2
SELECT T1.`Name`, T1.`Year_Profits_billion` FROM press AS T1 JOIN book AS T2 ON T1.`Press_ID` = T2.`Press_ID` GROUP BY T1.`Press_ID` HAVING COUNT(T2.`Book_ID`) > 2
SELECT COUNT(DISTINCT `author_name`) FROM `Authors`
SELECT DISTINCT `author_name` FROM `Authors`
SELECT `author_name`, `other_details` FROM `Authors`
SELECT `other_details` FROM `Authors` WHERE `author_name` = 'Addison Denesik'
SELECT COUNT(*) FROM `Documents`
SELECT `author_name` FROM `Documents` WHERE `document_id` = 4
SELECT `Authors`.`author_name` FROM `Authors` JOIN `Documents` ON `Authors`.`author_name` = `Documents`.`author_name` WHERE `Documents`.`document_name` = 'Travel to Brazil'
SELECT count(*) FROM `Documents` WHERE `author_name` = 'Era Kerluke'
SELECT `document_name`, `document_description` FROM `Documents`
SELECT `document_id`, `document_name` FROM `Documents` WHERE `author_name` = 'Bianka Cummings'
SELECT T1.author_name, T1.other_details FROM Authors AS T1 INNER JOIN Documents AS T2 ON T1.author_name = T2.author_name WHERE T2.document_name = 'Travel to China'
SELECT `author_name`, COUNT(*) FROM `Documents` GROUP BY `author_name`
SELECT T1.author_name FROM Documents AS T1 GROUP BY T1.author_name ORDER BY COUNT(T1.document_id) DESC LIMIT 1
SELECT T1.author_name FROM Authors AS T1 JOIN Documents AS T2 ON T1.author_name = T2.author_name GROUP BY T1.author_name HAVING COUNT(T2.document_id) >= 2
SELECT COUNT(*) FROM `Business_Processes`
SELECT `next_process_id`, `process_name`, `process_description` FROM `Business_Processes` WHERE `process_id` = 9
SELECT T1.`process_name` FROM `Business_Processes` AS T1 JOIN `Business_Processes` AS T2 ON T1.`process_id` = T2.`next_process_id` WHERE T2.`process_id` = 9
SELECT COUNT(*) FROM `Process_Outcomes`
SELECT `process_outcome_code`, `process_outcome_description` FROM `Process_Outcomes`
SELECT `process_outcome_description` FROM `Process_Outcomes` WHERE `process_outcome_code` = 'working'
SELECT COUNT(*) FROM `Process_Status`
SELECT DISTINCT `process_status_code`, `process_status_description` FROM `Process_Status`
SELECT `process_status_description` FROM `Process_Status` WHERE `process_status_code` = 'ct'
SELECT COUNT(*) FROM `Staff`
SELECT `staff_id`, `staff_details` FROM `Staff`
SELECT `staff_details` FROM `Staff` WHERE `staff_id` = 100
SELECT COUNT(DISTINCT `staff_role_code`) FROM `Ref_Staff_Roles`
SELECT `staff_role_code`, `staff_role_description` FROM `Ref_Staff_Roles`
SELECT `staff_role_description` FROM `Ref_Staff_Roles` WHERE `staff_role_code` = 'HR'
SELECT COUNT(DISTINCT `document_id`) FROM `Documents_Processes`
SELECT DISTINCT `T1`.`process_id` FROM `Documents_Processes` AS `T1`
SELECT `document_id` FROM `Documents` EXCEPT SELECT `document_id` FROM `Documents_Processes`
SELECT DISTINCT T1.`process_id` FROM `Documents_Processes` AS T1 INNER JOIN `Documents` AS T2 ON T1.`document_id` = T2.`document_id`
SELECT T1.process_outcome_description, T2.process_status_description FROM Process_Outcomes AS T1 JOIN Documents_Processes AS T3 ON T1.process_outcome_code = T3.process_outcome_code JOIN Process_Status AS T2 ON T2.process_status_code = T3.process_status_code WHERE T3.document_id = 0
SELECT T1.`process_name` FROM `Business_Processes` AS T1 JOIN `Documents_Processes` AS T2 ON T1.`process_id` = T2.`process_id` JOIN `Documents` AS T3 ON T2.`document_id` = T3.`document_id` WHERE T3.`document_name` = 'Travel to Brazil'
SELECT `process_id`, COUNT(`document_id`) FROM `Documents_Processes` GROUP BY `process_id`
SELECT COUNT(DISTINCT `staff_id`) FROM `Staff_in_Processes` WHERE `document_id` = 0 AND `process_id` = 9
SELECT T1.`staff_id`, COUNT(T2.`document_id`) FROM Staff AS T1 JOIN Staff_in_Processes AS T2 ON T1.`staff_id` = T2.`staff_id` GROUP BY T1.`staff_id`
SELECT T1.staff_role_code, COUNT(T2.document_id) FROM Staff_in_Processes AS T1 JOIN Documents_Processes AS T2 ON T1.document_id = T2.document_id AND T1.process_id = T2.process_id GROUP BY T1.staff_role_code
SELECT DISTINCT `staff_role_code` FROM `Staff_in_Processes` WHERE `staff_id` = 3
SELECT COUNT(*) FROM `Agencies`
SELECT COUNT(*) FROM `Agencies`
SELECT `agency_id`, `agency_details` FROM `Agencies`
SELECT `agency_id`, `agency_details` FROM `Agencies`
SELECT COUNT(*) FROM `Clients`
SELECT COUNT(*) FROM `Clients`
SELECT `client_id`, `client_details` FROM `Clients`
SELECT DISTINCT `client_id`, `client_details` FROM `Clients`
SELECT `agency_id`, COUNT(`client_id`) FROM `Clients` GROUP BY `agency_id`
SELECT `agency_id`, COUNT(`client_id`) FROM `Clients` GROUP BY `agency_id`
SELECT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id ORDER BY COUNT(T2.client_id) DESC LIMIT 1
SELECT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id ORDER BY COUNT(T2.client_id) DESC LIMIT 1
SELECT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Agencies` JOIN `Clients` ON `Agencies`.`agency_id` = `Clients`.`agency_id` GROUP BY `Agencies`.`agency_id` HAVING COUNT(DISTINCT `Clients`.`client_id`) >= 2
SELECT `agency_id`, `agency_details` FROM `Agencies` INTERSECT SELECT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id HAVING COUNT(T2.client_id) >= 2
SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id = T2.agency_id WHERE T1.client_details = 'Mac'
SELECT T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id WHERE T2.client_details = 'Mac'
SELECT T1.client_details, T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id = T2.agency_id
SELECT T1.`client_details`, T2.`agency_details` FROM Clients AS T1 JOIN Agencies AS T2 ON T1.`agency_id` = T2.`agency_id`
SELECT `sic_code`, COUNT(*) FROM `Clients` GROUP BY `sic_code`
SELECT `sic_code`, COUNT(DISTINCT `client_id`) FROM `Clients` GROUP BY `sic_code`
SELECT `client_id`, `client_details` FROM `Clients` WHERE `sic_code` = 'Bad'
SELECT `client_details` FROM `Clients` WHERE `sic_code` = 'Bad'
SELECT DISTINCT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Agencies` JOIN `Clients` ON `Agencies`.`agency_id` = `Clients`.`agency_id`
SELECT DISTINCT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Agencies` JOIN `Clients` ON `Agencies`.`agency_id` = `Clients`.`agency_id`
SELECT `agency_id` FROM `Agencies` EXCEPT SELECT `agency_id` FROM `Clients`
SELECT `agency_id` FROM `Agencies` EXCEPT SELECT `agency_id` FROM `Clients`
SELECT COUNT(*) FROM `Invoices`
SELECT count(*) FROM `Invoices`
SELECT T1.`invoice_id`, T1.`invoice_status`, T1.`invoice_details` FROM Invoices AS T1 JOIN Clients AS T2 ON T1.`client_id` = T2.`client_id`
SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices`
SELECT `client_id`, COUNT(`invoice_id`) FROM `Invoices` GROUP BY `client_id`
SELECT `client_id`, COUNT(*) FROM `Invoices` GROUP BY `client_id`
SELECT T1.`client_id`, T2.`client_details` FROM Invoices AS T1 JOIN Clients AS T2 ON T1.`client_id` = T2.`client_id` GROUP BY T1.`client_id` ORDER BY COUNT(T1.`invoice_id`) DESC LIMIT 1
SELECT T1.`client_id`, T1.`client_details` FROM `Clients` AS T1 JOIN `Invoices` AS T2 ON T1.`client_id` = T2.`client_id` GROUP BY T1.`client_id` ORDER BY COUNT(T2.`invoice_id`) DESC LIMIT 1
SELECT DISTINCT `client_id` FROM `Invoices` GROUP BY `client_id` HAVING COUNT(*)  >=  2
SELECT DISTINCT `client_id` FROM `Invoices` GROUP BY `client_id` HAVING COUNT(*) >= 2
SELECT `invoice_status`, COUNT(*) FROM `Invoices` GROUP BY `invoice_status`
SELECT `invoice_status`, COUNT(*) FROM `Invoices` GROUP BY `invoice_status`
SELECT `invoice_status` FROM `Invoices` GROUP BY `invoice_status` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `invoice_status` FROM `Invoices` GROUP BY `invoice_status` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.`invoice_status`, T1.`invoice_details`, T2.`client_id`, T2.`client_details`, T3.`agency_id`, T3.`agency_details` FROM Invoices AS T1 JOIN Clients AS T2 ON T1.`client_id` = T2.`client_id` JOIN Agencies AS T3 ON T2.`agency_id` = T3.`agency_id`
SELECT T1.`invoice_status`, T1.`invoice_details`, T2.`client_id`, T2.`client_details`, T2.`agency_id`, T3.`agency_details` FROM Invoices AS T1 JOIN Clients AS T2 ON T1.`client_id` = T2.`client_id` JOIN Agencies AS T3 ON T2.`agency_id` = T3.`agency_id`
SELECT DISTINCT `meeting_type` FROM `Meetings`
SELECT DISTINCT `meeting_type`, `other_details` FROM `Meetings`
SELECT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`
SELECT DISTINCT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`
SELECT T1.`payment_id`, T1.`payment_details` FROM Payments AS T1 JOIN Invoices AS T2 ON T1.`invoice_id` = T2.`invoice_id` WHERE T2.`invoice_status` = 'Working'
SELECT T1.`payment_id`, T1.`payment_details` FROM Payments AS T1 JOIN Invoices AS T2 ON T1.`invoice_id` = T2.`invoice_id` WHERE T2.`invoice_status` = 'Working'
SELECT `invoice_id`, `invoice_status` FROM `Invoices` WHERE NOT EXISTS (SELECT 1 FROM `Payments` WHERE `Invoices`.`invoice_id` = `Payments`.`invoice_id`)
SELECT T1.`invoice_id`, T1.`invoice_status` FROM `Invoices` AS T1 LEFT JOIN `Payments` AS T2 ON T1.`invoice_id` = T2.`invoice_id` WHERE T2.`payment_id` IS NULL
SELECT COUNT(*) FROM `Payments`
SELECT COUNT(*) FROM `Payments`
SELECT `payment_id`, `invoice_id`, `payment_details` FROM `Payments`
SELECT `payment_id`, `invoice_id`, `payment_details` FROM `Payments`
SELECT DISTINCT `I`.`invoice_id`, `I`.`invoice_status` FROM `Invoices` AS `I` JOIN `Payments` AS `P` ON `I`.`invoice_id` = `P`.`invoice_id`
SELECT DISTINCT `i`.`invoice_id`, `i`.`invoice_status` FROM `Invoices` AS `i` JOIN `Payments` AS `p` ON `i`.`invoice_id` = `p`.`invoice_id`
SELECT `Invoices`.`invoice_id`, COUNT(`Payments`.`payment_id`) FROM `Invoices` LEFT JOIN `Payments` ON `Invoices`.`invoice_id` = `Payments`.`invoice_id` GROUP BY `Invoices`.`invoice_id`
SELECT `invoice_id`, COUNT(*) FROM `Payments` GROUP BY `invoice_id`
SELECT T1.`invoice_id`, T1.`invoice_status`, T1.`invoice_details` FROM `Invoices` AS T1 JOIN `Payments` AS T2 ON T1.`invoice_id` = T2.`invoice_id` GROUP BY T1.`invoice_id` ORDER BY COUNT(T2.`payment_id`) DESC LIMIT 1
SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices` WHERE `invoice_id` IN (SELECT `invoice_id` FROM `Payments` GROUP BY `invoice_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT COUNT(*) FROM `Staff`
SELECT COUNT(*) FROM `Staff`
SELECT `Agencies`.`agency_id`, COUNT(`Staff`.`staff_id`) FROM `Agencies` JOIN `Staff` ON `Agencies`.`agency_id` = `Staff`.`agency_id` GROUP BY `Agencies`.`agency_id`
SELECT `agency_id`, COUNT(`staff_id`) FROM `Staff` GROUP BY `agency_id`
SELECT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Agencies` JOIN `Staff` ON `Agencies`.`agency_id` = `Staff`.`agency_id` GROUP BY `Agencies`.`agency_id` ORDER BY COUNT(`Staff`.`staff_id`) DESC LIMIT 1
SELECT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Agencies` JOIN `Staff` ON `Agencies`.`agency_id` = `Staff`.`agency_id` GROUP BY `Agencies`.`agency_id` ORDER BY COUNT(`Staff`.`staff_id`) DESC LIMIT 1
SELECT `meeting_outcome`, COUNT(*) FROM `Meetings` GROUP BY `meeting_outcome`
SELECT `meeting_outcome`, COUNT(*) FROM `Meetings` GROUP BY `meeting_outcome`
SELECT `client_id`, COUNT(*) FROM `Meetings` GROUP BY `client_id`
SELECT `client_id`, COUNT(*) FROM `Meetings` GROUP BY `client_id`
SELECT `meeting_type`, COUNT(*) FROM `Meetings` GROUP BY `meeting_type`
SELECT `meeting_type`, COUNT(*) FROM `Meetings` GROUP BY `meeting_type`
SELECT T1.`meeting_id`, T1.`meeting_outcome`, T1.`meeting_type`, T2.`client_details` FROM Meetings AS T1 JOIN Clients AS T2 ON T1.`client_id` = T2.`client_id`
SELECT T1.meeting_id, T1.meeting_outcome, T1.meeting_type, T3.client_details FROM Meetings AS T1 JOIN Clients AS T3 ON T1.client_id = T3.client_id
SELECT `meeting_id`, COUNT(`staff_id`) FROM `Staff_in_Meetings` GROUP BY `meeting_id`
SELECT `meeting_id`, COUNT(DISTINCT `staff_id`) FROM `Staff_in_Meetings` GROUP BY `meeting_id`
SELECT `staff_id`, COUNT(T1.`meeting_id`) FROM Staff_in_Meetings AS T1 JOIN Meetings AS T2 ON T1.`meeting_id` = T2.`meeting_id` GROUP BY `staff_id` ORDER BY COUNT(T1.`meeting_id`) LIMIT 1
SELECT `staff_id` FROM `Staff_in_Meetings` GROUP BY `staff_id` ORDER BY COUNT(`meeting_id`) ASC LIMIT 1
SELECT COUNT(DISTINCT `staff_id`) FROM `Staff_in_Meetings`
SELECT COUNT(DISTINCT `staff_id`) FROM `Staff_in_Meetings`
SELECT COUNT(DISTINCT `staff_id`) FROM `Staff` EXCEPT SELECT DISTINCT `staff_id` FROM `Staff_in_Meetings`
SELECT COUNT(DISTINCT `staff_id`) FROM `Staff` EXCEPT SELECT DISTINCT `staff_id` FROM `Staff_in_Meetings`
SELECT `client_id`, `client_details` FROM `Clients` WHERE `client_id` IN (SELECT `client_id` FROM `Meetings`) UNION SELECT `client_id`, `client_details` FROM `Clients` WHERE `client_id` IN (SELECT `client_id` FROM `Invoices`)
SELECT `client_id`, `client_details` FROM `Clients` WHERE `client_id` IN (SELECT `client_id` FROM `Meetings`) UNION SELECT `client_id`, `client_details` FROM `Clients` WHERE `client_id` IN (SELECT `client_id` FROM `Invoices`)
SELECT T1.`staff_id`, T1.`staff_details` FROM Staff AS T1 JOIN Staff_in_Meetings AS T2 ON T1.`staff_id` = T2.`staff_id` WHERE T1.`staff_details` LIKE '%s%' GROUP BY T1.`staff_id`
SELECT T1.`staff_id`, T1.`staff_details` FROM Staff AS T1 JOIN Staff_in_Meetings AS T2 ON T1.`staff_id` = T2.`staff_id` WHERE T1.`staff_details` LIKE '%s%' GROUP BY T1.`staff_id`
SELECT T1.`client_id`, T1.`sic_code`, T1.`agency_id` FROM Clients AS T1 JOIN Meetings AS T2 ON T1.`client_id` = T2.`client_id` JOIN Invoices AS T3 ON T1.`client_id` = T3.`client_id` GROUP BY T1.`client_id` HAVING COUNT(T2.`meeting_id`) = 1
SELECT T1.`client_id`, T1.`sic_code`, T1.`agency_id` FROM `Clients` AS T1 INNER JOIN `Meetings` AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN `Invoices` AS T3 ON T1.`client_id` = T3.`client_id` GROUP BY T1.`client_id` HAVING COUNT(T2.`meeting_id`) = 1
SELECT `Meetings`.`start_date_time`, `Meetings`.`end_date_time`, `Clients`.`client_details`, `Staff`.`staff_details` FROM `Meetings` JOIN `Clients` ON `Meetings`.`client_id` = `Clients`.`client_id` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` JOIN `Staff` ON `Staff_in_Meetings`.`staff_id` = `Staff`.`staff_id`
SELECT `Meetings`.`start_date_time`, `Meetings`.`end_date_time`, `Clients`.`client_details`, `Staff`.`staff_details` FROM `Meetings` JOIN `Clients` ON `Meetings`.`client_id` = `Clients`.`client_id` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` JOIN `Staff` ON `Staff_in_Meetings`.`staff_id` = `Staff`.`staff_id`
